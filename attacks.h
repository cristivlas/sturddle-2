/* Auto-generated attack tables */
#pragma once

#include <cstdint>
#include <cstdlib>
#include <functional>
#include <vector>

namespace chess {
class AttackTable {
    size_t (* const _hash)(uint64_t);
    std::vector<uint64_t> _data;

public:
    AttackTable(size_t (*hash)(uint64_t), std::function<void(std::vector<uint64_t>&)> init)
        : _hash(hash) { init(_data);
    }
    inline uint64_t operator[] (uint64_t k) const {
        return _data[_hash(k)];
    }
};

inline uint64_t mul_shift_31_81dadef4bc2dd44d(uint64_t key) {
    key *= 9357036318526133325ULL;
    key >>= 31;
    return key;
}

inline uint64_t mul_shift_33_e36aa5c613612997(uint64_t key) {
    key *= 16387092464288213399ULL;
    key >>= 33;
    return key;
}

static inline uint64_t mul_shift_31_81dadef4bc2dd44d_rshift_11(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d(key) >> 11;
}

static inline uint64_t mul_shift_31_81dadef4bc2dd44d_rshift_15(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d(key) >> 15;
}

static inline uint64_t mul_shift_31_81dadef4bc2dd44d_rshift_17(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d(key) >> 17;
}

static inline uint64_t mul_shift_31_81dadef4bc2dd44d_rshift_19(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d(key) >> 19;
}

static inline uint64_t mul_shift_31_81dadef4bc2dd44d_rshift_21(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d(key) >> 21;
}

static inline uint64_t mul_shift_31_81dadef4bc2dd44d_rshift_3(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d(key) >> 3;
}

static inline uint64_t mul_shift_31_81dadef4bc2dd44d_rshift_5(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d(key) >> 5;
}

static inline uint64_t mul_shift_31_81dadef4bc2dd44d_rshift_7(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d(key) >> 7;
}

static inline uint64_t mul_shift_31_81dadef4bc2dd44d_rshift_9(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d(key) >> 9;
}

static inline uint64_t mul_shift_33_e36aa5c613612997_rshift_11(uint64_t key) {
    return mul_shift_33_e36aa5c613612997(key) >> 11;
}

static inline uint64_t mul_shift_33_e36aa5c613612997_rshift_15(uint64_t key) {
    return mul_shift_33_e36aa5c613612997(key) >> 15;
}

static inline uint64_t mul_shift_33_e36aa5c613612997_rshift_17(uint64_t key) {
    return mul_shift_33_e36aa5c613612997(key) >> 17;
}

static inline uint64_t mul_shift_33_e36aa5c613612997_rshift_7(uint64_t key) {
    return mul_shift_33_e36aa5c613612997(key) >> 7;
}

static inline uint64_t mul_shift_33_e36aa5c613612997_rshift_9(uint64_t key) {
    return mul_shift_33_e36aa5c613612997(key) >> 9;
}

template<size_t Mask>
inline size_t mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d_rshift_11(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d_rshift_15(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d_rshift_17(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_31_81dadef4bc2dd44d_rshift_19_mixin(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d_rshift_19(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_31_81dadef4bc2dd44d_rshift_21_mixin(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d_rshift_21(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_31_81dadef4bc2dd44d_rshift_3_mixin(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d_rshift_3(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_31_81dadef4bc2dd44d_rshift_5_mixin(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d_rshift_5(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d_rshift_7(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_31_81dadef4bc2dd44d_rshift_9_mixin(uint64_t key) {
    return mul_shift_31_81dadef4bc2dd44d_rshift_9(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_33_e36aa5c613612997_rshift_11_mixin(uint64_t key) {
    return mul_shift_33_e36aa5c613612997_rshift_11(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_33_e36aa5c613612997_rshift_15_mixin(uint64_t key) {
    return mul_shift_33_e36aa5c613612997_rshift_15(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_33_e36aa5c613612997_rshift_17_mixin(uint64_t key) {
    return mul_shift_33_e36aa5c613612997_rshift_17(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_33_e36aa5c613612997_rshift_7_mixin(uint64_t key) {
    return mul_shift_33_e36aa5c613612997_rshift_7(key) & Mask;
}

template<size_t Mask>
inline size_t mul_shift_33_e36aa5c613612997_rshift_9_mixin(uint64_t key) {
    return mul_shift_33_e36aa5c613612997_rshift_9(key) & Mask;
}

template<size_t S> struct RightShift {
   static inline size_t hash(uint64_t u) {
       return (u >> S);
   }
};


static const AttackTable BB_FILE_ATTACKS[64] = {
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_21_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(497);
        data[0] = 0x0101010101010100ULL;
        data[1] = 0x0000000000000100ULL;
        data[17] = 0x0000000000010100ULL;
        data[24] = 0x0000000000010100ULL;
        data[34] = 0x0000010101010100ULL;
        data[41] = 0x0000000001010100ULL;
        data[45] = 0x0000000000000100ULL;
        data[61] = 0x0000000000000100ULL;
        data[62] = 0x0000000000000100ULL;
        data[66] = 0x0000000000010100ULL;
        data[78] = 0x0000000000000100ULL;
        data[83] = 0x0000000001010100ULL;
        data[122] = 0x0000000000000100ULL;
        data[127] = 0x0000000000010100ULL;
        data[139] = 0x0000000000000100ULL;
        data[143] = 0x0000000000010100ULL;
        data[144] = 0x0000000001010100ULL;
        data[160] = 0x0000000101010100ULL;
        data[164] = 0x0000000000000100ULL;
        data[171] = 0x0000000000000100ULL;
        data[181] = 0x0000000000000100ULL;
        data[188] = 0x0000000000000100ULL;
        data[204] = 0x0000000000010100ULL;
        data[205] = 0x0000000000000100ULL;
        data[221] = 0x0000010101010100ULL;
        data[222] = 0x0000000000000100ULL;
        data[226] = 0x0000000000000100ULL;
        data[232] = 0x0000000000000100ULL;
        data[242] = 0x0000000000000100ULL;
        data[246] = 0x0000000000010100ULL;
        data[249] = 0x0000000000000100ULL;
        data[253] = 0x0000000000010100ULL;
        data[263] = 0x0000000101010100ULL;
        data[267] = 0x0000000000000100ULL;
        data[270] = 0x0000000001010100ULL;
        data[283] = 0x0000000000000100ULL;
        data[288] = 0x0000000000010100ULL;
        data[304] = 0x0000000001010100ULL;
        data[308] = 0x0000000000010100ULL;
        data[315] = 0x0000000000010100ULL;
        data[324] = 0x0001010101010100ULL;
        data[331] = 0x0000000001010100ULL;
        data[349] = 0x0000000000010100ULL;
        data[352] = 0x0000000000000100ULL;
        data[365] = 0x0000000001010100ULL;
        data[368] = 0x0000000000000100ULL;
        data[386] = 0x0000000000000100ULL;
        data[393] = 0x0000000000000100ULL;
        data[402] = 0x0000000000000100ULL;
        data[409] = 0x0000000000000100ULL;
        data[413] = 0x0000000000000100ULL;
        data[429] = 0x0000000000000100ULL;
        data[434] = 0x0000000000010100ULL;
        data[447] = 0x0000000000000100ULL;
        data[450] = 0x0000000101010100ULL;
        data[454] = 0x0000000000000100ULL;
        data[464] = 0x0000000000000100ULL;
        data[468] = 0x0000000000010100ULL;
        data[470] = 0x0000000000000100ULL;
        data[475] = 0x0000000000010100ULL;
        data[484] = 0x0000000101010100ULL;
        data[491] = 0x0000000001010100ULL;
        data[495] = 0x0000000000010100ULL;
        data[496] = 0x0000000000000100ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x0202020202020200ULL;
        data[5] = 0x0000000000020200ULL;
        data[17] = 0x0000000000000200ULL;
        data[21] = 0x0000000000000200ULL;
        data[22] = 0x0000000002020200ULL;
        data[32] = 0x0000000000000200ULL;
        data[38] = 0x0000020202020200ULL;
        data[55] = 0x0000000000000200ULL;
        data[61] = 0x0000000002020200ULL;
        data[88] = 0x0000000000000200ULL;
        data[94] = 0x0000000000020200ULL;
        data[100] = 0x0000000000000200ULL;
        data[111] = 0x0000000000000200ULL;
        data[117] = 0x0000000000020200ULL;
        data[123] = 0x0000000000000200ULL;
        data[126] = 0x0000000000000200ULL;
        data[128] = 0x0002020202020200ULL;
        data[132] = 0x0000000000020200ULL;
        data[139] = 0x0000000000000200ULL;
        data[149] = 0x0000000000000200ULL;
        data[150] = 0x0000000002020200ULL;
        data[155] = 0x0000000000020200ULL;
        data[161] = 0x0000000000000200ULL;
        data[166] = 0x0000020202020200ULL;
        data[189] = 0x0000000002020200ULL;
        data[194] = 0x0000000000000200ULL;
        data[217] = 0x0000000000000200ULL;
        data[222] = 0x0000000000020200ULL;
        data[228] = 0x0000000000000200ULL;
        data[233] = 0x0000000000000200ULL;
        data[234] = 0x0000000202020200ULL;
        data[245] = 0x0000000000020200ULL;
        data[251] = 0x0000000000000200ULL;
        data[256] = 0x0000000000000200ULL;
        data[257] = 0x0000000002020200ULL;
        data[260] = 0x0000000000020200ULL;
        data[267] = 0x0000000000000200ULL;
        data[272] = 0x0000000202020200ULL;
        data[283] = 0x0000000000020200ULL;
        data[289] = 0x0000000000000200ULL;
        data[295] = 0x0000000002020200ULL;
        data[322] = 0x0000000000000200ULL;
        data[328] = 0x0000000000020200ULL;
        data[345] = 0x0000000000000200ULL;
        data[351] = 0x0000000000020200ULL;
        data[361] = 0x0000000000000200ULL;
        data[362] = 0x0000000202020200ULL;
        data[366] = 0x0000000000020200ULL;
        data[378] = 0x0000000000000200ULL;
        data[384] = 0x0000000000000200ULL;
        data[385] = 0x0000000002020200ULL;
        data[389] = 0x0000000000020200ULL;
        data[400] = 0x0000000202020200ULL;
        data[401] = 0x0000000000000200ULL;
        data[416] = 0x0000000000000200ULL;
        data[423] = 0x0000000002020200ULL;
        data[439] = 0x0000000000000200ULL;
        data[456] = 0x0000000000020200ULL;
        data[472] = 0x0000000000000200ULL;
        data[479] = 0x0000000000020200ULL;
        data[494] = 0x0000000000020200ULL;
        data[495] = 0x0000000000000200ULL;
        data[506] = 0x0000000000000200ULL;
        data[510] = 0x0000000000000200ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_9_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(508);
        data[0] = 0x0404040404040400ULL;
        data[3] = 0x0000000000000400ULL;
        data[11] = 0x0000000000040400ULL;
        data[19] = 0x0000000000040400ULL;
        data[33] = 0x0000000004040400ULL;
        data[39] = 0x0000000000000400ULL;
        data[41] = 0x0000000404040400ULL;
        data[53] = 0x0000000000040400ULL;
        data[58] = 0x0000000000000400ULL;
        data[60] = 0x0000000000040400ULL;
        data[80] = 0x0000000000000400ULL;
        data[93] = 0x0000000000000400ULL;
        data[97] = 0x0000000004040400ULL;
        data[100] = 0x0000000000000400ULL;
        data[112] = 0x0000000000000400ULL;
        data[116] = 0x0000000000040400ULL;
        data[134] = 0x0000000000000400ULL;
        data[138] = 0x0000000004040400ULL;
        data[151] = 0x0000040404040400ULL;
        data[154] = 0x0000000000000400ULL;
        data[158] = 0x0000000000040400ULL;
        data[170] = 0x0000000000040400ULL;
        data[190] = 0x0000000000000400ULL;
        data[192] = 0x0000000404040400ULL;
        data[198] = 0x0000000000000400ULL;
        data[209] = 0x0000000000000400ULL;
        data[211] = 0x0000000000040400ULL;
        data[217] = 0x0000000000000400ULL;
        data[231] = 0x0000000000000400ULL;
        data[239] = 0x0000000000000400ULL;
        data[248] = 0x0000000004040400ULL;
        data[251] = 0x0000000000000400ULL;
        data[256] = 0x0004040404040400ULL;
        data[259] = 0x0000000000000400ULL;
        data[267] = 0x0000000000040400ULL;
        data[275] = 0x0000000000040400ULL;
        data[289] = 0x0000000004040400ULL;
        data[295] = 0x0000000000000400ULL;
        data[297] = 0x0000000404040400ULL;
        data[309] = 0x0000000000040400ULL;
        data[314] = 0x0000000000000400ULL;
        data[316] = 0x0000000000040400ULL;
        data[336] = 0x0000000000000400ULL;
        data[349] = 0x0000000000000400ULL;
        data[353] = 0x0000000004040400ULL;
        data[356] = 0x0000000000000400ULL;
        data[368] = 0x0000000000000400ULL;
        data[372] = 0x0000000000040400ULL;
        data[390] = 0x0000000000000400ULL;
        data[394] = 0x0000000004040400ULL;
        data[407] = 0x0000040404040400ULL;
        data[410] = 0x0000000000000400ULL;
        data[414] = 0x0000000000040400ULL;
        data[426] = 0x0000000000040400ULL;
        data[446] = 0x0000000000000400ULL;
        data[448] = 0x0000000404040400ULL;
        data[454] = 0x0000000000000400ULL;
        data[465] = 0x0000000000000400ULL;
        data[467] = 0x0000000000040400ULL;
        data[473] = 0x0000000000000400ULL;
        data[487] = 0x0000000000000400ULL;
        data[495] = 0x0000000000000400ULL;
        data[504] = 0x0000000004040400ULL;
        data[507] = 0x0000000000000400ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(508);
        data[0] = 0x0808080808080800ULL;
        data[1] = 0x0000000000080800ULL;
        data[8] = 0x0000000000000800ULL;
        data[15] = 0x0000000008080800ULL;
        data[22] = 0x0000000000000800ULL;
        data[29] = 0x0000000000080800ULL;
        data[34] = 0x0000000000000800ULL;
        data[37] = 0x0000000000000800ULL;
        data[41] = 0x0000080808080800ULL;
        data[48] = 0x0000000000000800ULL;
        data[55] = 0x0000000000080800ULL;
        data[64] = 0x0000000000000800ULL;
        data[68] = 0x0000000808080800ULL;
        data[70] = 0x0000000000080800ULL;
        data[82] = 0x0000000000080800ULL;
        data[90] = 0x0000000000000800ULL;
        data[97] = 0x0000000000080800ULL;
        data[104] = 0x0000000000000800ULL;
        data[118] = 0x0000000000000800ULL;
        data[123] = 0x0000000000080800ULL;
        data[133] = 0x0000000000000800ULL;
        data[137] = 0x0000080808080800ULL;
        data[151] = 0x0000000000080800ULL;
        data[159] = 0x0000000000000800ULL;
        data[166] = 0x0000000000080800ULL;
        data[186] = 0x0000000000000800ULL;
        data[190] = 0x0000000000000800ULL;
        data[193] = 0x0000000000080800ULL;
        data[219] = 0x0000000000080800ULL;
        data[224] = 0x0000000008080800ULL;
        data[255] = 0x0000000000000800ULL;
        data[260] = 0x0000000000000800ULL;
        data[286] = 0x0000000000000800ULL;
        data[289] = 0x0000000000080800ULL;
        data[293] = 0x0000000008080800ULL;
        data[313] = 0x0000000000000800ULL;
        data[320] = 0x0000000008080800ULL;
        data[328] = 0x0000000000000800ULL;
        data[342] = 0x0000000000000800ULL;
        data[346] = 0x0000000808080800ULL;
        data[356] = 0x0000000000000800ULL;
        data[361] = 0x0000000008080800ULL;
        data[375] = 0x0000000000080800ULL;
        data[382] = 0x0000000000000800ULL;
        data[389] = 0x0000000008080800ULL;
        data[397] = 0x0000000000000800ULL;
        data[409] = 0x0000000000000800ULL;
        data[411] = 0x0000000000000800ULL;
        data[416] = 0x0008080808080800ULL;
        data[424] = 0x0000000000000800ULL;
        data[431] = 0x0000000008080800ULL;
        data[438] = 0x0000000000000800ULL;
        data[442] = 0x0000000808080800ULL;
        data[445] = 0x0000000000080800ULL;
        data[450] = 0x0000000000000800ULL;
        data[457] = 0x0000000008080800ULL;
        data[464] = 0x0000000000000800ULL;
        data[471] = 0x0000000000080800ULL;
        data[478] = 0x0000000000000800ULL;
        data[480] = 0x0000000000000800ULL;
        data[484] = 0x0000000808080800ULL;
        data[493] = 0x0000000000000800ULL;
        data[498] = 0x0000000000080800ULL;
        data[507] = 0x0000000000000800ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(508);
        data[0] = 0x1010101010101000ULL;
        data[3] = 0x0000000000001000ULL;
        data[11] = 0x0000000000101000ULL;
        data[19] = 0x0000000000101000ULL;
        data[33] = 0x0000000010101000ULL;
        data[39] = 0x0000000000001000ULL;
        data[41] = 0x0000001010101000ULL;
        data[53] = 0x0000000000101000ULL;
        data[58] = 0x0000000000001000ULL;
        data[60] = 0x0000000000101000ULL;
        data[80] = 0x0000000000001000ULL;
        data[93] = 0x0000000000001000ULL;
        data[97] = 0x0000000010101000ULL;
        data[100] = 0x0000000000001000ULL;
        data[112] = 0x0000000000001000ULL;
        data[116] = 0x0000000000101000ULL;
        data[134] = 0x0000000000001000ULL;
        data[138] = 0x0000000010101000ULL;
        data[151] = 0x0000101010101000ULL;
        data[154] = 0x0000000000001000ULL;
        data[158] = 0x0000000000101000ULL;
        data[170] = 0x0000000000101000ULL;
        data[190] = 0x0000000000001000ULL;
        data[192] = 0x0000001010101000ULL;
        data[198] = 0x0000000000001000ULL;
        data[209] = 0x0000000000001000ULL;
        data[211] = 0x0000000000101000ULL;
        data[217] = 0x0000000000001000ULL;
        data[231] = 0x0000000000001000ULL;
        data[239] = 0x0000000000001000ULL;
        data[248] = 0x0000000010101000ULL;
        data[251] = 0x0000000000001000ULL;
        data[256] = 0x0010101010101000ULL;
        data[259] = 0x0000000000001000ULL;
        data[267] = 0x0000000000101000ULL;
        data[275] = 0x0000000000101000ULL;
        data[289] = 0x0000000010101000ULL;
        data[295] = 0x0000000000001000ULL;
        data[297] = 0x0000001010101000ULL;
        data[309] = 0x0000000000101000ULL;
        data[314] = 0x0000000000001000ULL;
        data[316] = 0x0000000000101000ULL;
        data[336] = 0x0000000000001000ULL;
        data[349] = 0x0000000000001000ULL;
        data[353] = 0x0000000010101000ULL;
        data[356] = 0x0000000000001000ULL;
        data[368] = 0x0000000000001000ULL;
        data[372] = 0x0000000000101000ULL;
        data[390] = 0x0000000000001000ULL;
        data[394] = 0x0000000010101000ULL;
        data[407] = 0x0000101010101000ULL;
        data[410] = 0x0000000000001000ULL;
        data[414] = 0x0000000000101000ULL;
        data[426] = 0x0000000000101000ULL;
        data[446] = 0x0000000000001000ULL;
        data[448] = 0x0000001010101000ULL;
        data[454] = 0x0000000000001000ULL;
        data[465] = 0x0000000000001000ULL;
        data[467] = 0x0000000000101000ULL;
        data[473] = 0x0000000000001000ULL;
        data[487] = 0x0000000000001000ULL;
        data[495] = 0x0000000000001000ULL;
        data[504] = 0x0000000010101000ULL;
        data[507] = 0x0000000000001000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x2020202020202000ULL;
        data[5] = 0x0000000000202000ULL;
        data[17] = 0x0000000000002000ULL;
        data[21] = 0x0000000000002000ULL;
        data[22] = 0x0000000020202000ULL;
        data[32] = 0x0000000000002000ULL;
        data[38] = 0x0000202020202000ULL;
        data[55] = 0x0000000000002000ULL;
        data[61] = 0x0000000020202000ULL;
        data[88] = 0x0000000000002000ULL;
        data[94] = 0x0000000000202000ULL;
        data[100] = 0x0000000000002000ULL;
        data[111] = 0x0000000000002000ULL;
        data[117] = 0x0000000000202000ULL;
        data[123] = 0x0000000000002000ULL;
        data[126] = 0x0000000000002000ULL;
        data[128] = 0x0020202020202000ULL;
        data[132] = 0x0000000000202000ULL;
        data[139] = 0x0000000000002000ULL;
        data[149] = 0x0000000000002000ULL;
        data[150] = 0x0000000020202000ULL;
        data[155] = 0x0000000000202000ULL;
        data[161] = 0x0000000000002000ULL;
        data[166] = 0x0000202020202000ULL;
        data[189] = 0x0000000020202000ULL;
        data[194] = 0x0000000000002000ULL;
        data[217] = 0x0000000000002000ULL;
        data[222] = 0x0000000000202000ULL;
        data[228] = 0x0000000000002000ULL;
        data[233] = 0x0000000000002000ULL;
        data[234] = 0x0000002020202000ULL;
        data[245] = 0x0000000000202000ULL;
        data[251] = 0x0000000000002000ULL;
        data[256] = 0x0000000000002000ULL;
        data[257] = 0x0000000020202000ULL;
        data[260] = 0x0000000000202000ULL;
        data[267] = 0x0000000000002000ULL;
        data[272] = 0x0000002020202000ULL;
        data[283] = 0x0000000000202000ULL;
        data[289] = 0x0000000000002000ULL;
        data[295] = 0x0000000020202000ULL;
        data[322] = 0x0000000000002000ULL;
        data[328] = 0x0000000000202000ULL;
        data[345] = 0x0000000000002000ULL;
        data[351] = 0x0000000000202000ULL;
        data[361] = 0x0000000000002000ULL;
        data[362] = 0x0000002020202000ULL;
        data[366] = 0x0000000000202000ULL;
        data[378] = 0x0000000000002000ULL;
        data[384] = 0x0000000000002000ULL;
        data[385] = 0x0000000020202000ULL;
        data[389] = 0x0000000000202000ULL;
        data[400] = 0x0000002020202000ULL;
        data[401] = 0x0000000000002000ULL;
        data[416] = 0x0000000000002000ULL;
        data[423] = 0x0000000020202000ULL;
        data[439] = 0x0000000000002000ULL;
        data[456] = 0x0000000000202000ULL;
        data[472] = 0x0000000000002000ULL;
        data[479] = 0x0000000000202000ULL;
        data[494] = 0x0000000000202000ULL;
        data[495] = 0x0000000000002000ULL;
        data[506] = 0x0000000000002000ULL;
        data[510] = 0x0000000000002000ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x4040404040404000ULL;
        data[6] = 0x0000000000004000ULL;
        data[9] = 0x0000404040404000ULL;
        data[15] = 0x0000000000004000ULL;
        data[18] = 0x0000004040404000ULL;
        data[28] = 0x0000004040404000ULL;
        data[43] = 0x0000000000004000ULL;
        data[45] = 0x0000000000004000ULL;
        data[48] = 0x0000000000404000ULL;
        data[62] = 0x0000000000004000ULL;
        data[64] = 0x0000000000004000ULL;
        data[67] = 0x0000000000404000ULL;
        data[92] = 0x0000000000004000ULL;
        data[97] = 0x0000000000404000ULL;
        data[101] = 0x0000000000004000ULL;
        data[106] = 0x0000000000404000ULL;
        data[110] = 0x0000000000004000ULL;
        data[115] = 0x0000000000404000ULL;
        data[120] = 0x0000000000004000ULL;
        data[125] = 0x0000000000404000ULL;
        data[141] = 0x0000000000004000ULL;
        data[153] = 0x0000404040404000ULL;
        data[159] = 0x0000000000004000ULL;
        data[166] = 0x0000000040404000ULL;
        data[172] = 0x0000004040404000ULL;
        data[184] = 0x0000000040404000ULL;
        data[189] = 0x0000000000004000ULL;
        data[199] = 0x0000000000004000ULL;
        data[208] = 0x0000000000004000ULL;
        data[217] = 0x0000000000004000ULL;
        data[245] = 0x0000000000004000ULL;
        data[250] = 0x0000000000404000ULL;
        data[258] = 0x0000000000004000ULL;
        data[263] = 0x0000000000404000ULL;
        data[264] = 0x0000000000004000ULL;
        data[269] = 0x0000000000404000ULL;
        data[277] = 0x0000000000004000ULL;
        data[281] = 0x0000000000404000ULL;
        data[310] = 0x0000000040404000ULL;
        data[319] = 0x0000000040404000ULL;
        data[328] = 0x0000000040404000ULL;
        data[338] = 0x0000000040404000ULL;
        data[343] = 0x0000000000004000ULL;
        data[355] = 0x0000000000004000ULL;
        data[361] = 0x0000000000004000ULL;
        data[368] = 0x0040404040404000ULL;
        data[374] = 0x0000000000004000ULL;
        data[386] = 0x0000004040404000ULL;
        data[402] = 0x0000000000004000ULL;
        data[407] = 0x0000000000404000ULL;
        data[411] = 0x0000000000004000ULL;
        data[416] = 0x0000000000404000ULL;
        data[421] = 0x0000000000004000ULL;
        data[425] = 0x0000000000404000ULL;
        data[430] = 0x0000000000004000ULL;
        data[435] = 0x0000000000404000ULL;
        data[460] = 0x0000000000004000ULL;
        data[463] = 0x0000000040404000ULL;
        data[465] = 0x0000000000404000ULL;
        data[478] = 0x0000000000004000ULL;
        data[482] = 0x0000000040404000ULL;
        data[483] = 0x0000000000404000ULL;
        data[499] = 0x0000000000004000ULL;
        data[509] = 0x0000000000004000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x8080808080808000ULL;
        data[5] = 0x0000000000808000ULL;
        data[17] = 0x0000000000008000ULL;
        data[21] = 0x0000000000008000ULL;
        data[22] = 0x0000000080808000ULL;
        data[32] = 0x0000000000008000ULL;
        data[38] = 0x0000808080808000ULL;
        data[55] = 0x0000000000008000ULL;
        data[61] = 0x0000000080808000ULL;
        data[88] = 0x0000000000008000ULL;
        data[94] = 0x0000000000808000ULL;
        data[100] = 0x0000000000008000ULL;
        data[111] = 0x0000000000008000ULL;
        data[117] = 0x0000000000808000ULL;
        data[123] = 0x0000000000008000ULL;
        data[126] = 0x0000000000008000ULL;
        data[128] = 0x0080808080808000ULL;
        data[132] = 0x0000000000808000ULL;
        data[139] = 0x0000000000008000ULL;
        data[149] = 0x0000000000008000ULL;
        data[150] = 0x0000000080808000ULL;
        data[155] = 0x0000000000808000ULL;
        data[161] = 0x0000000000008000ULL;
        data[166] = 0x0000808080808000ULL;
        data[189] = 0x0000000080808000ULL;
        data[194] = 0x0000000000008000ULL;
        data[217] = 0x0000000000008000ULL;
        data[222] = 0x0000000000808000ULL;
        data[228] = 0x0000000000008000ULL;
        data[233] = 0x0000000000008000ULL;
        data[234] = 0x0000008080808000ULL;
        data[245] = 0x0000000000808000ULL;
        data[251] = 0x0000000000008000ULL;
        data[256] = 0x0000000000008000ULL;
        data[257] = 0x0000000080808000ULL;
        data[260] = 0x0000000000808000ULL;
        data[267] = 0x0000000000008000ULL;
        data[272] = 0x0000008080808000ULL;
        data[283] = 0x0000000000808000ULL;
        data[289] = 0x0000000000008000ULL;
        data[295] = 0x0000000080808000ULL;
        data[322] = 0x0000000000008000ULL;
        data[328] = 0x0000000000808000ULL;
        data[345] = 0x0000000000008000ULL;
        data[351] = 0x0000000000808000ULL;
        data[361] = 0x0000000000008000ULL;
        data[362] = 0x0000008080808000ULL;
        data[366] = 0x0000000000808000ULL;
        data[378] = 0x0000000000008000ULL;
        data[384] = 0x0000000000008000ULL;
        data[385] = 0x0000000080808000ULL;
        data[389] = 0x0000000000808000ULL;
        data[400] = 0x0000008080808000ULL;
        data[401] = 0x0000000000008000ULL;
        data[416] = 0x0000000000008000ULL;
        data[423] = 0x0000000080808000ULL;
        data[439] = 0x0000000000008000ULL;
        data[456] = 0x0000000000808000ULL;
        data[472] = 0x0000000000008000ULL;
        data[479] = 0x0000000000808000ULL;
        data[494] = 0x0000000000808000ULL;
        data[495] = 0x0000000000008000ULL;
        data[506] = 0x0000000000008000ULL;
        data[510] = 0x0000000000008000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_9_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(491);
        data[0] = 0x0101010101010001ULL;
        data[2] = 0x0000000001010001ULL;
        data[9] = 0x0000000000010001ULL;
        data[11] = 0x0000000000010001ULL;
        data[33] = 0x0000000101010001ULL;
        data[45] = 0x0000000001010001ULL;
        data[55] = 0x0000000000010001ULL;
        data[77] = 0x0000010101010001ULL;
        data[79] = 0x0000000001010001ULL;
        data[122] = 0x0000000001010001ULL;
        data[144] = 0x0000000000010001ULL;
        data[188] = 0x0000000000010001ULL;
        data[190] = 0x0000000000010001ULL;
        data[212] = 0x0000000101010001ULL;
        data[221] = 0x0000000000010001ULL;
        data[234] = 0x0000000000010001ULL;
        data[256] = 0x0001010101010001ULL;
        data[258] = 0x0000000001010001ULL;
        data[265] = 0x0000000000010001ULL;
        data[267] = 0x0000000000010001ULL;
        data[289] = 0x0000000101010001ULL;
        data[301] = 0x0000000001010001ULL;
        data[311] = 0x0000000000010001ULL;
        data[333] = 0x0000010101010001ULL;
        data[335] = 0x0000000001010001ULL;
        data[378] = 0x0000000001010001ULL;
        data[400] = 0x0000000000010001ULL;
        data[444] = 0x0000000000010001ULL;
        data[446] = 0x0000000000010001ULL;
        data[468] = 0x0000000101010001ULL;
        data[477] = 0x0000000000010001ULL;
        data[490] = 0x0000000000010001ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x0202020202020002ULL;
        data[5] = 0x0000000000020002ULL;
        data[22] = 0x0000000002020002ULL;
        data[38] = 0x0000020202020002ULL;
        data[61] = 0x0000000002020002ULL;
        data[94] = 0x0000000000020002ULL;
        data[117] = 0x0000000000020002ULL;
        data[128] = 0x0002020202020002ULL;
        data[132] = 0x0000000000020002ULL;
        data[150] = 0x0000000002020002ULL;
        data[155] = 0x0000000000020002ULL;
        data[166] = 0x0000020202020002ULL;
        data[189] = 0x0000000002020002ULL;
        data[222] = 0x0000000000020002ULL;
        data[234] = 0x0000000202020002ULL;
        data[245] = 0x0000000000020002ULL;
        data[257] = 0x0000000002020002ULL;
        data[260] = 0x0000000000020002ULL;
        data[272] = 0x0000000202020002ULL;
        data[283] = 0x0000000000020002ULL;
        data[295] = 0x0000000002020002ULL;
        data[328] = 0x0000000000020002ULL;
        data[351] = 0x0000000000020002ULL;
        data[362] = 0x0000000202020002ULL;
        data[366] = 0x0000000000020002ULL;
        data[385] = 0x0000000002020002ULL;
        data[389] = 0x0000000000020002ULL;
        data[400] = 0x0000000202020002ULL;
        data[423] = 0x0000000002020002ULL;
        data[456] = 0x0000000000020002ULL;
        data[479] = 0x0000000000020002ULL;
        data[494] = 0x0000000000020002ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(491);
        data[0] = 0x0404040404040004ULL;
        data[2] = 0x0000000004040004ULL;
        data[9] = 0x0000000000040004ULL;
        data[11] = 0x0000000000040004ULL;
        data[33] = 0x0000000404040004ULL;
        data[45] = 0x0000000004040004ULL;
        data[55] = 0x0000000000040004ULL;
        data[77] = 0x0000040404040004ULL;
        data[79] = 0x0000000004040004ULL;
        data[122] = 0x0000000004040004ULL;
        data[144] = 0x0000000000040004ULL;
        data[188] = 0x0000000000040004ULL;
        data[190] = 0x0000000000040004ULL;
        data[212] = 0x0000000404040004ULL;
        data[221] = 0x0000000000040004ULL;
        data[234] = 0x0000000000040004ULL;
        data[256] = 0x0004040404040004ULL;
        data[258] = 0x0000000004040004ULL;
        data[265] = 0x0000000000040004ULL;
        data[267] = 0x0000000000040004ULL;
        data[289] = 0x0000000404040004ULL;
        data[301] = 0x0000000004040004ULL;
        data[311] = 0x0000000000040004ULL;
        data[333] = 0x0000040404040004ULL;
        data[335] = 0x0000000004040004ULL;
        data[378] = 0x0000000004040004ULL;
        data[400] = 0x0000000000040004ULL;
        data[444] = 0x0000000000040004ULL;
        data[446] = 0x0000000000040004ULL;
        data[468] = 0x0000000404040004ULL;
        data[477] = 0x0000000000040004ULL;
        data[490] = 0x0000000000040004ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(499);
        data[0] = 0x0808080808080008ULL;
        data[1] = 0x0000000000080008ULL;
        data[15] = 0x0000000008080008ULL;
        data[29] = 0x0000000000080008ULL;
        data[41] = 0x0000080808080008ULL;
        data[55] = 0x0000000000080008ULL;
        data[68] = 0x0000000808080008ULL;
        data[70] = 0x0000000000080008ULL;
        data[82] = 0x0000000000080008ULL;
        data[97] = 0x0000000000080008ULL;
        data[123] = 0x0000000000080008ULL;
        data[137] = 0x0000080808080008ULL;
        data[151] = 0x0000000000080008ULL;
        data[166] = 0x0000000000080008ULL;
        data[193] = 0x0000000000080008ULL;
        data[219] = 0x0000000000080008ULL;
        data[224] = 0x0000000008080008ULL;
        data[289] = 0x0000000000080008ULL;
        data[293] = 0x0000000008080008ULL;
        data[320] = 0x0000000008080008ULL;
        data[346] = 0x0000000808080008ULL;
        data[361] = 0x0000000008080008ULL;
        data[375] = 0x0000000000080008ULL;
        data[389] = 0x0000000008080008ULL;
        data[416] = 0x0008080808080008ULL;
        data[431] = 0x0000000008080008ULL;
        data[442] = 0x0000000808080008ULL;
        data[445] = 0x0000000000080008ULL;
        data[457] = 0x0000000008080008ULL;
        data[471] = 0x0000000000080008ULL;
        data[484] = 0x0000000808080008ULL;
        data[498] = 0x0000000000080008ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(485);
        data[0] = 0x1010101010100010ULL;
        data[2] = 0x0000000000100010ULL;
        data[30] = 0x0000000010100010ULL;
        data[58] = 0x0000000000100010ULL;
        data[66] = 0x0000000000100010ULL;
        data[75] = 0x0000000010100010ULL;
        data[83] = 0x0000101010100010ULL;
        data[111] = 0x0000000000100010ULL;
        data[128] = 0x0000000010100010ULL;
        data[136] = 0x0000001010100010ULL;
        data[141] = 0x0000000000100010ULL;
        data[164] = 0x0000000000100010ULL;
        data[181] = 0x0000001010100010ULL;
        data[194] = 0x0000000000100010ULL;
        data[211] = 0x0000000010100010ULL;
        data[239] = 0x0000000000100010ULL;
        data[247] = 0x0000000000100010ULL;
        data[267] = 0x0000000010100010ULL;
        data[275] = 0x0000101010100010ULL;
        data[303] = 0x0000000000100010ULL;
        data[320] = 0x0010101010100010ULL;
        data[333] = 0x0000000000100010ULL;
        data[350] = 0x0000000010100010ULL;
        data[373] = 0x0000001010100010ULL;
        data[378] = 0x0000000000100010ULL;
        data[386] = 0x0000000000100010ULL;
        data[403] = 0x0000000010100010ULL;
        data[431] = 0x0000000000100010ULL;
        data[439] = 0x0000000000100010ULL;
        data[448] = 0x0000000010100010ULL;
        data[456] = 0x0000001010100010ULL;
        data[484] = 0x0000000000100010ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x2020202020200020ULL;
        data[5] = 0x0000000000200020ULL;
        data[22] = 0x0000000020200020ULL;
        data[38] = 0x0000202020200020ULL;
        data[61] = 0x0000000020200020ULL;
        data[94] = 0x0000000000200020ULL;
        data[117] = 0x0000000000200020ULL;
        data[128] = 0x0020202020200020ULL;
        data[132] = 0x0000000000200020ULL;
        data[150] = 0x0000000020200020ULL;
        data[155] = 0x0000000000200020ULL;
        data[166] = 0x0000202020200020ULL;
        data[189] = 0x0000000020200020ULL;
        data[222] = 0x0000000000200020ULL;
        data[234] = 0x0000002020200020ULL;
        data[245] = 0x0000000000200020ULL;
        data[257] = 0x0000000020200020ULL;
        data[260] = 0x0000000000200020ULL;
        data[272] = 0x0000002020200020ULL;
        data[283] = 0x0000000000200020ULL;
        data[295] = 0x0000000020200020ULL;
        data[328] = 0x0000000000200020ULL;
        data[351] = 0x0000000000200020ULL;
        data[362] = 0x0000002020200020ULL;
        data[366] = 0x0000000000200020ULL;
        data[385] = 0x0000000020200020ULL;
        data[389] = 0x0000000000200020ULL;
        data[400] = 0x0000002020200020ULL;
        data[423] = 0x0000000020200020ULL;
        data[456] = 0x0000000000200020ULL;
        data[479] = 0x0000000000200020ULL;
        data[494] = 0x0000000000200020ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(491);
        data[0] = 0x4040404040400040ULL;
        data[2] = 0x0000000040400040ULL;
        data[9] = 0x0000000000400040ULL;
        data[11] = 0x0000000000400040ULL;
        data[33] = 0x0000004040400040ULL;
        data[45] = 0x0000000040400040ULL;
        data[55] = 0x0000000000400040ULL;
        data[77] = 0x0000404040400040ULL;
        data[79] = 0x0000000040400040ULL;
        data[122] = 0x0000000040400040ULL;
        data[144] = 0x0000000000400040ULL;
        data[188] = 0x0000000000400040ULL;
        data[190] = 0x0000000000400040ULL;
        data[212] = 0x0000004040400040ULL;
        data[221] = 0x0000000000400040ULL;
        data[234] = 0x0000000000400040ULL;
        data[256] = 0x0040404040400040ULL;
        data[258] = 0x0000000040400040ULL;
        data[265] = 0x0000000000400040ULL;
        data[267] = 0x0000000000400040ULL;
        data[289] = 0x0000004040400040ULL;
        data[301] = 0x0000000040400040ULL;
        data[311] = 0x0000000000400040ULL;
        data[333] = 0x0000404040400040ULL;
        data[335] = 0x0000000040400040ULL;
        data[378] = 0x0000000040400040ULL;
        data[400] = 0x0000000000400040ULL;
        data[444] = 0x0000000000400040ULL;
        data[446] = 0x0000000000400040ULL;
        data[468] = 0x0000004040400040ULL;
        data[477] = 0x0000000000400040ULL;
        data[490] = 0x0000000000400040ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x8080808080800080ULL;
        data[5] = 0x0000000000800080ULL;
        data[22] = 0x0000000080800080ULL;
        data[38] = 0x0000808080800080ULL;
        data[61] = 0x0000000080800080ULL;
        data[94] = 0x0000000000800080ULL;
        data[117] = 0x0000000000800080ULL;
        data[128] = 0x0080808080800080ULL;
        data[132] = 0x0000000000800080ULL;
        data[150] = 0x0000000080800080ULL;
        data[155] = 0x0000000000800080ULL;
        data[166] = 0x0000808080800080ULL;
        data[189] = 0x0000000080800080ULL;
        data[222] = 0x0000000000800080ULL;
        data[234] = 0x0000008080800080ULL;
        data[245] = 0x0000000000800080ULL;
        data[257] = 0x0000000080800080ULL;
        data[260] = 0x0000000000800080ULL;
        data[272] = 0x0000008080800080ULL;
        data[283] = 0x0000000000800080ULL;
        data[295] = 0x0000000080800080ULL;
        data[328] = 0x0000000000800080ULL;
        data[351] = 0x0000000000800080ULL;
        data[362] = 0x0000008080800080ULL;
        data[366] = 0x0000000000800080ULL;
        data[385] = 0x0000000080800080ULL;
        data[389] = 0x0000000000800080ULL;
        data[400] = 0x0000008080800080ULL;
        data[423] = 0x0000000080800080ULL;
        data[456] = 0x0000000000800080ULL;
        data[479] = 0x0000000000800080ULL;
        data[494] = 0x0000000000800080ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_9_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(503);
        data[0] = 0x0101010101000101ULL;
        data[2] = 0x0000000001000101ULL;
        data[22] = 0x0000000101000100ULL;
        data[33] = 0x0000000101000101ULL;
        data[34] = 0x0000000001000100ULL;
        data[45] = 0x0000000001000101ULL;
        data[65] = 0x0000010101000100ULL;
        data[67] = 0x0000000001000100ULL;
        data[77] = 0x0000010101000101ULL;
        data[79] = 0x0000000001000101ULL;
        data[111] = 0x0000000001000100ULL;
        data[122] = 0x0000000001000101ULL;
        data[201] = 0x0000000101000100ULL;
        data[212] = 0x0000000101000101ULL;
        data[244] = 0x0101010101000100ULL;
        data[246] = 0x0000000001000100ULL;
        data[256] = 0x0001010101000101ULL;
        data[258] = 0x0000000001000101ULL;
        data[278] = 0x0000000101000100ULL;
        data[289] = 0x0000000101000101ULL;
        data[290] = 0x0000000001000100ULL;
        data[301] = 0x0000000001000101ULL;
        data[321] = 0x0000010101000100ULL;
        data[323] = 0x0000000001000100ULL;
        data[333] = 0x0000010101000101ULL;
        data[335] = 0x0000000001000101ULL;
        data[367] = 0x0000000001000100ULL;
        data[378] = 0x0000000001000101ULL;
        data[457] = 0x0000000101000100ULL;
        data[468] = 0x0000000101000101ULL;
        data[500] = 0x0001010101000100ULL;
        data[502] = 0x0000000001000100ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x0202020202000202ULL;
        data[17] = 0x0000000002000200ULL;
        data[22] = 0x0000000002000202ULL;
        data[32] = 0x0000020202000200ULL;
        data[38] = 0x0000020202000202ULL;
        data[55] = 0x0000000002000200ULL;
        data[61] = 0x0000000002000202ULL;
        data[100] = 0x0000000202000200ULL;
        data[123] = 0x0000000002000200ULL;
        data[128] = 0x0002020202000202ULL;
        data[139] = 0x0000000202000200ULL;
        data[150] = 0x0000000002000202ULL;
        data[161] = 0x0000000002000200ULL;
        data[166] = 0x0000020202000202ULL;
        data[189] = 0x0000000002000202ULL;
        data[228] = 0x0000000202000200ULL;
        data[234] = 0x0000000202000202ULL;
        data[251] = 0x0000000002000200ULL;
        data[257] = 0x0000000002000202ULL;
        data[267] = 0x0000000202000200ULL;
        data[272] = 0x0000000202000202ULL;
        data[289] = 0x0000000002000200ULL;
        data[295] = 0x0000000002000202ULL;
        data[362] = 0x0000000202000202ULL;
        data[378] = 0x0202020202000200ULL;
        data[385] = 0x0000000002000202ULL;
        data[400] = 0x0000000202000202ULL;
        data[401] = 0x0000000002000200ULL;
        data[416] = 0x0000020202000200ULL;
        data[423] = 0x0000000002000202ULL;
        data[439] = 0x0000000002000200ULL;
        data[506] = 0x0002020202000200ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(503);
        data[0] = 0x0404040404000404ULL;
        data[2] = 0x0000000004000404ULL;
        data[22] = 0x0000000404000400ULL;
        data[33] = 0x0000000404000404ULL;
        data[34] = 0x0000000004000400ULL;
        data[45] = 0x0000000004000404ULL;
        data[65] = 0x0000040404000400ULL;
        data[67] = 0x0000000004000400ULL;
        data[77] = 0x0000040404000404ULL;
        data[79] = 0x0000000004000404ULL;
        data[111] = 0x0000000004000400ULL;
        data[122] = 0x0000000004000404ULL;
        data[201] = 0x0000000404000400ULL;
        data[212] = 0x0000000404000404ULL;
        data[244] = 0x0404040404000400ULL;
        data[246] = 0x0000000004000400ULL;
        data[256] = 0x0004040404000404ULL;
        data[258] = 0x0000000004000404ULL;
        data[278] = 0x0000000404000400ULL;
        data[289] = 0x0000000404000404ULL;
        data[290] = 0x0000000004000400ULL;
        data[301] = 0x0000000004000404ULL;
        data[321] = 0x0000040404000400ULL;
        data[323] = 0x0000000004000400ULL;
        data[333] = 0x0000040404000404ULL;
        data[335] = 0x0000000004000404ULL;
        data[367] = 0x0000000004000400ULL;
        data[378] = 0x0000000004000404ULL;
        data[457] = 0x0000000404000400ULL;
        data[468] = 0x0000000404000404ULL;
        data[500] = 0x0004040404000400ULL;
        data[502] = 0x0000000004000400ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(494);
        data[0] = 0x0808080808000808ULL;
        data[8] = 0x0000080808000800ULL;
        data[15] = 0x0000000008000808ULL;
        data[34] = 0x0000000808000800ULL;
        data[41] = 0x0000080808000808ULL;
        data[68] = 0x0000000808000808ULL;
        data[104] = 0x0000080808000800ULL;
        data[137] = 0x0000080808000808ULL;
        data[190] = 0x0000000008000800ULL;
        data[224] = 0x0000000008000808ULL;
        data[260] = 0x0000000008000800ULL;
        data[286] = 0x0000000008000800ULL;
        data[293] = 0x0000000008000808ULL;
        data[313] = 0x0000000808000800ULL;
        data[320] = 0x0000000008000808ULL;
        data[328] = 0x0000000008000800ULL;
        data[346] = 0x0000000808000808ULL;
        data[356] = 0x0000000008000800ULL;
        data[361] = 0x0000000008000808ULL;
        data[382] = 0x0008080808000800ULL;
        data[389] = 0x0000000008000808ULL;
        data[397] = 0x0000000008000800ULL;
        data[409] = 0x0000000808000800ULL;
        data[416] = 0x0008080808000808ULL;
        data[424] = 0x0000000008000800ULL;
        data[431] = 0x0000000008000808ULL;
        data[442] = 0x0000000808000808ULL;
        data[450] = 0x0000000808000800ULL;
        data[457] = 0x0000000008000808ULL;
        data[478] = 0x0808080808000800ULL;
        data[484] = 0x0000000808000808ULL;
        data[493] = 0x0000000008000800ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(476);
        data[0] = 0x1010101010001010ULL;
        data[8] = 0x0000000010001000ULL;
        data[16] = 0x0000101010001000ULL;
        data[30] = 0x0000000010001010ULL;
        data[61] = 0x0000000010001000ULL;
        data[69] = 0x0000001010001000ULL;
        data[75] = 0x0000000010001010ULL;
        data[83] = 0x0000101010001010ULL;
        data[114] = 0x0000001010001000ULL;
        data[128] = 0x0000000010001010ULL;
        data[136] = 0x0000001010001010ULL;
        data[144] = 0x0000000010001000ULL;
        data[181] = 0x0000001010001010ULL;
        data[200] = 0x0000000010001000ULL;
        data[208] = 0x0000101010001000ULL;
        data[211] = 0x0000000010001010ULL;
        data[253] = 0x0010101010001000ULL;
        data[267] = 0x0000000010001010ULL;
        data[275] = 0x0000101010001010ULL;
        data[283] = 0x0000000010001000ULL;
        data[306] = 0x0000001010001000ULL;
        data[320] = 0x0010101010001010ULL;
        data[336] = 0x0000000010001000ULL;
        data[350] = 0x0000000010001010ULL;
        data[373] = 0x0000001010001010ULL;
        data[381] = 0x0000000010001000ULL;
        data[389] = 0x0000001010001000ULL;
        data[403] = 0x0000000010001010ULL;
        data[445] = 0x1010101010001000ULL;
        data[448] = 0x0000000010001010ULL;
        data[456] = 0x0000001010001010ULL;
        data[475] = 0x0000000010001000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x2020202020002020ULL;
        data[17] = 0x0000000020002000ULL;
        data[22] = 0x0000000020002020ULL;
        data[32] = 0x0000202020002000ULL;
        data[38] = 0x0000202020002020ULL;
        data[55] = 0x0000000020002000ULL;
        data[61] = 0x0000000020002020ULL;
        data[100] = 0x0000002020002000ULL;
        data[123] = 0x0000000020002000ULL;
        data[128] = 0x0020202020002020ULL;
        data[139] = 0x0000002020002000ULL;
        data[150] = 0x0000000020002020ULL;
        data[161] = 0x0000000020002000ULL;
        data[166] = 0x0000202020002020ULL;
        data[189] = 0x0000000020002020ULL;
        data[228] = 0x0000002020002000ULL;
        data[234] = 0x0000002020002020ULL;
        data[251] = 0x0000000020002000ULL;
        data[257] = 0x0000000020002020ULL;
        data[267] = 0x0000002020002000ULL;
        data[272] = 0x0000002020002020ULL;
        data[289] = 0x0000000020002000ULL;
        data[295] = 0x0000000020002020ULL;
        data[362] = 0x0000002020002020ULL;
        data[378] = 0x2020202020002000ULL;
        data[385] = 0x0000000020002020ULL;
        data[400] = 0x0000002020002020ULL;
        data[401] = 0x0000000020002000ULL;
        data[416] = 0x0000202020002000ULL;
        data[423] = 0x0000000020002020ULL;
        data[439] = 0x0000000020002000ULL;
        data[506] = 0x0020202020002000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(503);
        data[0] = 0x4040404040004040ULL;
        data[2] = 0x0000000040004040ULL;
        data[22] = 0x0000004040004000ULL;
        data[33] = 0x0000004040004040ULL;
        data[34] = 0x0000000040004000ULL;
        data[45] = 0x0000000040004040ULL;
        data[65] = 0x0000404040004000ULL;
        data[67] = 0x0000000040004000ULL;
        data[77] = 0x0000404040004040ULL;
        data[79] = 0x0000000040004040ULL;
        data[111] = 0x0000000040004000ULL;
        data[122] = 0x0000000040004040ULL;
        data[201] = 0x0000004040004000ULL;
        data[212] = 0x0000004040004040ULL;
        data[244] = 0x4040404040004000ULL;
        data[246] = 0x0000000040004000ULL;
        data[256] = 0x0040404040004040ULL;
        data[258] = 0x0000000040004040ULL;
        data[278] = 0x0000004040004000ULL;
        data[289] = 0x0000004040004040ULL;
        data[290] = 0x0000000040004000ULL;
        data[301] = 0x0000000040004040ULL;
        data[321] = 0x0000404040004000ULL;
        data[323] = 0x0000000040004000ULL;
        data[333] = 0x0000404040004040ULL;
        data[335] = 0x0000000040004040ULL;
        data[367] = 0x0000000040004000ULL;
        data[378] = 0x0000000040004040ULL;
        data[457] = 0x0000004040004000ULL;
        data[468] = 0x0000004040004040ULL;
        data[500] = 0x0040404040004000ULL;
        data[502] = 0x0000000040004000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x8080808080008080ULL;
        data[17] = 0x0000000080008000ULL;
        data[22] = 0x0000000080008080ULL;
        data[32] = 0x0000808080008000ULL;
        data[38] = 0x0000808080008080ULL;
        data[55] = 0x0000000080008000ULL;
        data[61] = 0x0000000080008080ULL;
        data[100] = 0x0000008080008000ULL;
        data[123] = 0x0000000080008000ULL;
        data[128] = 0x0080808080008080ULL;
        data[139] = 0x0000008080008000ULL;
        data[150] = 0x0000000080008080ULL;
        data[161] = 0x0000000080008000ULL;
        data[166] = 0x0000808080008080ULL;
        data[189] = 0x0000000080008080ULL;
        data[228] = 0x0000008080008000ULL;
        data[234] = 0x0000008080008080ULL;
        data[251] = 0x0000000080008000ULL;
        data[257] = 0x0000000080008080ULL;
        data[267] = 0x0000008080008000ULL;
        data[272] = 0x0000008080008080ULL;
        data[289] = 0x0000000080008000ULL;
        data[295] = 0x0000000080008080ULL;
        data[362] = 0x0000008080008080ULL;
        data[378] = 0x8080808080008000ULL;
        data[385] = 0x0000000080008080ULL;
        data[400] = 0x0000008080008080ULL;
        data[401] = 0x0000000080008000ULL;
        data[416] = 0x0000808080008000ULL;
        data[423] = 0x0000000080008080ULL;
        data[439] = 0x0000000080008000ULL;
        data[506] = 0x0080808080008000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_9_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x0101010100010101ULL;
        data[9] = 0x0000010100010000ULL;
        data[22] = 0x0000000100010100ULL;
        data[33] = 0x0000000100010101ULL;
        data[65] = 0x0000010100010100ULL;
        data[77] = 0x0000010100010101ULL;
        data[133] = 0x0000000100010000ULL;
        data[144] = 0x0000000100010000ULL;
        data[176] = 0x0001010100010000ULL;
        data[188] = 0x0101010100010000ULL;
        data[201] = 0x0000000100010100ULL;
        data[210] = 0x0000000100010000ULL;
        data[212] = 0x0000000100010101ULL;
        data[221] = 0x0000000100010000ULL;
        data[244] = 0x0101010100010100ULL;
        data[253] = 0x0000010100010000ULL;
        data[256] = 0x0001010100010101ULL;
        data[265] = 0x0000010100010000ULL;
        data[278] = 0x0000000100010100ULL;
        data[289] = 0x0000000100010101ULL;
        data[321] = 0x0000010100010100ULL;
        data[333] = 0x0000010100010101ULL;
        data[389] = 0x0000000100010000ULL;
        data[400] = 0x0000000100010000ULL;
        data[432] = 0x0101010100010000ULL;
        data[444] = 0x0001010100010000ULL;
        data[457] = 0x0000000100010100ULL;
        data[466] = 0x0000000100010000ULL;
        data[468] = 0x0000000100010101ULL;
        data[477] = 0x0000000100010000ULL;
        data[500] = 0x0001010100010100ULL;
        data[509] = 0x0000010100010000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x0202020200020202ULL;
        data[32] = 0x0000020200020200ULL;
        data[38] = 0x0000020200020202ULL;
        data[88] = 0x0002020200020000ULL;
        data[94] = 0x0202020200020000ULL;
        data[100] = 0x0000000200020200ULL;
        data[126] = 0x0000020200020000ULL;
        data[128] = 0x0002020200020202ULL;
        data[132] = 0x0000020200020000ULL;
        data[139] = 0x0000000200020200ULL;
        data[166] = 0x0000020200020202ULL;
        data[194] = 0x0000000200020000ULL;
        data[222] = 0x0002020200020000ULL;
        data[228] = 0x0000000200020200ULL;
        data[233] = 0x0000000200020000ULL;
        data[234] = 0x0000000200020202ULL;
        data[260] = 0x0000020200020000ULL;
        data[267] = 0x0000000200020200ULL;
        data[272] = 0x0000000200020202ULL;
        data[322] = 0x0000000200020000ULL;
        data[328] = 0x0000000200020000ULL;
        data[361] = 0x0000000200020000ULL;
        data[362] = 0x0000000200020202ULL;
        data[366] = 0x0000000200020000ULL;
        data[378] = 0x0202020200020200ULL;
        data[400] = 0x0000000200020202ULL;
        data[416] = 0x0000020200020200ULL;
        data[456] = 0x0000000200020000ULL;
        data[472] = 0x0202020200020000ULL;
        data[494] = 0x0000000200020000ULL;
        data[506] = 0x0002020200020200ULL;
        data[510] = 0x0000020200020000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x0404040400040404ULL;
        data[9] = 0x0000040400040000ULL;
        data[22] = 0x0000000400040400ULL;
        data[33] = 0x0000000400040404ULL;
        data[65] = 0x0000040400040400ULL;
        data[77] = 0x0000040400040404ULL;
        data[133] = 0x0000000400040000ULL;
        data[144] = 0x0000000400040000ULL;
        data[176] = 0x0004040400040000ULL;
        data[188] = 0x0404040400040000ULL;
        data[201] = 0x0000000400040400ULL;
        data[210] = 0x0000000400040000ULL;
        data[212] = 0x0000000400040404ULL;
        data[221] = 0x0000000400040000ULL;
        data[244] = 0x0404040400040400ULL;
        data[253] = 0x0000040400040000ULL;
        data[256] = 0x0004040400040404ULL;
        data[265] = 0x0000040400040000ULL;
        data[278] = 0x0000000400040400ULL;
        data[289] = 0x0000000400040404ULL;
        data[321] = 0x0000040400040400ULL;
        data[333] = 0x0000040400040404ULL;
        data[389] = 0x0000000400040000ULL;
        data[400] = 0x0000000400040000ULL;
        data[432] = 0x0404040400040000ULL;
        data[444] = 0x0004040400040000ULL;
        data[457] = 0x0000000400040400ULL;
        data[466] = 0x0000000400040000ULL;
        data[468] = 0x0000000400040404ULL;
        data[477] = 0x0000000400040000ULL;
        data[500] = 0x0004040400040400ULL;
        data[509] = 0x0000040400040000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(499);
        data[0] = 0x0808080800080808ULL;
        data[8] = 0x0000080800080800ULL;
        data[22] = 0x0008080800080000ULL;
        data[34] = 0x0000000800080800ULL;
        data[41] = 0x0000080800080808ULL;
        data[48] = 0x0000000800080000ULL;
        data[55] = 0x0008080800080000ULL;
        data[68] = 0x0000000800080808ULL;
        data[82] = 0x0000000800080000ULL;
        data[90] = 0x0000000800080000ULL;
        data[104] = 0x0000080800080800ULL;
        data[118] = 0x0808080800080000ULL;
        data[123] = 0x0000000800080000ULL;
        data[137] = 0x0000080800080808ULL;
        data[151] = 0x0808080800080000ULL;
        data[159] = 0x0000080800080000ULL;
        data[186] = 0x0000000800080000ULL;
        data[193] = 0x0000080800080000ULL;
        data[219] = 0x0000000800080000ULL;
        data[255] = 0x0000080800080000ULL;
        data[289] = 0x0000080800080000ULL;
        data[313] = 0x0000000800080800ULL;
        data[346] = 0x0000000800080808ULL;
        data[382] = 0x0008080800080800ULL;
        data[409] = 0x0000000800080800ULL;
        data[416] = 0x0008080800080808ULL;
        data[442] = 0x0000000800080808ULL;
        data[450] = 0x0000000800080800ULL;
        data[464] = 0x0000000800080000ULL;
        data[478] = 0x0808080800080800ULL;
        data[484] = 0x0000000800080808ULL;
        data[498] = 0x0000000800080000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(512);
        data[0] = 0x1010101000101010ULL;
        data[16] = 0x0000101000101000ULL;
        data[44] = 0x0010101000100000ULL;
        data[66] = 0x0000101000100000ULL;
        data[69] = 0x0000001000101000ULL;
        data[83] = 0x0000101000101010ULL;
        data[97] = 0x0000001000100000ULL;
        data[111] = 0x0010101000100000ULL;
        data[114] = 0x0000001000101000ULL;
        data[136] = 0x0000001000101010ULL;
        data[164] = 0x0000001000100000ULL;
        data[180] = 0x0000001000100000ULL;
        data[181] = 0x0000001000101010ULL;
        data[208] = 0x0000101000101000ULL;
        data[236] = 0x1010101000100000ULL;
        data[247] = 0x0000001000100000ULL;
        data[253] = 0x0010101000101000ULL;
        data[275] = 0x0000101000101010ULL;
        data[303] = 0x1010101000100000ULL;
        data[306] = 0x0000001000101000ULL;
        data[319] = 0x0000101000100000ULL;
        data[320] = 0x0010101000101010ULL;
        data[372] = 0x0000001000100000ULL;
        data[373] = 0x0000001000101010ULL;
        data[386] = 0x0000101000100000ULL;
        data[389] = 0x0000001000101000ULL;
        data[417] = 0x0000001000100000ULL;
        data[439] = 0x0000001000100000ULL;
        data[445] = 0x1010101000101000ULL;
        data[456] = 0x0000001000101010ULL;
        data[484] = 0x0000001000100000ULL;
        data[511] = 0x0000101000100000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x2020202000202020ULL;
        data[32] = 0x0000202000202000ULL;
        data[38] = 0x0000202000202020ULL;
        data[88] = 0x0020202000200000ULL;
        data[94] = 0x2020202000200000ULL;
        data[100] = 0x0000002000202000ULL;
        data[126] = 0x0000202000200000ULL;
        data[128] = 0x0020202000202020ULL;
        data[132] = 0x0000202000200000ULL;
        data[139] = 0x0000002000202000ULL;
        data[166] = 0x0000202000202020ULL;
        data[194] = 0x0000002000200000ULL;
        data[222] = 0x0020202000200000ULL;
        data[228] = 0x0000002000202000ULL;
        data[233] = 0x0000002000200000ULL;
        data[234] = 0x0000002000202020ULL;
        data[260] = 0x0000202000200000ULL;
        data[267] = 0x0000002000202000ULL;
        data[272] = 0x0000002000202020ULL;
        data[322] = 0x0000002000200000ULL;
        data[328] = 0x0000002000200000ULL;
        data[361] = 0x0000002000200000ULL;
        data[362] = 0x0000002000202020ULL;
        data[366] = 0x0000002000200000ULL;
        data[378] = 0x2020202000202000ULL;
        data[400] = 0x0000002000202020ULL;
        data[416] = 0x0000202000202000ULL;
        data[456] = 0x0000002000200000ULL;
        data[472] = 0x2020202000200000ULL;
        data[494] = 0x0000002000200000ULL;
        data[506] = 0x0020202000202000ULL;
        data[510] = 0x0000202000200000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x4040404000404040ULL;
        data[9] = 0x0000404000400000ULL;
        data[22] = 0x0000004000404000ULL;
        data[33] = 0x0000004000404040ULL;
        data[65] = 0x0000404000404000ULL;
        data[77] = 0x0000404000404040ULL;
        data[133] = 0x0000004000400000ULL;
        data[144] = 0x0000004000400000ULL;
        data[176] = 0x0040404000400000ULL;
        data[188] = 0x4040404000400000ULL;
        data[201] = 0x0000004000404000ULL;
        data[210] = 0x0000004000400000ULL;
        data[212] = 0x0000004000404040ULL;
        data[221] = 0x0000004000400000ULL;
        data[244] = 0x4040404000404000ULL;
        data[253] = 0x0000404000400000ULL;
        data[256] = 0x0040404000404040ULL;
        data[265] = 0x0000404000400000ULL;
        data[278] = 0x0000004000404000ULL;
        data[289] = 0x0000004000404040ULL;
        data[321] = 0x0000404000404000ULL;
        data[333] = 0x0000404000404040ULL;
        data[389] = 0x0000004000400000ULL;
        data[400] = 0x0000004000400000ULL;
        data[432] = 0x4040404000400000ULL;
        data[444] = 0x0040404000400000ULL;
        data[457] = 0x0000004000404000ULL;
        data[466] = 0x0000004000400000ULL;
        data[468] = 0x0000004000404040ULL;
        data[477] = 0x0000004000400000ULL;
        data[500] = 0x0040404000404000ULL;
        data[509] = 0x0000404000400000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x8080808000808080ULL;
        data[32] = 0x0000808000808000ULL;
        data[38] = 0x0000808000808080ULL;
        data[88] = 0x0080808000800000ULL;
        data[94] = 0x8080808000800000ULL;
        data[100] = 0x0000008000808000ULL;
        data[126] = 0x0000808000800000ULL;
        data[128] = 0x0080808000808080ULL;
        data[132] = 0x0000808000800000ULL;
        data[139] = 0x0000008000808000ULL;
        data[166] = 0x0000808000808080ULL;
        data[194] = 0x0000008000800000ULL;
        data[222] = 0x0080808000800000ULL;
        data[228] = 0x0000008000808000ULL;
        data[233] = 0x0000008000800000ULL;
        data[234] = 0x0000008000808080ULL;
        data[260] = 0x0000808000800000ULL;
        data[267] = 0x0000008000808000ULL;
        data[272] = 0x0000008000808080ULL;
        data[322] = 0x0000008000800000ULL;
        data[328] = 0x0000008000800000ULL;
        data[361] = 0x0000008000800000ULL;
        data[362] = 0x0000008000808080ULL;
        data[366] = 0x0000008000800000ULL;
        data[378] = 0x8080808000808000ULL;
        data[400] = 0x0000008000808080ULL;
        data[416] = 0x0000808000808000ULL;
        data[456] = 0x0000008000800000ULL;
        data[472] = 0x8080808000800000ULL;
        data[494] = 0x0000008000800000ULL;
        data[506] = 0x0080808000808000ULL;
        data[510] = 0x0000808000800000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_9_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x0101010001010101ULL;
        data[9] = 0x0000010001010000ULL;
        data[34] = 0x0001010001000000ULL;
        data[43] = 0x0000010001000000ULL;
        data[45] = 0x0101010001000000ULL;
        data[55] = 0x0000010001000000ULL;
        data[65] = 0x0000010001010100ULL;
        data[77] = 0x0000010001010101ULL;
        data[111] = 0x0000010001000000ULL;
        data[122] = 0x0000010001000000ULL;
        data[176] = 0x0001010001010000ULL;
        data[188] = 0x0101010001010000ULL;
        data[222] = 0x0001010001000000ULL;
        data[234] = 0x0101010001000000ULL;
        data[244] = 0x0101010001010100ULL;
        data[253] = 0x0000010001010000ULL;
        data[256] = 0x0001010001010101ULL;
        data[265] = 0x0000010001010000ULL;
        data[290] = 0x0101010001000000ULL;
        data[299] = 0x0000010001000000ULL;
        data[301] = 0x0001010001000000ULL;
        data[311] = 0x0000010001000000ULL;
        data[321] = 0x0000010001010100ULL;
        data[333] = 0x0000010001010101ULL;
        data[367] = 0x0000010001000000ULL;
        data[378] = 0x0000010001000000ULL;
        data[432] = 0x0101010001010000ULL;
        data[444] = 0x0001010001010000ULL;
        data[478] = 0x0101010001000000ULL;
        data[490] = 0x0001010001000000ULL;
        data[500] = 0x0001010001010100ULL;
        data[509] = 0x0000010001010000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x0202020002020202ULL;
        data[17] = 0x0002020002000000ULL;
        data[21] = 0x0000020002000000ULL;
        data[22] = 0x0202020002000000ULL;
        data[32] = 0x0000020002020200ULL;
        data[38] = 0x0000020002020202ULL;
        data[55] = 0x0000020002000000ULL;
        data[61] = 0x0000020002000000ULL;
        data[88] = 0x0002020002020000ULL;
        data[94] = 0x0202020002020000ULL;
        data[111] = 0x0002020002000000ULL;
        data[117] = 0x0202020002000000ULL;
        data[126] = 0x0000020002020000ULL;
        data[128] = 0x0002020002020202ULL;
        data[132] = 0x0000020002020000ULL;
        data[149] = 0x0000020002000000ULL;
        data[150] = 0x0002020002000000ULL;
        data[155] = 0x0000020002000000ULL;
        data[166] = 0x0000020002020202ULL;
        data[189] = 0x0000020002000000ULL;
        data[222] = 0x0002020002020000ULL;
        data[245] = 0x0002020002000000ULL;
        data[260] = 0x0000020002020000ULL;
        data[283] = 0x0000020002000000ULL;
        data[378] = 0x0202020002020200ULL;
        data[401] = 0x0202020002000000ULL;
        data[416] = 0x0000020002020200ULL;
        data[439] = 0x0000020002000000ULL;
        data[472] = 0x0202020002020000ULL;
        data[495] = 0x0202020002000000ULL;
        data[506] = 0x0002020002020200ULL;
        data[510] = 0x0000020002020000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x0404040004040404ULL;
        data[9] = 0x0000040004040000ULL;
        data[34] = 0x0004040004000000ULL;
        data[43] = 0x0000040004000000ULL;
        data[45] = 0x0404040004000000ULL;
        data[55] = 0x0000040004000000ULL;
        data[65] = 0x0000040004040400ULL;
        data[77] = 0x0000040004040404ULL;
        data[111] = 0x0000040004000000ULL;
        data[122] = 0x0000040004000000ULL;
        data[176] = 0x0004040004040000ULL;
        data[188] = 0x0404040004040000ULL;
        data[222] = 0x0004040004000000ULL;
        data[234] = 0x0404040004000000ULL;
        data[244] = 0x0404040004040400ULL;
        data[253] = 0x0000040004040000ULL;
        data[256] = 0x0004040004040404ULL;
        data[265] = 0x0000040004040000ULL;
        data[290] = 0x0404040004000000ULL;
        data[299] = 0x0000040004000000ULL;
        data[301] = 0x0004040004000000ULL;
        data[311] = 0x0000040004000000ULL;
        data[321] = 0x0000040004040400ULL;
        data[333] = 0x0000040004040404ULL;
        data[367] = 0x0000040004000000ULL;
        data[378] = 0x0000040004000000ULL;
        data[432] = 0x0404040004040000ULL;
        data[444] = 0x0004040004040000ULL;
        data[478] = 0x0404040004000000ULL;
        data[490] = 0x0004040004000000ULL;
        data[500] = 0x0004040004040400ULL;
        data[509] = 0x0000040004040000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(508);
        data[0] = 0x0808080008080808ULL;
        data[8] = 0x0000080008080800ULL;
        data[15] = 0x0000080008000000ULL;
        data[22] = 0x0008080008080000ULL;
        data[29] = 0x0808080008000000ULL;
        data[37] = 0x0000080008000000ULL;
        data[41] = 0x0000080008080808ULL;
        data[55] = 0x0008080008080000ULL;
        data[70] = 0x0000080008000000ULL;
        data[104] = 0x0000080008080800ULL;
        data[118] = 0x0808080008080000ULL;
        data[133] = 0x0000080008000000ULL;
        data[137] = 0x0000080008080808ULL;
        data[151] = 0x0808080008080000ULL;
        data[159] = 0x0000080008080000ULL;
        data[166] = 0x0000080008000000ULL;
        data[193] = 0x0000080008080000ULL;
        data[255] = 0x0000080008080000ULL;
        data[260] = 0x0008080008000000ULL;
        data[289] = 0x0000080008080000ULL;
        data[293] = 0x0008080008000000ULL;
        data[356] = 0x0808080008000000ULL;
        data[382] = 0x0008080008080800ULL;
        data[389] = 0x0808080008000000ULL;
        data[397] = 0x0000080008000000ULL;
        data[411] = 0x0008080008000000ULL;
        data[416] = 0x0008080008080808ULL;
        data[431] = 0x0000080008000000ULL;
        data[445] = 0x0008080008000000ULL;
        data[478] = 0x0808080008080800ULL;
        data[493] = 0x0000080008000000ULL;
        data[507] = 0x0808080008000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(512);
        data[0] = 0x1010100010101010ULL;
        data[8] = 0x0010100010000000ULL;
        data[16] = 0x0000100010101000ULL;
        data[30] = 0x0000100010000000ULL;
        data[44] = 0x0010100010100000ULL;
        data[58] = 0x1010100010000000ULL;
        data[66] = 0x0000100010100000ULL;
        data[74] = 0x0000100010000000ULL;
        data[75] = 0x0010100010000000ULL;
        data[83] = 0x0000100010101010ULL;
        data[111] = 0x0010100010100000ULL;
        data[141] = 0x0000100010000000ULL;
        data[200] = 0x1010100010000000ULL;
        data[208] = 0x0000100010101000ULL;
        data[236] = 0x1010100010100000ULL;
        data[253] = 0x0010100010101000ULL;
        data[266] = 0x0000100010000000ULL;
        data[267] = 0x1010100010000000ULL;
        data[275] = 0x0000100010101010ULL;
        data[283] = 0x0000100010000000ULL;
        data[303] = 0x1010100010100000ULL;
        data[311] = 0x0010100010000000ULL;
        data[319] = 0x0000100010100000ULL;
        data[320] = 0x0010100010101010ULL;
        data[333] = 0x0000100010000000ULL;
        data[350] = 0x0000100010000000ULL;
        data[378] = 0x0010100010000000ULL;
        data[386] = 0x0000100010100000ULL;
        data[445] = 0x1010100010101000ULL;
        data[475] = 0x0000100010000000ULL;
        data[503] = 0x1010100010000000ULL;
        data[511] = 0x0000100010100000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x2020200020202020ULL;
        data[17] = 0x0020200020000000ULL;
        data[21] = 0x0000200020000000ULL;
        data[22] = 0x2020200020000000ULL;
        data[32] = 0x0000200020202000ULL;
        data[38] = 0x0000200020202020ULL;
        data[55] = 0x0000200020000000ULL;
        data[61] = 0x0000200020000000ULL;
        data[88] = 0x0020200020200000ULL;
        data[94] = 0x2020200020200000ULL;
        data[111] = 0x0020200020000000ULL;
        data[117] = 0x2020200020000000ULL;
        data[126] = 0x0000200020200000ULL;
        data[128] = 0x0020200020202020ULL;
        data[132] = 0x0000200020200000ULL;
        data[149] = 0x0000200020000000ULL;
        data[150] = 0x0020200020000000ULL;
        data[155] = 0x0000200020000000ULL;
        data[166] = 0x0000200020202020ULL;
        data[189] = 0x0000200020000000ULL;
        data[222] = 0x0020200020200000ULL;
        data[245] = 0x0020200020000000ULL;
        data[260] = 0x0000200020200000ULL;
        data[283] = 0x0000200020000000ULL;
        data[378] = 0x2020200020202000ULL;
        data[401] = 0x2020200020000000ULL;
        data[416] = 0x0000200020202000ULL;
        data[439] = 0x0000200020000000ULL;
        data[472] = 0x2020200020200000ULL;
        data[495] = 0x2020200020000000ULL;
        data[506] = 0x0020200020202000ULL;
        data[510] = 0x0000200020200000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x4040400040404040ULL;
        data[9] = 0x0000400040400000ULL;
        data[34] = 0x0040400040000000ULL;
        data[43] = 0x0000400040000000ULL;
        data[45] = 0x4040400040000000ULL;
        data[55] = 0x0000400040000000ULL;
        data[65] = 0x0000400040404000ULL;
        data[77] = 0x0000400040404040ULL;
        data[111] = 0x0000400040000000ULL;
        data[122] = 0x0000400040000000ULL;
        data[176] = 0x0040400040400000ULL;
        data[188] = 0x4040400040400000ULL;
        data[222] = 0x0040400040000000ULL;
        data[234] = 0x4040400040000000ULL;
        data[244] = 0x4040400040404000ULL;
        data[253] = 0x0000400040400000ULL;
        data[256] = 0x0040400040404040ULL;
        data[265] = 0x0000400040400000ULL;
        data[290] = 0x4040400040000000ULL;
        data[299] = 0x0000400040000000ULL;
        data[301] = 0x0040400040000000ULL;
        data[311] = 0x0000400040000000ULL;
        data[321] = 0x0000400040404000ULL;
        data[333] = 0x0000400040404040ULL;
        data[367] = 0x0000400040000000ULL;
        data[378] = 0x0000400040000000ULL;
        data[432] = 0x4040400040400000ULL;
        data[444] = 0x0040400040400000ULL;
        data[478] = 0x4040400040000000ULL;
        data[490] = 0x0040400040000000ULL;
        data[500] = 0x0040400040404000ULL;
        data[509] = 0x0000400040400000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x8080800080808080ULL;
        data[17] = 0x0080800080000000ULL;
        data[21] = 0x0000800080000000ULL;
        data[22] = 0x8080800080000000ULL;
        data[32] = 0x0000800080808000ULL;
        data[38] = 0x0000800080808080ULL;
        data[55] = 0x0000800080000000ULL;
        data[61] = 0x0000800080000000ULL;
        data[88] = 0x0080800080800000ULL;
        data[94] = 0x8080800080800000ULL;
        data[111] = 0x0080800080000000ULL;
        data[117] = 0x8080800080000000ULL;
        data[126] = 0x0000800080800000ULL;
        data[128] = 0x0080800080808080ULL;
        data[132] = 0x0000800080800000ULL;
        data[149] = 0x0000800080000000ULL;
        data[150] = 0x0080800080000000ULL;
        data[155] = 0x0000800080000000ULL;
        data[166] = 0x0000800080808080ULL;
        data[189] = 0x0000800080000000ULL;
        data[222] = 0x0080800080800000ULL;
        data[245] = 0x0080800080000000ULL;
        data[260] = 0x0000800080800000ULL;
        data[283] = 0x0000800080000000ULL;
        data[378] = 0x8080800080808000ULL;
        data[401] = 0x8080800080000000ULL;
        data[416] = 0x0000800080808000ULL;
        data[439] = 0x0000800080000000ULL;
        data[472] = 0x8080800080800000ULL;
        data[495] = 0x8080800080000000ULL;
        data[506] = 0x0080800080808000ULL;
        data[510] = 0x0000800080800000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_9_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(503);
        data[0] = 0x0101000101010101ULL;
        data[2] = 0x0101000100000000ULL;
        data[34] = 0x0001000101000000ULL;
        data[45] = 0x0101000101000000ULL;
        data[133] = 0x0001000100000000ULL;
        data[144] = 0x0101000100000000ULL;
        data[176] = 0x0001000101010000ULL;
        data[179] = 0x0001000100000000ULL;
        data[188] = 0x0101000101010000ULL;
        data[190] = 0x0101000100000000ULL;
        data[201] = 0x0101000100000000ULL;
        data[212] = 0x0001000100000000ULL;
        data[222] = 0x0001000101000000ULL;
        data[234] = 0x0101000101000000ULL;
        data[244] = 0x0101000101010100ULL;
        data[246] = 0x0101000100000000ULL;
        data[256] = 0x0001000101010101ULL;
        data[258] = 0x0001000100000000ULL;
        data[290] = 0x0101000101000000ULL;
        data[301] = 0x0001000101000000ULL;
        data[389] = 0x0101000100000000ULL;
        data[400] = 0x0001000100000000ULL;
        data[432] = 0x0101000101010000ULL;
        data[435] = 0x0101000100000000ULL;
        data[444] = 0x0001000101010000ULL;
        data[446] = 0x0001000100000000ULL;
        data[457] = 0x0001000100000000ULL;
        data[468] = 0x0101000100000000ULL;
        data[478] = 0x0101000101000000ULL;
        data[490] = 0x0001000101000000ULL;
        data[500] = 0x0001000101010100ULL;
        data[502] = 0x0001000100000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x0202000202020202ULL;
        data[17] = 0x0002000202000000ULL;
        data[22] = 0x0202000202000000ULL;
        data[88] = 0x0002000202020000ULL;
        data[94] = 0x0202000202020000ULL;
        data[100] = 0x0202000200000000ULL;
        data[111] = 0x0002000202000000ULL;
        data[117] = 0x0202000202000000ULL;
        data[123] = 0x0202000200000000ULL;
        data[128] = 0x0002000202020202ULL;
        data[150] = 0x0002000202000000ULL;
        data[194] = 0x0202000200000000ULL;
        data[217] = 0x0202000200000000ULL;
        data[222] = 0x0002000202020000ULL;
        data[228] = 0x0002000200000000ULL;
        data[234] = 0x0202000200000000ULL;
        data[245] = 0x0002000202000000ULL;
        data[251] = 0x0002000200000000ULL;
        data[257] = 0x0202000200000000ULL;
        data[322] = 0x0002000200000000ULL;
        data[328] = 0x0202000200000000ULL;
        data[345] = 0x0002000200000000ULL;
        data[351] = 0x0202000200000000ULL;
        data[362] = 0x0002000200000000ULL;
        data[378] = 0x0202000202020200ULL;
        data[385] = 0x0002000200000000ULL;
        data[401] = 0x0202000202000000ULL;
        data[456] = 0x0002000200000000ULL;
        data[472] = 0x0202000202020000ULL;
        data[479] = 0x0002000200000000ULL;
        data[495] = 0x0202000202000000ULL;
        data[506] = 0x0002000202020200ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(503);
        data[0] = 0x0404000404040404ULL;
        data[2] = 0x0404000400000000ULL;
        data[34] = 0x0004000404000000ULL;
        data[45] = 0x0404000404000000ULL;
        data[133] = 0x0004000400000000ULL;
        data[144] = 0x0404000400000000ULL;
        data[176] = 0x0004000404040000ULL;
        data[179] = 0x0004000400000000ULL;
        data[188] = 0x0404000404040000ULL;
        data[190] = 0x0404000400000000ULL;
        data[201] = 0x0404000400000000ULL;
        data[212] = 0x0004000400000000ULL;
        data[222] = 0x0004000404000000ULL;
        data[234] = 0x0404000404000000ULL;
        data[244] = 0x0404000404040400ULL;
        data[246] = 0x0404000400000000ULL;
        data[256] = 0x0004000404040404ULL;
        data[258] = 0x0004000400000000ULL;
        data[290] = 0x0404000404000000ULL;
        data[301] = 0x0004000404000000ULL;
        data[389] = 0x0404000400000000ULL;
        data[400] = 0x0004000400000000ULL;
        data[432] = 0x0404000404040000ULL;
        data[435] = 0x0404000400000000ULL;
        data[444] = 0x0004000404040000ULL;
        data[446] = 0x0004000400000000ULL;
        data[457] = 0x0004000400000000ULL;
        data[468] = 0x0404000400000000ULL;
        data[478] = 0x0404000404000000ULL;
        data[490] = 0x0004000404000000ULL;
        data[500] = 0x0004000404040400ULL;
        data[502] = 0x0004000400000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(508);
        data[0] = 0x0808000808080808ULL;
        data[22] = 0x0008000808080000ULL;
        data[29] = 0x0808000808000000ULL;
        data[48] = 0x0808000800000000ULL;
        data[55] = 0x0008000808080000ULL;
        data[82] = 0x0808000800000000ULL;
        data[118] = 0x0808000808080000ULL;
        data[151] = 0x0808000808080000ULL;
        data[190] = 0x0008000800000000ULL;
        data[224] = 0x0008000800000000ULL;
        data[260] = 0x0008000808000000ULL;
        data[286] = 0x0808000800000000ULL;
        data[293] = 0x0008000808000000ULL;
        data[313] = 0x0008000800000000ULL;
        data[320] = 0x0808000800000000ULL;
        data[342] = 0x0008000800000000ULL;
        data[346] = 0x0008000800000000ULL;
        data[356] = 0x0808000808000000ULL;
        data[375] = 0x0008000800000000ULL;
        data[382] = 0x0008000808080800ULL;
        data[389] = 0x0808000808000000ULL;
        data[409] = 0x0808000800000000ULL;
        data[411] = 0x0008000808000000ULL;
        data[416] = 0x0008000808080808ULL;
        data[438] = 0x0808000800000000ULL;
        data[442] = 0x0808000800000000ULL;
        data[445] = 0x0008000808000000ULL;
        data[464] = 0x0008000800000000ULL;
        data[471] = 0x0808000800000000ULL;
        data[478] = 0x0808000808080800ULL;
        data[498] = 0x0008000800000000ULL;
        data[507] = 0x0808000808000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(504);
        data[0] = 0x1010001010101010ULL;
        data[8] = 0x0010001010000000ULL;
        data[44] = 0x0010001010100000ULL;
        data[58] = 0x1010001010000000ULL;
        data[61] = 0x1010001000000000ULL;
        data[75] = 0x0010001010000000ULL;
        data[97] = 0x1010001000000000ULL;
        data[111] = 0x0010001010100000ULL;
        data[114] = 0x0010001000000000ULL;
        data[128] = 0x1010001000000000ULL;
        data[164] = 0x1010001000000000ULL;
        data[172] = 0x0010001000000000ULL;
        data[181] = 0x0010001000000000ULL;
        data[200] = 0x1010001010000000ULL;
        data[236] = 0x1010001010100000ULL;
        data[239] = 0x0010001000000000ULL;
        data[253] = 0x0010001010101000ULL;
        data[267] = 0x1010001010000000ULL;
        data[303] = 0x1010001010100000ULL;
        data[306] = 0x1010001000000000ULL;
        data[311] = 0x0010001010000000ULL;
        data[320] = 0x0010001010101010ULL;
        data[364] = 0x1010001000000000ULL;
        data[373] = 0x1010001000000000ULL;
        data[378] = 0x0010001010000000ULL;
        data[381] = 0x0010001000000000ULL;
        data[417] = 0x0010001000000000ULL;
        data[431] = 0x1010001000000000ULL;
        data[445] = 0x1010001010101000ULL;
        data[448] = 0x0010001000000000ULL;
        data[484] = 0x0010001000000000ULL;
        data[503] = 0x1010001010000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x2020002020202020ULL;
        data[17] = 0x0020002020000000ULL;
        data[22] = 0x2020002020000000ULL;
        data[88] = 0x0020002020200000ULL;
        data[94] = 0x2020002020200000ULL;
        data[100] = 0x2020002000000000ULL;
        data[111] = 0x0020002020000000ULL;
        data[117] = 0x2020002020000000ULL;
        data[123] = 0x2020002000000000ULL;
        data[128] = 0x0020002020202020ULL;
        data[150] = 0x0020002020000000ULL;
        data[194] = 0x2020002000000000ULL;
        data[217] = 0x2020002000000000ULL;
        data[222] = 0x0020002020200000ULL;
        data[228] = 0x0020002000000000ULL;
        data[234] = 0x2020002000000000ULL;
        data[245] = 0x0020002020000000ULL;
        data[251] = 0x0020002000000000ULL;
        data[257] = 0x2020002000000000ULL;
        data[322] = 0x0020002000000000ULL;
        data[328] = 0x2020002000000000ULL;
        data[345] = 0x0020002000000000ULL;
        data[351] = 0x2020002000000000ULL;
        data[362] = 0x0020002000000000ULL;
        data[378] = 0x2020002020202000ULL;
        data[385] = 0x0020002000000000ULL;
        data[401] = 0x2020002020000000ULL;
        data[456] = 0x0020002000000000ULL;
        data[472] = 0x2020002020200000ULL;
        data[479] = 0x0020002000000000ULL;
        data[495] = 0x2020002020000000ULL;
        data[506] = 0x0020002020202000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(503);
        data[0] = 0x4040004040404040ULL;
        data[2] = 0x4040004000000000ULL;
        data[34] = 0x0040004040000000ULL;
        data[45] = 0x4040004040000000ULL;
        data[133] = 0x0040004000000000ULL;
        data[144] = 0x4040004000000000ULL;
        data[176] = 0x0040004040400000ULL;
        data[179] = 0x0040004000000000ULL;
        data[188] = 0x4040004040400000ULL;
        data[190] = 0x4040004000000000ULL;
        data[201] = 0x4040004000000000ULL;
        data[212] = 0x0040004000000000ULL;
        data[222] = 0x0040004040000000ULL;
        data[234] = 0x4040004040000000ULL;
        data[244] = 0x4040004040404000ULL;
        data[246] = 0x4040004000000000ULL;
        data[256] = 0x0040004040404040ULL;
        data[258] = 0x0040004000000000ULL;
        data[290] = 0x4040004040000000ULL;
        data[301] = 0x0040004040000000ULL;
        data[389] = 0x4040004000000000ULL;
        data[400] = 0x0040004000000000ULL;
        data[432] = 0x4040004040400000ULL;
        data[435] = 0x4040004000000000ULL;
        data[444] = 0x0040004040400000ULL;
        data[446] = 0x0040004000000000ULL;
        data[457] = 0x0040004000000000ULL;
        data[468] = 0x4040004000000000ULL;
        data[478] = 0x4040004040000000ULL;
        data[490] = 0x0040004040000000ULL;
        data[500] = 0x0040004040404000ULL;
        data[502] = 0x0040004000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x8080008080808080ULL;
        data[17] = 0x0080008080000000ULL;
        data[22] = 0x8080008080000000ULL;
        data[88] = 0x0080008080800000ULL;
        data[94] = 0x8080008080800000ULL;
        data[100] = 0x8080008000000000ULL;
        data[111] = 0x0080008080000000ULL;
        data[117] = 0x8080008080000000ULL;
        data[123] = 0x8080008000000000ULL;
        data[128] = 0x0080008080808080ULL;
        data[150] = 0x0080008080000000ULL;
        data[194] = 0x8080008000000000ULL;
        data[217] = 0x8080008000000000ULL;
        data[222] = 0x0080008080800000ULL;
        data[228] = 0x0080008000000000ULL;
        data[234] = 0x8080008000000000ULL;
        data[245] = 0x0080008080000000ULL;
        data[251] = 0x0080008000000000ULL;
        data[257] = 0x8080008000000000ULL;
        data[322] = 0x0080008000000000ULL;
        data[328] = 0x8080008000000000ULL;
        data[345] = 0x0080008000000000ULL;
        data[351] = 0x8080008000000000ULL;
        data[362] = 0x0080008000000000ULL;
        data[378] = 0x8080008080808000ULL;
        data[385] = 0x0080008000000000ULL;
        data[401] = 0x8080008080000000ULL;
        data[456] = 0x0080008000000000ULL;
        data[472] = 0x8080008080800000ULL;
        data[479] = 0x0080008000000000ULL;
        data[495] = 0x8080008080000000ULL;
        data[506] = 0x0080008080808000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_3_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(485);
        data[0] = 0x0100010101010101ULL;
        data[2] = 0x0100010000000000ULL;
        data[30] = 0x0100010100000000ULL;
        data[58] = 0x0100010101010000ULL;
        data[66] = 0x0100010100000000ULL;
        data[75] = 0x0100010000000000ULL;
        data[83] = 0x0100010000000000ULL;
        data[111] = 0x0100010000000000ULL;
        data[128] = 0x0100010101000000ULL;
        data[136] = 0x0100010100000000ULL;
        data[141] = 0x0100010000000000ULL;
        data[164] = 0x0100010101000000ULL;
        data[181] = 0x0100010000000000ULL;
        data[194] = 0x0100010100000000ULL;
        data[211] = 0x0100010000000000ULL;
        data[239] = 0x0100010000000000ULL;
        data[247] = 0x0100010000000000ULL;
        data[267] = 0x0100010101010000ULL;
        data[275] = 0x0100010100000000ULL;
        data[303] = 0x0100010101010100ULL;
        data[320] = 0x0100010000000000ULL;
        data[333] = 0x0100010100000000ULL;
        data[350] = 0x0100010000000000ULL;
        data[373] = 0x0100010101000000ULL;
        data[378] = 0x0100010000000000ULL;
        data[386] = 0x0100010000000000ULL;
        data[403] = 0x0100010100000000ULL;
        data[431] = 0x0100010101000000ULL;
        data[439] = 0x0100010100000000ULL;
        data[448] = 0x0100010000000000ULL;
        data[456] = 0x0100010000000000ULL;
        data[484] = 0x0100010000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_3_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x0200020202020202ULL;
        data[5] = 0x0200020000000000ULL;
        data[22] = 0x0200020202020000ULL;
        data[38] = 0x0200020200000000ULL;
        data[61] = 0x0200020200000000ULL;
        data[94] = 0x0200020202020200ULL;
        data[117] = 0x0200020202020000ULL;
        data[128] = 0x0200020000000000ULL;
        data[132] = 0x0200020200000000ULL;
        data[150] = 0x0200020000000000ULL;
        data[155] = 0x0200020200000000ULL;
        data[166] = 0x0200020000000000ULL;
        data[189] = 0x0200020000000000ULL;
        data[222] = 0x0200020000000000ULL;
        data[234] = 0x0200020202000000ULL;
        data[245] = 0x0200020000000000ULL;
        data[257] = 0x0200020202000000ULL;
        data[260] = 0x0200020000000000ULL;
        data[272] = 0x0200020200000000ULL;
        data[283] = 0x0200020000000000ULL;
        data[295] = 0x0200020200000000ULL;
        data[328] = 0x0200020202000000ULL;
        data[351] = 0x0200020202000000ULL;
        data[362] = 0x0200020000000000ULL;
        data[366] = 0x0200020200000000ULL;
        data[385] = 0x0200020000000000ULL;
        data[389] = 0x0200020200000000ULL;
        data[400] = 0x0200020000000000ULL;
        data[423] = 0x0200020000000000ULL;
        data[456] = 0x0200020000000000ULL;
        data[479] = 0x0200020000000000ULL;
        data[494] = 0x0200020000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_3_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(491);
        data[0] = 0x0400040404040404ULL;
        data[2] = 0x0400040404000000ULL;
        data[9] = 0x0400040000000000ULL;
        data[11] = 0x0400040000000000ULL;
        data[33] = 0x0400040400000000ULL;
        data[45] = 0x0400040404040000ULL;
        data[55] = 0x0400040000000000ULL;
        data[77] = 0x0400040400000000ULL;
        data[79] = 0x0400040400000000ULL;
        data[122] = 0x0400040400000000ULL;
        data[144] = 0x0400040404000000ULL;
        data[188] = 0x0400040404040400ULL;
        data[190] = 0x0400040404000000ULL;
        data[212] = 0x0400040000000000ULL;
        data[221] = 0x0400040400000000ULL;
        data[234] = 0x0400040404040000ULL;
        data[256] = 0x0400040000000000ULL;
        data[258] = 0x0400040000000000ULL;
        data[265] = 0x0400040400000000ULL;
        data[267] = 0x0400040400000000ULL;
        data[289] = 0x0400040000000000ULL;
        data[301] = 0x0400040000000000ULL;
        data[311] = 0x0400040400000000ULL;
        data[333] = 0x0400040000000000ULL;
        data[335] = 0x0400040000000000ULL;
        data[378] = 0x0400040000000000ULL;
        data[400] = 0x0400040000000000ULL;
        data[444] = 0x0400040000000000ULL;
        data[446] = 0x0400040000000000ULL;
        data[468] = 0x0400040404000000ULL;
        data[477] = 0x0400040000000000ULL;
        data[490] = 0x0400040000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_5_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x0800080808080808ULL;
        data[5] = 0x0800080000000000ULL;
        data[22] = 0x0800080808080000ULL;
        data[38] = 0x0800080800000000ULL;
        data[61] = 0x0800080800000000ULL;
        data[94] = 0x0800080808080800ULL;
        data[117] = 0x0800080808080000ULL;
        data[128] = 0x0800080000000000ULL;
        data[132] = 0x0800080800000000ULL;
        data[150] = 0x0800080000000000ULL;
        data[155] = 0x0800080800000000ULL;
        data[166] = 0x0800080000000000ULL;
        data[189] = 0x0800080000000000ULL;
        data[222] = 0x0800080000000000ULL;
        data[234] = 0x0800080808000000ULL;
        data[245] = 0x0800080000000000ULL;
        data[257] = 0x0800080808000000ULL;
        data[260] = 0x0800080000000000ULL;
        data[272] = 0x0800080800000000ULL;
        data[283] = 0x0800080000000000ULL;
        data[295] = 0x0800080800000000ULL;
        data[328] = 0x0800080808000000ULL;
        data[351] = 0x0800080808000000ULL;
        data[362] = 0x0800080000000000ULL;
        data[366] = 0x0800080800000000ULL;
        data[385] = 0x0800080000000000ULL;
        data[389] = 0x0800080800000000ULL;
        data[400] = 0x0800080000000000ULL;
        data[423] = 0x0800080000000000ULL;
        data[456] = 0x0800080000000000ULL;
        data[479] = 0x0800080000000000ULL;
        data[494] = 0x0800080000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_5_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(491);
        data[0] = 0x1000101010101010ULL;
        data[2] = 0x1000101010000000ULL;
        data[9] = 0x1000100000000000ULL;
        data[11] = 0x1000100000000000ULL;
        data[33] = 0x1000101000000000ULL;
        data[45] = 0x1000101010100000ULL;
        data[55] = 0x1000100000000000ULL;
        data[77] = 0x1000101000000000ULL;
        data[79] = 0x1000101000000000ULL;
        data[122] = 0x1000101000000000ULL;
        data[144] = 0x1000101010000000ULL;
        data[188] = 0x1000101010101000ULL;
        data[190] = 0x1000101010000000ULL;
        data[212] = 0x1000100000000000ULL;
        data[221] = 0x1000101000000000ULL;
        data[234] = 0x1000101010100000ULL;
        data[256] = 0x1000100000000000ULL;
        data[258] = 0x1000100000000000ULL;
        data[265] = 0x1000101000000000ULL;
        data[267] = 0x1000101000000000ULL;
        data[289] = 0x1000100000000000ULL;
        data[301] = 0x1000100000000000ULL;
        data[311] = 0x1000101000000000ULL;
        data[333] = 0x1000100000000000ULL;
        data[335] = 0x1000100000000000ULL;
        data[378] = 0x1000100000000000ULL;
        data[400] = 0x1000100000000000ULL;
        data[444] = 0x1000100000000000ULL;
        data[446] = 0x1000100000000000ULL;
        data[468] = 0x1000101010000000ULL;
        data[477] = 0x1000100000000000ULL;
        data[490] = 0x1000100000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x2000202020202020ULL;
        data[5] = 0x2000200000000000ULL;
        data[22] = 0x2000202020200000ULL;
        data[38] = 0x2000202000000000ULL;
        data[61] = 0x2000202000000000ULL;
        data[94] = 0x2000202020202000ULL;
        data[117] = 0x2000202020200000ULL;
        data[128] = 0x2000200000000000ULL;
        data[132] = 0x2000202000000000ULL;
        data[150] = 0x2000200000000000ULL;
        data[155] = 0x2000202000000000ULL;
        data[166] = 0x2000200000000000ULL;
        data[189] = 0x2000200000000000ULL;
        data[222] = 0x2000200000000000ULL;
        data[234] = 0x2000202020000000ULL;
        data[245] = 0x2000200000000000ULL;
        data[257] = 0x2000202020000000ULL;
        data[260] = 0x2000200000000000ULL;
        data[272] = 0x2000202000000000ULL;
        data[283] = 0x2000200000000000ULL;
        data[295] = 0x2000202000000000ULL;
        data[328] = 0x2000202020000000ULL;
        data[351] = 0x2000202020000000ULL;
        data[362] = 0x2000200000000000ULL;
        data[366] = 0x2000202000000000ULL;
        data[385] = 0x2000200000000000ULL;
        data[389] = 0x2000202000000000ULL;
        data[400] = 0x2000200000000000ULL;
        data[423] = 0x2000200000000000ULL;
        data[456] = 0x2000200000000000ULL;
        data[479] = 0x2000200000000000ULL;
        data[494] = 0x2000200000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(491);
        data[0] = 0x4000404040404040ULL;
        data[2] = 0x4000404040000000ULL;
        data[9] = 0x4000400000000000ULL;
        data[11] = 0x4000400000000000ULL;
        data[33] = 0x4000404000000000ULL;
        data[45] = 0x4000404040400000ULL;
        data[55] = 0x4000400000000000ULL;
        data[77] = 0x4000404000000000ULL;
        data[79] = 0x4000404000000000ULL;
        data[122] = 0x4000404000000000ULL;
        data[144] = 0x4000404040000000ULL;
        data[188] = 0x4000404040404000ULL;
        data[190] = 0x4000404040000000ULL;
        data[212] = 0x4000400000000000ULL;
        data[221] = 0x4000404000000000ULL;
        data[234] = 0x4000404040400000ULL;
        data[256] = 0x4000400000000000ULL;
        data[258] = 0x4000400000000000ULL;
        data[265] = 0x4000404000000000ULL;
        data[267] = 0x4000404000000000ULL;
        data[289] = 0x4000400000000000ULL;
        data[301] = 0x4000400000000000ULL;
        data[311] = 0x4000404000000000ULL;
        data[333] = 0x4000400000000000ULL;
        data[335] = 0x4000400000000000ULL;
        data[378] = 0x4000400000000000ULL;
        data[400] = 0x4000400000000000ULL;
        data[444] = 0x4000400000000000ULL;
        data[446] = 0x4000400000000000ULL;
        data[468] = 0x4000404040000000ULL;
        data[477] = 0x4000400000000000ULL;
        data[490] = 0x4000400000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_9_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x8000808080808080ULL;
        data[5] = 0x8000800000000000ULL;
        data[22] = 0x8000808080800000ULL;
        data[38] = 0x8000808000000000ULL;
        data[61] = 0x8000808000000000ULL;
        data[94] = 0x8000808080808000ULL;
        data[117] = 0x8000808080800000ULL;
        data[128] = 0x8000800000000000ULL;
        data[132] = 0x8000808000000000ULL;
        data[150] = 0x8000800000000000ULL;
        data[155] = 0x8000808000000000ULL;
        data[166] = 0x8000800000000000ULL;
        data[189] = 0x8000800000000000ULL;
        data[222] = 0x8000800000000000ULL;
        data[234] = 0x8000808080000000ULL;
        data[245] = 0x8000800000000000ULL;
        data[257] = 0x8000808080000000ULL;
        data[260] = 0x8000800000000000ULL;
        data[272] = 0x8000808000000000ULL;
        data[283] = 0x8000800000000000ULL;
        data[295] = 0x8000808000000000ULL;
        data[328] = 0x8000808080000000ULL;
        data[351] = 0x8000808080000000ULL;
        data[362] = 0x8000800000000000ULL;
        data[366] = 0x8000808000000000ULL;
        data[385] = 0x8000800000000000ULL;
        data[389] = 0x8000808000000000ULL;
        data[400] = 0x8000800000000000ULL;
        data[423] = 0x8000800000000000ULL;
        data[456] = 0x8000800000000000ULL;
        data[479] = 0x8000800000000000ULL;
        data[494] = 0x8000800000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_21_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(497);
        data[0] = 0x0001010101010101ULL;
        data[1] = 0x0001000000000000ULL;
        data[17] = 0x0001000000000000ULL;
        data[24] = 0x0001010000000000ULL;
        data[34] = 0x0001000000000000ULL;
        data[41] = 0x0001010000000000ULL;
        data[45] = 0x0001000000000000ULL;
        data[61] = 0x0001010000000000ULL;
        data[62] = 0x0001000000000000ULL;
        data[66] = 0x0001000000000000ULL;
        data[78] = 0x0001010000000000ULL;
        data[83] = 0x0001000000000000ULL;
        data[122] = 0x0001010000000000ULL;
        data[127] = 0x0001000000000000ULL;
        data[139] = 0x0001010000000000ULL;
        data[143] = 0x0001010000000000ULL;
        data[144] = 0x0001000000000000ULL;
        data[160] = 0x0001010000000000ULL;
        data[164] = 0x0001000000000000ULL;
        data[171] = 0x0001010100000000ULL;
        data[181] = 0x0001000000000000ULL;
        data[188] = 0x0001010100000000ULL;
        data[204] = 0x0001010000000000ULL;
        data[205] = 0x0001000000000000ULL;
        data[221] = 0x0001010000000000ULL;
        data[222] = 0x0001000000000000ULL;
        data[226] = 0x0001000000000000ULL;
        data[232] = 0x0001010101000000ULL;
        data[242] = 0x0001000000000000ULL;
        data[246] = 0x0001000000000000ULL;
        data[249] = 0x0001010101000000ULL;
        data[253] = 0x0001010100000000ULL;
        data[263] = 0x0001000000000000ULL;
        data[267] = 0x0001000000000000ULL;
        data[270] = 0x0001010100000000ULL;
        data[283] = 0x0001000000000000ULL;
        data[288] = 0x0001000000000000ULL;
        data[304] = 0x0001000000000000ULL;
        data[308] = 0x0001000000000000ULL;
        data[315] = 0x0001010101000000ULL;
        data[324] = 0x0001000000000000ULL;
        data[331] = 0x0001010101000000ULL;
        data[349] = 0x0001000000000000ULL;
        data[352] = 0x0001010100000000ULL;
        data[365] = 0x0001000000000000ULL;
        data[368] = 0x0001010100000000ULL;
        data[386] = 0x0001000000000000ULL;
        data[393] = 0x0001010000000000ULL;
        data[402] = 0x0001000000000000ULL;
        data[409] = 0x0001010000000000ULL;
        data[413] = 0x0001010101010000ULL;
        data[429] = 0x0001010101010100ULL;
        data[434] = 0x0001010100000000ULL;
        data[447] = 0x0001000000000000ULL;
        data[450] = 0x0001010100000000ULL;
        data[454] = 0x0001010000000000ULL;
        data[464] = 0x0001000000000000ULL;
        data[468] = 0x0001000000000000ULL;
        data[470] = 0x0001010000000000ULL;
        data[475] = 0x0001010000000000ULL;
        data[484] = 0x0001000000000000ULL;
        data[491] = 0x0001010000000000ULL;
        data[495] = 0x0001010101010000ULL;
        data[496] = 0x0001000000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x0002020202020202ULL;
        data[5] = 0x0002000000000000ULL;
        data[17] = 0x0002000000000000ULL;
        data[21] = 0x0002020000000000ULL;
        data[22] = 0x0002020202000000ULL;
        data[32] = 0x0002000000000000ULL;
        data[38] = 0x0002020000000000ULL;
        data[55] = 0x0002000000000000ULL;
        data[61] = 0x0002020000000000ULL;
        data[88] = 0x0002000000000000ULL;
        data[94] = 0x0002020202020000ULL;
        data[100] = 0x0002020200000000ULL;
        data[111] = 0x0002000000000000ULL;
        data[117] = 0x0002020202000000ULL;
        data[123] = 0x0002020200000000ULL;
        data[126] = 0x0002000000000000ULL;
        data[128] = 0x0002000000000000ULL;
        data[132] = 0x0002020000000000ULL;
        data[139] = 0x0002020000000000ULL;
        data[149] = 0x0002000000000000ULL;
        data[150] = 0x0002000000000000ULL;
        data[155] = 0x0002020000000000ULL;
        data[161] = 0x0002020000000000ULL;
        data[166] = 0x0002000000000000ULL;
        data[189] = 0x0002000000000000ULL;
        data[194] = 0x0002020200000000ULL;
        data[217] = 0x0002020200000000ULL;
        data[222] = 0x0002000000000000ULL;
        data[228] = 0x0002000000000000ULL;
        data[233] = 0x0002020000000000ULL;
        data[234] = 0x0002020200000000ULL;
        data[245] = 0x0002000000000000ULL;
        data[251] = 0x0002000000000000ULL;
        data[256] = 0x0002020000000000ULL;
        data[257] = 0x0002020200000000ULL;
        data[260] = 0x0002000000000000ULL;
        data[267] = 0x0002000000000000ULL;
        data[272] = 0x0002020000000000ULL;
        data[283] = 0x0002000000000000ULL;
        data[289] = 0x0002000000000000ULL;
        data[295] = 0x0002020000000000ULL;
        data[322] = 0x0002000000000000ULL;
        data[328] = 0x0002020200000000ULL;
        data[345] = 0x0002000000000000ULL;
        data[351] = 0x0002020200000000ULL;
        data[361] = 0x0002000000000000ULL;
        data[362] = 0x0002000000000000ULL;
        data[366] = 0x0002020000000000ULL;
        data[378] = 0x0002020202020200ULL;
        data[384] = 0x0002000000000000ULL;
        data[385] = 0x0002000000000000ULL;
        data[389] = 0x0002020000000000ULL;
        data[400] = 0x0002000000000000ULL;
        data[401] = 0x0002020202000000ULL;
        data[416] = 0x0002020000000000ULL;
        data[423] = 0x0002000000000000ULL;
        data[439] = 0x0002020000000000ULL;
        data[456] = 0x0002000000000000ULL;
        data[472] = 0x0002020202020000ULL;
        data[479] = 0x0002000000000000ULL;
        data[494] = 0x0002000000000000ULL;
        data[495] = 0x0002020202000000ULL;
        data[506] = 0x0002000000000000ULL;
        data[510] = 0x0002020000000000ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_9_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(508);
        data[0] = 0x0004040404040404ULL;
        data[3] = 0x0004000000000000ULL;
        data[11] = 0x0004000000000000ULL;
        data[19] = 0x0004040404040000ULL;
        data[33] = 0x0004040000000000ULL;
        data[39] = 0x0004000000000000ULL;
        data[41] = 0x0004000000000000ULL;
        data[53] = 0x0004040000000000ULL;
        data[58] = 0x0004000000000000ULL;
        data[60] = 0x0004000000000000ULL;
        data[80] = 0x0004040400000000ULL;
        data[93] = 0x0004000000000000ULL;
        data[97] = 0x0004000000000000ULL;
        data[100] = 0x0004040400000000ULL;
        data[112] = 0x0004000000000000ULL;
        data[116] = 0x0004000000000000ULL;
        data[134] = 0x0004040000000000ULL;
        data[138] = 0x0004040400000000ULL;
        data[151] = 0x0004000000000000ULL;
        data[154] = 0x0004040000000000ULL;
        data[158] = 0x0004040400000000ULL;
        data[170] = 0x0004000000000000ULL;
        data[190] = 0x0004040000000000ULL;
        data[192] = 0x0004040000000000ULL;
        data[198] = 0x0004000000000000ULL;
        data[209] = 0x0004040000000000ULL;
        data[211] = 0x0004040000000000ULL;
        data[217] = 0x0004000000000000ULL;
        data[231] = 0x0004000000000000ULL;
        data[239] = 0x0004040400000000ULL;
        data[248] = 0x0004040000000000ULL;
        data[251] = 0x0004000000000000ULL;
        data[256] = 0x0004000000000000ULL;
        data[259] = 0x0004040400000000ULL;
        data[267] = 0x0004040000000000ULL;
        data[275] = 0x0004000000000000ULL;
        data[289] = 0x0004000000000000ULL;
        data[295] = 0x0004040404000000ULL;
        data[297] = 0x0004040400000000ULL;
        data[309] = 0x0004000000000000ULL;
        data[314] = 0x0004040404000000ULL;
        data[316] = 0x0004040400000000ULL;
        data[336] = 0x0004000000000000ULL;
        data[349] = 0x0004040000000000ULL;
        data[353] = 0x0004040404000000ULL;
        data[356] = 0x0004000000000000ULL;
        data[368] = 0x0004040000000000ULL;
        data[372] = 0x0004040404000000ULL;
        data[390] = 0x0004000000000000ULL;
        data[394] = 0x0004000000000000ULL;
        data[407] = 0x0004040000000000ULL;
        data[410] = 0x0004000000000000ULL;
        data[414] = 0x0004000000000000ULL;
        data[426] = 0x0004040000000000ULL;
        data[446] = 0x0004000000000000ULL;
        data[448] = 0x0004000000000000ULL;
        data[454] = 0x0004040404040400ULL;
        data[465] = 0x0004000000000000ULL;
        data[467] = 0x0004000000000000ULL;
        data[473] = 0x0004040404040000ULL;
        data[487] = 0x0004040000000000ULL;
        data[495] = 0x0004000000000000ULL;
        data[504] = 0x0004000000000000ULL;
        data[507] = 0x0004040000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(508);
        data[0] = 0x0008080808080808ULL;
        data[1] = 0x0008000000000000ULL;
        data[8] = 0x0008000000000000ULL;
        data[15] = 0x0008080000000000ULL;
        data[22] = 0x0008000000000000ULL;
        data[29] = 0x0008080808000000ULL;
        data[34] = 0x0008080000000000ULL;
        data[37] = 0x0008000000000000ULL;
        data[41] = 0x0008000000000000ULL;
        data[48] = 0x0008080800000000ULL;
        data[55] = 0x0008000000000000ULL;
        data[64] = 0x0008080000000000ULL;
        data[68] = 0x0008080000000000ULL;
        data[70] = 0x0008000000000000ULL;
        data[82] = 0x0008080800000000ULL;
        data[90] = 0x0008000000000000ULL;
        data[97] = 0x0008080000000000ULL;
        data[104] = 0x0008080000000000ULL;
        data[118] = 0x0008080808080000ULL;
        data[123] = 0x0008000000000000ULL;
        data[133] = 0x0008080000000000ULL;
        data[137] = 0x0008080000000000ULL;
        data[151] = 0x0008080808080000ULL;
        data[159] = 0x0008000000000000ULL;
        data[166] = 0x0008080000000000ULL;
        data[186] = 0x0008080000000000ULL;
        data[190] = 0x0008000000000000ULL;
        data[193] = 0x0008000000000000ULL;
        data[219] = 0x0008080000000000ULL;
        data[224] = 0x0008000000000000ULL;
        data[255] = 0x0008080000000000ULL;
        data[260] = 0x0008000000000000ULL;
        data[286] = 0x0008080800000000ULL;
        data[289] = 0x0008080000000000ULL;
        data[293] = 0x0008000000000000ULL;
        data[313] = 0x0008000000000000ULL;
        data[320] = 0x0008080800000000ULL;
        data[328] = 0x0008000000000000ULL;
        data[342] = 0x0008000000000000ULL;
        data[346] = 0x0008000000000000ULL;
        data[356] = 0x0008080808000000ULL;
        data[361] = 0x0008000000000000ULL;
        data[375] = 0x0008000000000000ULL;
        data[382] = 0x0008000000000000ULL;
        data[389] = 0x0008080808000000ULL;
        data[397] = 0x0008000000000000ULL;
        data[409] = 0x0008080800000000ULL;
        data[411] = 0x0008000000000000ULL;
        data[416] = 0x0008000000000000ULL;
        data[424] = 0x0008080000000000ULL;
        data[431] = 0x0008000000000000ULL;
        data[438] = 0x0008080800000000ULL;
        data[442] = 0x0008080800000000ULL;
        data[445] = 0x0008000000000000ULL;
        data[450] = 0x0008000000000000ULL;
        data[457] = 0x0008080000000000ULL;
        data[464] = 0x0008000000000000ULL;
        data[471] = 0x0008080800000000ULL;
        data[478] = 0x0008080808080800ULL;
        data[480] = 0x0008000000000000ULL;
        data[484] = 0x0008000000000000ULL;
        data[493] = 0x0008080000000000ULL;
        data[498] = 0x0008000000000000ULL;
        data[507] = 0x0008080808000000ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(508);
        data[0] = 0x0010101010101010ULL;
        data[3] = 0x0010000000000000ULL;
        data[11] = 0x0010000000000000ULL;
        data[19] = 0x0010101010100000ULL;
        data[33] = 0x0010100000000000ULL;
        data[39] = 0x0010000000000000ULL;
        data[41] = 0x0010000000000000ULL;
        data[53] = 0x0010100000000000ULL;
        data[58] = 0x0010000000000000ULL;
        data[60] = 0x0010000000000000ULL;
        data[80] = 0x0010101000000000ULL;
        data[93] = 0x0010000000000000ULL;
        data[97] = 0x0010000000000000ULL;
        data[100] = 0x0010101000000000ULL;
        data[112] = 0x0010000000000000ULL;
        data[116] = 0x0010000000000000ULL;
        data[134] = 0x0010100000000000ULL;
        data[138] = 0x0010101000000000ULL;
        data[151] = 0x0010000000000000ULL;
        data[154] = 0x0010100000000000ULL;
        data[158] = 0x0010101000000000ULL;
        data[170] = 0x0010000000000000ULL;
        data[190] = 0x0010100000000000ULL;
        data[192] = 0x0010100000000000ULL;
        data[198] = 0x0010000000000000ULL;
        data[209] = 0x0010100000000000ULL;
        data[211] = 0x0010100000000000ULL;
        data[217] = 0x0010000000000000ULL;
        data[231] = 0x0010000000000000ULL;
        data[239] = 0x0010101000000000ULL;
        data[248] = 0x0010100000000000ULL;
        data[251] = 0x0010000000000000ULL;
        data[256] = 0x0010000000000000ULL;
        data[259] = 0x0010101000000000ULL;
        data[267] = 0x0010100000000000ULL;
        data[275] = 0x0010000000000000ULL;
        data[289] = 0x0010000000000000ULL;
        data[295] = 0x0010101010000000ULL;
        data[297] = 0x0010101000000000ULL;
        data[309] = 0x0010000000000000ULL;
        data[314] = 0x0010101010000000ULL;
        data[316] = 0x0010101000000000ULL;
        data[336] = 0x0010000000000000ULL;
        data[349] = 0x0010100000000000ULL;
        data[353] = 0x0010101010000000ULL;
        data[356] = 0x0010000000000000ULL;
        data[368] = 0x0010100000000000ULL;
        data[372] = 0x0010101010000000ULL;
        data[390] = 0x0010000000000000ULL;
        data[394] = 0x0010000000000000ULL;
        data[407] = 0x0010100000000000ULL;
        data[410] = 0x0010000000000000ULL;
        data[414] = 0x0010000000000000ULL;
        data[426] = 0x0010100000000000ULL;
        data[446] = 0x0010000000000000ULL;
        data[448] = 0x0010000000000000ULL;
        data[454] = 0x0010101010101000ULL;
        data[465] = 0x0010000000000000ULL;
        data[467] = 0x0010000000000000ULL;
        data[473] = 0x0010101010100000ULL;
        data[487] = 0x0010100000000000ULL;
        data[495] = 0x0010000000000000ULL;
        data[504] = 0x0010000000000000ULL;
        data[507] = 0x0010100000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x0020202020202020ULL;
        data[5] = 0x0020000000000000ULL;
        data[17] = 0x0020000000000000ULL;
        data[21] = 0x0020200000000000ULL;
        data[22] = 0x0020202020000000ULL;
        data[32] = 0x0020000000000000ULL;
        data[38] = 0x0020200000000000ULL;
        data[55] = 0x0020000000000000ULL;
        data[61] = 0x0020200000000000ULL;
        data[88] = 0x0020000000000000ULL;
        data[94] = 0x0020202020200000ULL;
        data[100] = 0x0020202000000000ULL;
        data[111] = 0x0020000000000000ULL;
        data[117] = 0x0020202020000000ULL;
        data[123] = 0x0020202000000000ULL;
        data[126] = 0x0020000000000000ULL;
        data[128] = 0x0020000000000000ULL;
        data[132] = 0x0020200000000000ULL;
        data[139] = 0x0020200000000000ULL;
        data[149] = 0x0020000000000000ULL;
        data[150] = 0x0020000000000000ULL;
        data[155] = 0x0020200000000000ULL;
        data[161] = 0x0020200000000000ULL;
        data[166] = 0x0020000000000000ULL;
        data[189] = 0x0020000000000000ULL;
        data[194] = 0x0020202000000000ULL;
        data[217] = 0x0020202000000000ULL;
        data[222] = 0x0020000000000000ULL;
        data[228] = 0x0020000000000000ULL;
        data[233] = 0x0020200000000000ULL;
        data[234] = 0x0020202000000000ULL;
        data[245] = 0x0020000000000000ULL;
        data[251] = 0x0020000000000000ULL;
        data[256] = 0x0020200000000000ULL;
        data[257] = 0x0020202000000000ULL;
        data[260] = 0x0020000000000000ULL;
        data[267] = 0x0020000000000000ULL;
        data[272] = 0x0020200000000000ULL;
        data[283] = 0x0020000000000000ULL;
        data[289] = 0x0020000000000000ULL;
        data[295] = 0x0020200000000000ULL;
        data[322] = 0x0020000000000000ULL;
        data[328] = 0x0020202000000000ULL;
        data[345] = 0x0020000000000000ULL;
        data[351] = 0x0020202000000000ULL;
        data[361] = 0x0020000000000000ULL;
        data[362] = 0x0020000000000000ULL;
        data[366] = 0x0020200000000000ULL;
        data[378] = 0x0020202020202000ULL;
        data[384] = 0x0020000000000000ULL;
        data[385] = 0x0020000000000000ULL;
        data[389] = 0x0020200000000000ULL;
        data[400] = 0x0020000000000000ULL;
        data[401] = 0x0020202020000000ULL;
        data[416] = 0x0020200000000000ULL;
        data[423] = 0x0020000000000000ULL;
        data[439] = 0x0020200000000000ULL;
        data[456] = 0x0020000000000000ULL;
        data[472] = 0x0020202020200000ULL;
        data[479] = 0x0020000000000000ULL;
        data[494] = 0x0020000000000000ULL;
        data[495] = 0x0020202020000000ULL;
        data[506] = 0x0020000000000000ULL;
        data[510] = 0x0020200000000000ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(501);
        data[0] = 0x0040404040404040ULL;
        data[9] = 0x0040000000000000ULL;
        data[10] = 0x0040000000000000ULL;
        data[25] = 0x0040404000000000ULL;
        data[29] = 0x0040000000000000ULL;
        data[33] = 0x0040400000000000ULL;
        data[37] = 0x0040000000000000ULL;
        data[52] = 0x0040400000000000ULL;
        data[62] = 0x0040000000000000ULL;
        data[73] = 0x0040404040000000ULL;
        data[74] = 0x0040404000000000ULL;
        data[84] = 0x0040000000000000ULL;
        data[93] = 0x0040404040000000ULL;
        data[101] = 0x0040400000000000ULL;
        data[103] = 0x0040000000000000ULL;
        data[111] = 0x0040000000000000ULL;
        data[112] = 0x0040000000000000ULL;
        data[126] = 0x0040400000000000ULL;
        data[130] = 0x0040000000000000ULL;
        data[148] = 0x0040404000000000ULL;
        data[152] = 0x0040000000000000ULL;
        data[167] = 0x0040404000000000ULL;
        data[175] = 0x0040400000000000ULL;
        data[176] = 0x0040400000000000ULL;
        data[182] = 0x0040000000000000ULL;
        data[185] = 0x0040000000000000ULL;
        data[194] = 0x0040400000000000ULL;
        data[205] = 0x0040000000000000ULL;
        data[216] = 0x0040404040000000ULL;
        data[226] = 0x0040000000000000ULL;
        data[246] = 0x0040404040400000ULL;
        data[249] = 0x0040400000000000ULL;
        data[254] = 0x0040000000000000ULL;
        data[256] = 0x0040000000000000ULL;
        data[269] = 0x0040400000000000ULL;
        data[284] = 0x0040000000000000ULL;
        data[290] = 0x0040404000000000ULL;
        data[305] = 0x0040000000000000ULL;
        data[318] = 0x0040400000000000ULL;
        data[320] = 0x0040404000000000ULL;
        data[324] = 0x0040000000000000ULL;
        data[328] = 0x0040000000000000ULL;
        data[348] = 0x0040400000000000ULL;
        data[358] = 0x0040000000000000ULL;
        data[369] = 0x0040404040404000ULL;
        data[379] = 0x0040000000000000ULL;
        data[388] = 0x0040404040400000ULL;
        data[392] = 0x0040400000000000ULL;
        data[398] = 0x0040000000000000ULL;
        data[399] = 0x0040000000000000ULL;
        data[407] = 0x0040000000000000ULL;
        data[422] = 0x0040400000000000ULL;
        data[426] = 0x0040000000000000ULL;
        data[443] = 0x0040404000000000ULL;
        data[448] = 0x0040000000000000ULL;
        data[462] = 0x0040404040000000ULL;
        data[463] = 0x0040404000000000ULL;
        data[471] = 0x0040400000000000ULL;
        data[473] = 0x0040000000000000ULL;
        data[481] = 0x0040000000000000ULL;
        data[490] = 0x0040400000000000ULL;
        data[500] = 0x0040000000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x0080808080808080ULL;
        data[5] = 0x0080000000000000ULL;
        data[17] = 0x0080000000000000ULL;
        data[21] = 0x0080800000000000ULL;
        data[22] = 0x0080808080000000ULL;
        data[32] = 0x0080000000000000ULL;
        data[38] = 0x0080800000000000ULL;
        data[55] = 0x0080000000000000ULL;
        data[61] = 0x0080800000000000ULL;
        data[88] = 0x0080000000000000ULL;
        data[94] = 0x0080808080800000ULL;
        data[100] = 0x0080808000000000ULL;
        data[111] = 0x0080000000000000ULL;
        data[117] = 0x0080808080000000ULL;
        data[123] = 0x0080808000000000ULL;
        data[126] = 0x0080000000000000ULL;
        data[128] = 0x0080000000000000ULL;
        data[132] = 0x0080800000000000ULL;
        data[139] = 0x0080800000000000ULL;
        data[149] = 0x0080000000000000ULL;
        data[150] = 0x0080000000000000ULL;
        data[155] = 0x0080800000000000ULL;
        data[161] = 0x0080800000000000ULL;
        data[166] = 0x0080000000000000ULL;
        data[189] = 0x0080000000000000ULL;
        data[194] = 0x0080808000000000ULL;
        data[217] = 0x0080808000000000ULL;
        data[222] = 0x0080000000000000ULL;
        data[228] = 0x0080000000000000ULL;
        data[233] = 0x0080800000000000ULL;
        data[234] = 0x0080808000000000ULL;
        data[245] = 0x0080000000000000ULL;
        data[251] = 0x0080000000000000ULL;
        data[256] = 0x0080800000000000ULL;
        data[257] = 0x0080808000000000ULL;
        data[260] = 0x0080000000000000ULL;
        data[267] = 0x0080000000000000ULL;
        data[272] = 0x0080800000000000ULL;
        data[283] = 0x0080000000000000ULL;
        data[289] = 0x0080000000000000ULL;
        data[295] = 0x0080800000000000ULL;
        data[322] = 0x0080000000000000ULL;
        data[328] = 0x0080808000000000ULL;
        data[345] = 0x0080000000000000ULL;
        data[351] = 0x0080808000000000ULL;
        data[361] = 0x0080000000000000ULL;
        data[362] = 0x0080000000000000ULL;
        data[366] = 0x0080800000000000ULL;
        data[378] = 0x0080808080808000ULL;
        data[384] = 0x0080000000000000ULL;
        data[385] = 0x0080000000000000ULL;
        data[389] = 0x0080800000000000ULL;
        data[400] = 0x0080000000000000ULL;
        data[401] = 0x0080808080000000ULL;
        data[416] = 0x0080800000000000ULL;
        data[423] = 0x0080000000000000ULL;
        data[439] = 0x0080800000000000ULL;
        data[456] = 0x0080000000000000ULL;
        data[472] = 0x0080808080800000ULL;
        data[479] = 0x0080000000000000ULL;
        data[494] = 0x0080000000000000ULL;
        data[495] = 0x0080808080000000ULL;
        data[506] = 0x0080000000000000ULL;
        data[510] = 0x0080800000000000ULL;
    }),
};

static const AttackTable BB_RANK_ATTACKS[64] = {
    AttackTable(RightShift<1>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x00000000000000feULL;
        data[1] = 0x0000000000000002ULL;
        data[2] = 0x0000000000000006ULL;
        data[3] = 0x0000000000000002ULL;
        data[4] = 0x000000000000000eULL;
        data[5] = 0x0000000000000002ULL;
        data[6] = 0x0000000000000006ULL;
        data[7] = 0x0000000000000002ULL;
        data[8] = 0x000000000000001eULL;
        data[9] = 0x0000000000000002ULL;
        data[10] = 0x0000000000000006ULL;
        data[11] = 0x0000000000000002ULL;
        data[12] = 0x000000000000000eULL;
        data[13] = 0x0000000000000002ULL;
        data[14] = 0x0000000000000006ULL;
        data[15] = 0x0000000000000002ULL;
        data[16] = 0x000000000000003eULL;
        data[17] = 0x0000000000000002ULL;
        data[18] = 0x0000000000000006ULL;
        data[19] = 0x0000000000000002ULL;
        data[20] = 0x000000000000000eULL;
        data[21] = 0x0000000000000002ULL;
        data[22] = 0x0000000000000006ULL;
        data[23] = 0x0000000000000002ULL;
        data[24] = 0x000000000000001eULL;
        data[25] = 0x0000000000000002ULL;
        data[26] = 0x0000000000000006ULL;
        data[27] = 0x0000000000000002ULL;
        data[28] = 0x000000000000000eULL;
        data[29] = 0x0000000000000002ULL;
        data[30] = 0x0000000000000006ULL;
        data[31] = 0x0000000000000002ULL;
        data[32] = 0x000000000000007eULL;
        data[33] = 0x0000000000000002ULL;
        data[34] = 0x0000000000000006ULL;
        data[35] = 0x0000000000000002ULL;
        data[36] = 0x000000000000000eULL;
        data[37] = 0x0000000000000002ULL;
        data[38] = 0x0000000000000006ULL;
        data[39] = 0x0000000000000002ULL;
        data[40] = 0x000000000000001eULL;
        data[41] = 0x0000000000000002ULL;
        data[42] = 0x0000000000000006ULL;
        data[43] = 0x0000000000000002ULL;
        data[44] = 0x000000000000000eULL;
        data[45] = 0x0000000000000002ULL;
        data[46] = 0x0000000000000006ULL;
        data[47] = 0x0000000000000002ULL;
        data[48] = 0x000000000000003eULL;
        data[49] = 0x0000000000000002ULL;
        data[50] = 0x0000000000000006ULL;
        data[51] = 0x0000000000000002ULL;
        data[52] = 0x000000000000000eULL;
        data[53] = 0x0000000000000002ULL;
        data[54] = 0x0000000000000006ULL;
        data[55] = 0x0000000000000002ULL;
        data[56] = 0x000000000000001eULL;
        data[57] = 0x0000000000000002ULL;
        data[58] = 0x0000000000000006ULL;
        data[59] = 0x0000000000000002ULL;
        data[60] = 0x000000000000000eULL;
        data[61] = 0x0000000000000002ULL;
        data[62] = 0x0000000000000006ULL;
        data[63] = 0x0000000000000002ULL;
    }),
    AttackTable(RightShift<2>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x00000000000000fdULL;
        data[1] = 0x0000000000000005ULL;
        data[2] = 0x000000000000000dULL;
        data[3] = 0x0000000000000005ULL;
        data[4] = 0x000000000000001dULL;
        data[5] = 0x0000000000000005ULL;
        data[6] = 0x000000000000000dULL;
        data[7] = 0x0000000000000005ULL;
        data[8] = 0x000000000000003dULL;
        data[9] = 0x0000000000000005ULL;
        data[10] = 0x000000000000000dULL;
        data[11] = 0x0000000000000005ULL;
        data[12] = 0x000000000000001dULL;
        data[13] = 0x0000000000000005ULL;
        data[14] = 0x000000000000000dULL;
        data[15] = 0x0000000000000005ULL;
        data[16] = 0x000000000000007dULL;
        data[17] = 0x0000000000000005ULL;
        data[18] = 0x000000000000000dULL;
        data[19] = 0x0000000000000005ULL;
        data[20] = 0x000000000000001dULL;
        data[21] = 0x0000000000000005ULL;
        data[22] = 0x000000000000000dULL;
        data[23] = 0x0000000000000005ULL;
        data[24] = 0x000000000000003dULL;
        data[25] = 0x0000000000000005ULL;
        data[26] = 0x000000000000000dULL;
        data[27] = 0x0000000000000005ULL;
        data[28] = 0x000000000000001dULL;
        data[29] = 0x0000000000000005ULL;
        data[30] = 0x000000000000000dULL;
        data[31] = 0x0000000000000005ULL;
    }),
    AttackTable(RightShift<1>::hash, [](std::vector<uint64_t>& data) {
        data.resize(62);
        data[0] = 0x00000000000000fbULL;
        data[1] = 0x00000000000000faULL;
        data[4] = 0x000000000000000bULL;
        data[5] = 0x000000000000000aULL;
        data[8] = 0x000000000000001bULL;
        data[9] = 0x000000000000001aULL;
        data[12] = 0x000000000000000bULL;
        data[13] = 0x000000000000000aULL;
        data[16] = 0x000000000000003bULL;
        data[17] = 0x000000000000003aULL;
        data[20] = 0x000000000000000bULL;
        data[21] = 0x000000000000000aULL;
        data[24] = 0x000000000000001bULL;
        data[25] = 0x000000000000001aULL;
        data[28] = 0x000000000000000bULL;
        data[29] = 0x000000000000000aULL;
        data[32] = 0x000000000000007bULL;
        data[33] = 0x000000000000007aULL;
        data[36] = 0x000000000000000bULL;
        data[37] = 0x000000000000000aULL;
        data[40] = 0x000000000000001bULL;
        data[41] = 0x000000000000001aULL;
        data[44] = 0x000000000000000bULL;
        data[45] = 0x000000000000000aULL;
        data[48] = 0x000000000000003bULL;
        data[49] = 0x000000000000003aULL;
        data[52] = 0x000000000000000bULL;
        data[53] = 0x000000000000000aULL;
        data[56] = 0x000000000000001bULL;
        data[57] = 0x000000000000001aULL;
        data[60] = 0x000000000000000bULL;
        data[61] = 0x000000000000000aULL;
    }),
    AttackTable(RightShift<1>::hash, [](std::vector<uint64_t>& data) {
        data.resize(60);
        data[0] = 0x00000000000000f7ULL;
        data[1] = 0x00000000000000f6ULL;
        data[2] = 0x00000000000000f4ULL;
        data[3] = 0x00000000000000f4ULL;
        data[8] = 0x0000000000000017ULL;
        data[9] = 0x0000000000000016ULL;
        data[10] = 0x0000000000000014ULL;
        data[11] = 0x0000000000000014ULL;
        data[16] = 0x0000000000000037ULL;
        data[17] = 0x0000000000000036ULL;
        data[18] = 0x0000000000000034ULL;
        data[19] = 0x0000000000000034ULL;
        data[24] = 0x0000000000000017ULL;
        data[25] = 0x0000000000000016ULL;
        data[26] = 0x0000000000000014ULL;
        data[27] = 0x0000000000000014ULL;
        data[32] = 0x0000000000000077ULL;
        data[33] = 0x0000000000000076ULL;
        data[34] = 0x0000000000000074ULL;
        data[35] = 0x0000000000000074ULL;
        data[40] = 0x0000000000000017ULL;
        data[41] = 0x0000000000000016ULL;
        data[42] = 0x0000000000000014ULL;
        data[43] = 0x0000000000000014ULL;
        data[48] = 0x0000000000000037ULL;
        data[49] = 0x0000000000000036ULL;
        data[50] = 0x0000000000000034ULL;
        data[51] = 0x0000000000000034ULL;
        data[56] = 0x0000000000000017ULL;
        data[57] = 0x0000000000000016ULL;
        data[58] = 0x0000000000000014ULL;
        data[59] = 0x0000000000000014ULL;
    }),
    AttackTable(RightShift<1>::hash, [](std::vector<uint64_t>& data) {
        data.resize(56);
        data[0] = 0x00000000000000efULL;
        data[1] = 0x00000000000000eeULL;
        data[2] = 0x00000000000000ecULL;
        data[3] = 0x00000000000000ecULL;
        data[4] = 0x00000000000000e8ULL;
        data[5] = 0x00000000000000e8ULL;
        data[6] = 0x00000000000000e8ULL;
        data[7] = 0x00000000000000e8ULL;
        data[16] = 0x000000000000002fULL;
        data[17] = 0x000000000000002eULL;
        data[18] = 0x000000000000002cULL;
        data[19] = 0x000000000000002cULL;
        data[20] = 0x0000000000000028ULL;
        data[21] = 0x0000000000000028ULL;
        data[22] = 0x0000000000000028ULL;
        data[23] = 0x0000000000000028ULL;
        data[32] = 0x000000000000006fULL;
        data[33] = 0x000000000000006eULL;
        data[34] = 0x000000000000006cULL;
        data[35] = 0x000000000000006cULL;
        data[36] = 0x0000000000000068ULL;
        data[37] = 0x0000000000000068ULL;
        data[38] = 0x0000000000000068ULL;
        data[39] = 0x0000000000000068ULL;
        data[48] = 0x000000000000002fULL;
        data[49] = 0x000000000000002eULL;
        data[50] = 0x000000000000002cULL;
        data[51] = 0x000000000000002cULL;
        data[52] = 0x0000000000000028ULL;
        data[53] = 0x0000000000000028ULL;
        data[54] = 0x0000000000000028ULL;
        data[55] = 0x0000000000000028ULL;
    }),
    AttackTable(RightShift<1>::hash, [](std::vector<uint64_t>& data) {
        data.resize(48);
        data[0] = 0x00000000000000dfULL;
        data[1] = 0x00000000000000deULL;
        data[2] = 0x00000000000000dcULL;
        data[3] = 0x00000000000000dcULL;
        data[4] = 0x00000000000000d8ULL;
        data[5] = 0x00000000000000d8ULL;
        data[6] = 0x00000000000000d8ULL;
        data[7] = 0x00000000000000d8ULL;
        data[8] = 0x00000000000000d0ULL;
        data[9] = 0x00000000000000d0ULL;
        data[10] = 0x00000000000000d0ULL;
        data[11] = 0x00000000000000d0ULL;
        data[12] = 0x00000000000000d0ULL;
        data[13] = 0x00000000000000d0ULL;
        data[14] = 0x00000000000000d0ULL;
        data[15] = 0x00000000000000d0ULL;
        data[32] = 0x000000000000005fULL;
        data[33] = 0x000000000000005eULL;
        data[34] = 0x000000000000005cULL;
        data[35] = 0x000000000000005cULL;
        data[36] = 0x0000000000000058ULL;
        data[37] = 0x0000000000000058ULL;
        data[38] = 0x0000000000000058ULL;
        data[39] = 0x0000000000000058ULL;
        data[40] = 0x0000000000000050ULL;
        data[41] = 0x0000000000000050ULL;
        data[42] = 0x0000000000000050ULL;
        data[43] = 0x0000000000000050ULL;
        data[44] = 0x0000000000000050ULL;
        data[45] = 0x0000000000000050ULL;
        data[46] = 0x0000000000000050ULL;
        data[47] = 0x0000000000000050ULL;
    }),
    AttackTable(RightShift<1>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x00000000000000bfULL;
        data[1] = 0x00000000000000beULL;
        data[2] = 0x00000000000000bcULL;
        data[3] = 0x00000000000000bcULL;
        data[4] = 0x00000000000000b8ULL;
        data[5] = 0x00000000000000b8ULL;
        data[6] = 0x00000000000000b8ULL;
        data[7] = 0x00000000000000b8ULL;
        data[8] = 0x00000000000000b0ULL;
        data[9] = 0x00000000000000b0ULL;
        data[10] = 0x00000000000000b0ULL;
        data[11] = 0x00000000000000b0ULL;
        data[12] = 0x00000000000000b0ULL;
        data[13] = 0x00000000000000b0ULL;
        data[14] = 0x00000000000000b0ULL;
        data[15] = 0x00000000000000b0ULL;
        data[16] = 0x00000000000000a0ULL;
        data[17] = 0x00000000000000a0ULL;
        data[18] = 0x00000000000000a0ULL;
        data[19] = 0x00000000000000a0ULL;
        data[20] = 0x00000000000000a0ULL;
        data[21] = 0x00000000000000a0ULL;
        data[22] = 0x00000000000000a0ULL;
        data[23] = 0x00000000000000a0ULL;
        data[24] = 0x00000000000000a0ULL;
        data[25] = 0x00000000000000a0ULL;
        data[26] = 0x00000000000000a0ULL;
        data[27] = 0x00000000000000a0ULL;
        data[28] = 0x00000000000000a0ULL;
        data[29] = 0x00000000000000a0ULL;
        data[30] = 0x00000000000000a0ULL;
        data[31] = 0x00000000000000a0ULL;
    }),
    AttackTable(RightShift<1>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x000000000000007fULL;
        data[1] = 0x000000000000007eULL;
        data[2] = 0x000000000000007cULL;
        data[3] = 0x000000000000007cULL;
        data[4] = 0x0000000000000078ULL;
        data[5] = 0x0000000000000078ULL;
        data[6] = 0x0000000000000078ULL;
        data[7] = 0x0000000000000078ULL;
        data[8] = 0x0000000000000070ULL;
        data[9] = 0x0000000000000070ULL;
        data[10] = 0x0000000000000070ULL;
        data[11] = 0x0000000000000070ULL;
        data[12] = 0x0000000000000070ULL;
        data[13] = 0x0000000000000070ULL;
        data[14] = 0x0000000000000070ULL;
        data[15] = 0x0000000000000070ULL;
        data[16] = 0x0000000000000060ULL;
        data[17] = 0x0000000000000060ULL;
        data[18] = 0x0000000000000060ULL;
        data[19] = 0x0000000000000060ULL;
        data[20] = 0x0000000000000060ULL;
        data[21] = 0x0000000000000060ULL;
        data[22] = 0x0000000000000060ULL;
        data[23] = 0x0000000000000060ULL;
        data[24] = 0x0000000000000060ULL;
        data[25] = 0x0000000000000060ULL;
        data[26] = 0x0000000000000060ULL;
        data[27] = 0x0000000000000060ULL;
        data[28] = 0x0000000000000060ULL;
        data[29] = 0x0000000000000060ULL;
        data[30] = 0x0000000000000060ULL;
        data[31] = 0x0000000000000060ULL;
        data[32] = 0x0000000000000040ULL;
        data[33] = 0x0000000000000040ULL;
        data[34] = 0x0000000000000040ULL;
        data[35] = 0x0000000000000040ULL;
        data[36] = 0x0000000000000040ULL;
        data[37] = 0x0000000000000040ULL;
        data[38] = 0x0000000000000040ULL;
        data[39] = 0x0000000000000040ULL;
        data[40] = 0x0000000000000040ULL;
        data[41] = 0x0000000000000040ULL;
        data[42] = 0x0000000000000040ULL;
        data[43] = 0x0000000000000040ULL;
        data[44] = 0x0000000000000040ULL;
        data[45] = 0x0000000000000040ULL;
        data[46] = 0x0000000000000040ULL;
        data[47] = 0x0000000000000040ULL;
        data[48] = 0x0000000000000040ULL;
        data[49] = 0x0000000000000040ULL;
        data[50] = 0x0000000000000040ULL;
        data[51] = 0x0000000000000040ULL;
        data[52] = 0x0000000000000040ULL;
        data[53] = 0x0000000000000040ULL;
        data[54] = 0x0000000000000040ULL;
        data[55] = 0x0000000000000040ULL;
        data[56] = 0x0000000000000040ULL;
        data[57] = 0x0000000000000040ULL;
        data[58] = 0x0000000000000040ULL;
        data[59] = 0x0000000000000040ULL;
        data[60] = 0x0000000000000040ULL;
        data[61] = 0x0000000000000040ULL;
        data[62] = 0x0000000000000040ULL;
        data[63] = 0x0000000000000040ULL;
    }),
    AttackTable(RightShift<9>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x000000000000fe00ULL;
        data[1] = 0x0000000000000200ULL;
        data[2] = 0x0000000000000600ULL;
        data[3] = 0x0000000000000200ULL;
        data[4] = 0x0000000000000e00ULL;
        data[5] = 0x0000000000000200ULL;
        data[6] = 0x0000000000000600ULL;
        data[7] = 0x0000000000000200ULL;
        data[8] = 0x0000000000001e00ULL;
        data[9] = 0x0000000000000200ULL;
        data[10] = 0x0000000000000600ULL;
        data[11] = 0x0000000000000200ULL;
        data[12] = 0x0000000000000e00ULL;
        data[13] = 0x0000000000000200ULL;
        data[14] = 0x0000000000000600ULL;
        data[15] = 0x0000000000000200ULL;
        data[16] = 0x0000000000003e00ULL;
        data[17] = 0x0000000000000200ULL;
        data[18] = 0x0000000000000600ULL;
        data[19] = 0x0000000000000200ULL;
        data[20] = 0x0000000000000e00ULL;
        data[21] = 0x0000000000000200ULL;
        data[22] = 0x0000000000000600ULL;
        data[23] = 0x0000000000000200ULL;
        data[24] = 0x0000000000001e00ULL;
        data[25] = 0x0000000000000200ULL;
        data[26] = 0x0000000000000600ULL;
        data[27] = 0x0000000000000200ULL;
        data[28] = 0x0000000000000e00ULL;
        data[29] = 0x0000000000000200ULL;
        data[30] = 0x0000000000000600ULL;
        data[31] = 0x0000000000000200ULL;
        data[32] = 0x0000000000007e00ULL;
        data[33] = 0x0000000000000200ULL;
        data[34] = 0x0000000000000600ULL;
        data[35] = 0x0000000000000200ULL;
        data[36] = 0x0000000000000e00ULL;
        data[37] = 0x0000000000000200ULL;
        data[38] = 0x0000000000000600ULL;
        data[39] = 0x0000000000000200ULL;
        data[40] = 0x0000000000001e00ULL;
        data[41] = 0x0000000000000200ULL;
        data[42] = 0x0000000000000600ULL;
        data[43] = 0x0000000000000200ULL;
        data[44] = 0x0000000000000e00ULL;
        data[45] = 0x0000000000000200ULL;
        data[46] = 0x0000000000000600ULL;
        data[47] = 0x0000000000000200ULL;
        data[48] = 0x0000000000003e00ULL;
        data[49] = 0x0000000000000200ULL;
        data[50] = 0x0000000000000600ULL;
        data[51] = 0x0000000000000200ULL;
        data[52] = 0x0000000000000e00ULL;
        data[53] = 0x0000000000000200ULL;
        data[54] = 0x0000000000000600ULL;
        data[55] = 0x0000000000000200ULL;
        data[56] = 0x0000000000001e00ULL;
        data[57] = 0x0000000000000200ULL;
        data[58] = 0x0000000000000600ULL;
        data[59] = 0x0000000000000200ULL;
        data[60] = 0x0000000000000e00ULL;
        data[61] = 0x0000000000000200ULL;
        data[62] = 0x0000000000000600ULL;
        data[63] = 0x0000000000000200ULL;
    }),
    AttackTable(RightShift<10>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x000000000000fd00ULL;
        data[1] = 0x0000000000000500ULL;
        data[2] = 0x0000000000000d00ULL;
        data[3] = 0x0000000000000500ULL;
        data[4] = 0x0000000000001d00ULL;
        data[5] = 0x0000000000000500ULL;
        data[6] = 0x0000000000000d00ULL;
        data[7] = 0x0000000000000500ULL;
        data[8] = 0x0000000000003d00ULL;
        data[9] = 0x0000000000000500ULL;
        data[10] = 0x0000000000000d00ULL;
        data[11] = 0x0000000000000500ULL;
        data[12] = 0x0000000000001d00ULL;
        data[13] = 0x0000000000000500ULL;
        data[14] = 0x0000000000000d00ULL;
        data[15] = 0x0000000000000500ULL;
        data[16] = 0x0000000000007d00ULL;
        data[17] = 0x0000000000000500ULL;
        data[18] = 0x0000000000000d00ULL;
        data[19] = 0x0000000000000500ULL;
        data[20] = 0x0000000000001d00ULL;
        data[21] = 0x0000000000000500ULL;
        data[22] = 0x0000000000000d00ULL;
        data[23] = 0x0000000000000500ULL;
        data[24] = 0x0000000000003d00ULL;
        data[25] = 0x0000000000000500ULL;
        data[26] = 0x0000000000000d00ULL;
        data[27] = 0x0000000000000500ULL;
        data[28] = 0x0000000000001d00ULL;
        data[29] = 0x0000000000000500ULL;
        data[30] = 0x0000000000000d00ULL;
        data[31] = 0x0000000000000500ULL;
    }),
    AttackTable(RightShift<9>::hash, [](std::vector<uint64_t>& data) {
        data.resize(62);
        data[0] = 0x000000000000fb00ULL;
        data[1] = 0x000000000000fa00ULL;
        data[4] = 0x0000000000000b00ULL;
        data[5] = 0x0000000000000a00ULL;
        data[8] = 0x0000000000001b00ULL;
        data[9] = 0x0000000000001a00ULL;
        data[12] = 0x0000000000000b00ULL;
        data[13] = 0x0000000000000a00ULL;
        data[16] = 0x0000000000003b00ULL;
        data[17] = 0x0000000000003a00ULL;
        data[20] = 0x0000000000000b00ULL;
        data[21] = 0x0000000000000a00ULL;
        data[24] = 0x0000000000001b00ULL;
        data[25] = 0x0000000000001a00ULL;
        data[28] = 0x0000000000000b00ULL;
        data[29] = 0x0000000000000a00ULL;
        data[32] = 0x0000000000007b00ULL;
        data[33] = 0x0000000000007a00ULL;
        data[36] = 0x0000000000000b00ULL;
        data[37] = 0x0000000000000a00ULL;
        data[40] = 0x0000000000001b00ULL;
        data[41] = 0x0000000000001a00ULL;
        data[44] = 0x0000000000000b00ULL;
        data[45] = 0x0000000000000a00ULL;
        data[48] = 0x0000000000003b00ULL;
        data[49] = 0x0000000000003a00ULL;
        data[52] = 0x0000000000000b00ULL;
        data[53] = 0x0000000000000a00ULL;
        data[56] = 0x0000000000001b00ULL;
        data[57] = 0x0000000000001a00ULL;
        data[60] = 0x0000000000000b00ULL;
        data[61] = 0x0000000000000a00ULL;
    }),
    AttackTable(RightShift<9>::hash, [](std::vector<uint64_t>& data) {
        data.resize(60);
        data[0] = 0x000000000000f700ULL;
        data[1] = 0x000000000000f600ULL;
        data[2] = 0x000000000000f400ULL;
        data[3] = 0x000000000000f400ULL;
        data[8] = 0x0000000000001700ULL;
        data[9] = 0x0000000000001600ULL;
        data[10] = 0x0000000000001400ULL;
        data[11] = 0x0000000000001400ULL;
        data[16] = 0x0000000000003700ULL;
        data[17] = 0x0000000000003600ULL;
        data[18] = 0x0000000000003400ULL;
        data[19] = 0x0000000000003400ULL;
        data[24] = 0x0000000000001700ULL;
        data[25] = 0x0000000000001600ULL;
        data[26] = 0x0000000000001400ULL;
        data[27] = 0x0000000000001400ULL;
        data[32] = 0x0000000000007700ULL;
        data[33] = 0x0000000000007600ULL;
        data[34] = 0x0000000000007400ULL;
        data[35] = 0x0000000000007400ULL;
        data[40] = 0x0000000000001700ULL;
        data[41] = 0x0000000000001600ULL;
        data[42] = 0x0000000000001400ULL;
        data[43] = 0x0000000000001400ULL;
        data[48] = 0x0000000000003700ULL;
        data[49] = 0x0000000000003600ULL;
        data[50] = 0x0000000000003400ULL;
        data[51] = 0x0000000000003400ULL;
        data[56] = 0x0000000000001700ULL;
        data[57] = 0x0000000000001600ULL;
        data[58] = 0x0000000000001400ULL;
        data[59] = 0x0000000000001400ULL;
    }),
    AttackTable(RightShift<9>::hash, [](std::vector<uint64_t>& data) {
        data.resize(56);
        data[0] = 0x000000000000ef00ULL;
        data[1] = 0x000000000000ee00ULL;
        data[2] = 0x000000000000ec00ULL;
        data[3] = 0x000000000000ec00ULL;
        data[4] = 0x000000000000e800ULL;
        data[5] = 0x000000000000e800ULL;
        data[6] = 0x000000000000e800ULL;
        data[7] = 0x000000000000e800ULL;
        data[16] = 0x0000000000002f00ULL;
        data[17] = 0x0000000000002e00ULL;
        data[18] = 0x0000000000002c00ULL;
        data[19] = 0x0000000000002c00ULL;
        data[20] = 0x0000000000002800ULL;
        data[21] = 0x0000000000002800ULL;
        data[22] = 0x0000000000002800ULL;
        data[23] = 0x0000000000002800ULL;
        data[32] = 0x0000000000006f00ULL;
        data[33] = 0x0000000000006e00ULL;
        data[34] = 0x0000000000006c00ULL;
        data[35] = 0x0000000000006c00ULL;
        data[36] = 0x0000000000006800ULL;
        data[37] = 0x0000000000006800ULL;
        data[38] = 0x0000000000006800ULL;
        data[39] = 0x0000000000006800ULL;
        data[48] = 0x0000000000002f00ULL;
        data[49] = 0x0000000000002e00ULL;
        data[50] = 0x0000000000002c00ULL;
        data[51] = 0x0000000000002c00ULL;
        data[52] = 0x0000000000002800ULL;
        data[53] = 0x0000000000002800ULL;
        data[54] = 0x0000000000002800ULL;
        data[55] = 0x0000000000002800ULL;
    }),
    AttackTable(RightShift<9>::hash, [](std::vector<uint64_t>& data) {
        data.resize(48);
        data[0] = 0x000000000000df00ULL;
        data[1] = 0x000000000000de00ULL;
        data[2] = 0x000000000000dc00ULL;
        data[3] = 0x000000000000dc00ULL;
        data[4] = 0x000000000000d800ULL;
        data[5] = 0x000000000000d800ULL;
        data[6] = 0x000000000000d800ULL;
        data[7] = 0x000000000000d800ULL;
        data[8] = 0x000000000000d000ULL;
        data[9] = 0x000000000000d000ULL;
        data[10] = 0x000000000000d000ULL;
        data[11] = 0x000000000000d000ULL;
        data[12] = 0x000000000000d000ULL;
        data[13] = 0x000000000000d000ULL;
        data[14] = 0x000000000000d000ULL;
        data[15] = 0x000000000000d000ULL;
        data[32] = 0x0000000000005f00ULL;
        data[33] = 0x0000000000005e00ULL;
        data[34] = 0x0000000000005c00ULL;
        data[35] = 0x0000000000005c00ULL;
        data[36] = 0x0000000000005800ULL;
        data[37] = 0x0000000000005800ULL;
        data[38] = 0x0000000000005800ULL;
        data[39] = 0x0000000000005800ULL;
        data[40] = 0x0000000000005000ULL;
        data[41] = 0x0000000000005000ULL;
        data[42] = 0x0000000000005000ULL;
        data[43] = 0x0000000000005000ULL;
        data[44] = 0x0000000000005000ULL;
        data[45] = 0x0000000000005000ULL;
        data[46] = 0x0000000000005000ULL;
        data[47] = 0x0000000000005000ULL;
    }),
    AttackTable(RightShift<9>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x000000000000bf00ULL;
        data[1] = 0x000000000000be00ULL;
        data[2] = 0x000000000000bc00ULL;
        data[3] = 0x000000000000bc00ULL;
        data[4] = 0x000000000000b800ULL;
        data[5] = 0x000000000000b800ULL;
        data[6] = 0x000000000000b800ULL;
        data[7] = 0x000000000000b800ULL;
        data[8] = 0x000000000000b000ULL;
        data[9] = 0x000000000000b000ULL;
        data[10] = 0x000000000000b000ULL;
        data[11] = 0x000000000000b000ULL;
        data[12] = 0x000000000000b000ULL;
        data[13] = 0x000000000000b000ULL;
        data[14] = 0x000000000000b000ULL;
        data[15] = 0x000000000000b000ULL;
        data[16] = 0x000000000000a000ULL;
        data[17] = 0x000000000000a000ULL;
        data[18] = 0x000000000000a000ULL;
        data[19] = 0x000000000000a000ULL;
        data[20] = 0x000000000000a000ULL;
        data[21] = 0x000000000000a000ULL;
        data[22] = 0x000000000000a000ULL;
        data[23] = 0x000000000000a000ULL;
        data[24] = 0x000000000000a000ULL;
        data[25] = 0x000000000000a000ULL;
        data[26] = 0x000000000000a000ULL;
        data[27] = 0x000000000000a000ULL;
        data[28] = 0x000000000000a000ULL;
        data[29] = 0x000000000000a000ULL;
        data[30] = 0x000000000000a000ULL;
        data[31] = 0x000000000000a000ULL;
    }),
    AttackTable(RightShift<9>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x0000000000007f00ULL;
        data[1] = 0x0000000000007e00ULL;
        data[2] = 0x0000000000007c00ULL;
        data[3] = 0x0000000000007c00ULL;
        data[4] = 0x0000000000007800ULL;
        data[5] = 0x0000000000007800ULL;
        data[6] = 0x0000000000007800ULL;
        data[7] = 0x0000000000007800ULL;
        data[8] = 0x0000000000007000ULL;
        data[9] = 0x0000000000007000ULL;
        data[10] = 0x0000000000007000ULL;
        data[11] = 0x0000000000007000ULL;
        data[12] = 0x0000000000007000ULL;
        data[13] = 0x0000000000007000ULL;
        data[14] = 0x0000000000007000ULL;
        data[15] = 0x0000000000007000ULL;
        data[16] = 0x0000000000006000ULL;
        data[17] = 0x0000000000006000ULL;
        data[18] = 0x0000000000006000ULL;
        data[19] = 0x0000000000006000ULL;
        data[20] = 0x0000000000006000ULL;
        data[21] = 0x0000000000006000ULL;
        data[22] = 0x0000000000006000ULL;
        data[23] = 0x0000000000006000ULL;
        data[24] = 0x0000000000006000ULL;
        data[25] = 0x0000000000006000ULL;
        data[26] = 0x0000000000006000ULL;
        data[27] = 0x0000000000006000ULL;
        data[28] = 0x0000000000006000ULL;
        data[29] = 0x0000000000006000ULL;
        data[30] = 0x0000000000006000ULL;
        data[31] = 0x0000000000006000ULL;
        data[32] = 0x0000000000004000ULL;
        data[33] = 0x0000000000004000ULL;
        data[34] = 0x0000000000004000ULL;
        data[35] = 0x0000000000004000ULL;
        data[36] = 0x0000000000004000ULL;
        data[37] = 0x0000000000004000ULL;
        data[38] = 0x0000000000004000ULL;
        data[39] = 0x0000000000004000ULL;
        data[40] = 0x0000000000004000ULL;
        data[41] = 0x0000000000004000ULL;
        data[42] = 0x0000000000004000ULL;
        data[43] = 0x0000000000004000ULL;
        data[44] = 0x0000000000004000ULL;
        data[45] = 0x0000000000004000ULL;
        data[46] = 0x0000000000004000ULL;
        data[47] = 0x0000000000004000ULL;
        data[48] = 0x0000000000004000ULL;
        data[49] = 0x0000000000004000ULL;
        data[50] = 0x0000000000004000ULL;
        data[51] = 0x0000000000004000ULL;
        data[52] = 0x0000000000004000ULL;
        data[53] = 0x0000000000004000ULL;
        data[54] = 0x0000000000004000ULL;
        data[55] = 0x0000000000004000ULL;
        data[56] = 0x0000000000004000ULL;
        data[57] = 0x0000000000004000ULL;
        data[58] = 0x0000000000004000ULL;
        data[59] = 0x0000000000004000ULL;
        data[60] = 0x0000000000004000ULL;
        data[61] = 0x0000000000004000ULL;
        data[62] = 0x0000000000004000ULL;
        data[63] = 0x0000000000004000ULL;
    }),
    AttackTable(RightShift<17>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x0000000000fe0000ULL;
        data[1] = 0x0000000000020000ULL;
        data[2] = 0x0000000000060000ULL;
        data[3] = 0x0000000000020000ULL;
        data[4] = 0x00000000000e0000ULL;
        data[5] = 0x0000000000020000ULL;
        data[6] = 0x0000000000060000ULL;
        data[7] = 0x0000000000020000ULL;
        data[8] = 0x00000000001e0000ULL;
        data[9] = 0x0000000000020000ULL;
        data[10] = 0x0000000000060000ULL;
        data[11] = 0x0000000000020000ULL;
        data[12] = 0x00000000000e0000ULL;
        data[13] = 0x0000000000020000ULL;
        data[14] = 0x0000000000060000ULL;
        data[15] = 0x0000000000020000ULL;
        data[16] = 0x00000000003e0000ULL;
        data[17] = 0x0000000000020000ULL;
        data[18] = 0x0000000000060000ULL;
        data[19] = 0x0000000000020000ULL;
        data[20] = 0x00000000000e0000ULL;
        data[21] = 0x0000000000020000ULL;
        data[22] = 0x0000000000060000ULL;
        data[23] = 0x0000000000020000ULL;
        data[24] = 0x00000000001e0000ULL;
        data[25] = 0x0000000000020000ULL;
        data[26] = 0x0000000000060000ULL;
        data[27] = 0x0000000000020000ULL;
        data[28] = 0x00000000000e0000ULL;
        data[29] = 0x0000000000020000ULL;
        data[30] = 0x0000000000060000ULL;
        data[31] = 0x0000000000020000ULL;
        data[32] = 0x00000000007e0000ULL;
        data[33] = 0x0000000000020000ULL;
        data[34] = 0x0000000000060000ULL;
        data[35] = 0x0000000000020000ULL;
        data[36] = 0x00000000000e0000ULL;
        data[37] = 0x0000000000020000ULL;
        data[38] = 0x0000000000060000ULL;
        data[39] = 0x0000000000020000ULL;
        data[40] = 0x00000000001e0000ULL;
        data[41] = 0x0000000000020000ULL;
        data[42] = 0x0000000000060000ULL;
        data[43] = 0x0000000000020000ULL;
        data[44] = 0x00000000000e0000ULL;
        data[45] = 0x0000000000020000ULL;
        data[46] = 0x0000000000060000ULL;
        data[47] = 0x0000000000020000ULL;
        data[48] = 0x00000000003e0000ULL;
        data[49] = 0x0000000000020000ULL;
        data[50] = 0x0000000000060000ULL;
        data[51] = 0x0000000000020000ULL;
        data[52] = 0x00000000000e0000ULL;
        data[53] = 0x0000000000020000ULL;
        data[54] = 0x0000000000060000ULL;
        data[55] = 0x0000000000020000ULL;
        data[56] = 0x00000000001e0000ULL;
        data[57] = 0x0000000000020000ULL;
        data[58] = 0x0000000000060000ULL;
        data[59] = 0x0000000000020000ULL;
        data[60] = 0x00000000000e0000ULL;
        data[61] = 0x0000000000020000ULL;
        data[62] = 0x0000000000060000ULL;
        data[63] = 0x0000000000020000ULL;
    }),
    AttackTable(RightShift<18>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x0000000000fd0000ULL;
        data[1] = 0x0000000000050000ULL;
        data[2] = 0x00000000000d0000ULL;
        data[3] = 0x0000000000050000ULL;
        data[4] = 0x00000000001d0000ULL;
        data[5] = 0x0000000000050000ULL;
        data[6] = 0x00000000000d0000ULL;
        data[7] = 0x0000000000050000ULL;
        data[8] = 0x00000000003d0000ULL;
        data[9] = 0x0000000000050000ULL;
        data[10] = 0x00000000000d0000ULL;
        data[11] = 0x0000000000050000ULL;
        data[12] = 0x00000000001d0000ULL;
        data[13] = 0x0000000000050000ULL;
        data[14] = 0x00000000000d0000ULL;
        data[15] = 0x0000000000050000ULL;
        data[16] = 0x00000000007d0000ULL;
        data[17] = 0x0000000000050000ULL;
        data[18] = 0x00000000000d0000ULL;
        data[19] = 0x0000000000050000ULL;
        data[20] = 0x00000000001d0000ULL;
        data[21] = 0x0000000000050000ULL;
        data[22] = 0x00000000000d0000ULL;
        data[23] = 0x0000000000050000ULL;
        data[24] = 0x00000000003d0000ULL;
        data[25] = 0x0000000000050000ULL;
        data[26] = 0x00000000000d0000ULL;
        data[27] = 0x0000000000050000ULL;
        data[28] = 0x00000000001d0000ULL;
        data[29] = 0x0000000000050000ULL;
        data[30] = 0x00000000000d0000ULL;
        data[31] = 0x0000000000050000ULL;
    }),
    AttackTable(RightShift<17>::hash, [](std::vector<uint64_t>& data) {
        data.resize(62);
        data[0] = 0x0000000000fb0000ULL;
        data[1] = 0x0000000000fa0000ULL;
        data[4] = 0x00000000000b0000ULL;
        data[5] = 0x00000000000a0000ULL;
        data[8] = 0x00000000001b0000ULL;
        data[9] = 0x00000000001a0000ULL;
        data[12] = 0x00000000000b0000ULL;
        data[13] = 0x00000000000a0000ULL;
        data[16] = 0x00000000003b0000ULL;
        data[17] = 0x00000000003a0000ULL;
        data[20] = 0x00000000000b0000ULL;
        data[21] = 0x00000000000a0000ULL;
        data[24] = 0x00000000001b0000ULL;
        data[25] = 0x00000000001a0000ULL;
        data[28] = 0x00000000000b0000ULL;
        data[29] = 0x00000000000a0000ULL;
        data[32] = 0x00000000007b0000ULL;
        data[33] = 0x00000000007a0000ULL;
        data[36] = 0x00000000000b0000ULL;
        data[37] = 0x00000000000a0000ULL;
        data[40] = 0x00000000001b0000ULL;
        data[41] = 0x00000000001a0000ULL;
        data[44] = 0x00000000000b0000ULL;
        data[45] = 0x00000000000a0000ULL;
        data[48] = 0x00000000003b0000ULL;
        data[49] = 0x00000000003a0000ULL;
        data[52] = 0x00000000000b0000ULL;
        data[53] = 0x00000000000a0000ULL;
        data[56] = 0x00000000001b0000ULL;
        data[57] = 0x00000000001a0000ULL;
        data[60] = 0x00000000000b0000ULL;
        data[61] = 0x00000000000a0000ULL;
    }),
    AttackTable(RightShift<17>::hash, [](std::vector<uint64_t>& data) {
        data.resize(60);
        data[0] = 0x0000000000f70000ULL;
        data[1] = 0x0000000000f60000ULL;
        data[2] = 0x0000000000f40000ULL;
        data[3] = 0x0000000000f40000ULL;
        data[8] = 0x0000000000170000ULL;
        data[9] = 0x0000000000160000ULL;
        data[10] = 0x0000000000140000ULL;
        data[11] = 0x0000000000140000ULL;
        data[16] = 0x0000000000370000ULL;
        data[17] = 0x0000000000360000ULL;
        data[18] = 0x0000000000340000ULL;
        data[19] = 0x0000000000340000ULL;
        data[24] = 0x0000000000170000ULL;
        data[25] = 0x0000000000160000ULL;
        data[26] = 0x0000000000140000ULL;
        data[27] = 0x0000000000140000ULL;
        data[32] = 0x0000000000770000ULL;
        data[33] = 0x0000000000760000ULL;
        data[34] = 0x0000000000740000ULL;
        data[35] = 0x0000000000740000ULL;
        data[40] = 0x0000000000170000ULL;
        data[41] = 0x0000000000160000ULL;
        data[42] = 0x0000000000140000ULL;
        data[43] = 0x0000000000140000ULL;
        data[48] = 0x0000000000370000ULL;
        data[49] = 0x0000000000360000ULL;
        data[50] = 0x0000000000340000ULL;
        data[51] = 0x0000000000340000ULL;
        data[56] = 0x0000000000170000ULL;
        data[57] = 0x0000000000160000ULL;
        data[58] = 0x0000000000140000ULL;
        data[59] = 0x0000000000140000ULL;
    }),
    AttackTable(RightShift<17>::hash, [](std::vector<uint64_t>& data) {
        data.resize(56);
        data[0] = 0x0000000000ef0000ULL;
        data[1] = 0x0000000000ee0000ULL;
        data[2] = 0x0000000000ec0000ULL;
        data[3] = 0x0000000000ec0000ULL;
        data[4] = 0x0000000000e80000ULL;
        data[5] = 0x0000000000e80000ULL;
        data[6] = 0x0000000000e80000ULL;
        data[7] = 0x0000000000e80000ULL;
        data[16] = 0x00000000002f0000ULL;
        data[17] = 0x00000000002e0000ULL;
        data[18] = 0x00000000002c0000ULL;
        data[19] = 0x00000000002c0000ULL;
        data[20] = 0x0000000000280000ULL;
        data[21] = 0x0000000000280000ULL;
        data[22] = 0x0000000000280000ULL;
        data[23] = 0x0000000000280000ULL;
        data[32] = 0x00000000006f0000ULL;
        data[33] = 0x00000000006e0000ULL;
        data[34] = 0x00000000006c0000ULL;
        data[35] = 0x00000000006c0000ULL;
        data[36] = 0x0000000000680000ULL;
        data[37] = 0x0000000000680000ULL;
        data[38] = 0x0000000000680000ULL;
        data[39] = 0x0000000000680000ULL;
        data[48] = 0x00000000002f0000ULL;
        data[49] = 0x00000000002e0000ULL;
        data[50] = 0x00000000002c0000ULL;
        data[51] = 0x00000000002c0000ULL;
        data[52] = 0x0000000000280000ULL;
        data[53] = 0x0000000000280000ULL;
        data[54] = 0x0000000000280000ULL;
        data[55] = 0x0000000000280000ULL;
    }),
    AttackTable(RightShift<17>::hash, [](std::vector<uint64_t>& data) {
        data.resize(48);
        data[0] = 0x0000000000df0000ULL;
        data[1] = 0x0000000000de0000ULL;
        data[2] = 0x0000000000dc0000ULL;
        data[3] = 0x0000000000dc0000ULL;
        data[4] = 0x0000000000d80000ULL;
        data[5] = 0x0000000000d80000ULL;
        data[6] = 0x0000000000d80000ULL;
        data[7] = 0x0000000000d80000ULL;
        data[8] = 0x0000000000d00000ULL;
        data[9] = 0x0000000000d00000ULL;
        data[10] = 0x0000000000d00000ULL;
        data[11] = 0x0000000000d00000ULL;
        data[12] = 0x0000000000d00000ULL;
        data[13] = 0x0000000000d00000ULL;
        data[14] = 0x0000000000d00000ULL;
        data[15] = 0x0000000000d00000ULL;
        data[32] = 0x00000000005f0000ULL;
        data[33] = 0x00000000005e0000ULL;
        data[34] = 0x00000000005c0000ULL;
        data[35] = 0x00000000005c0000ULL;
        data[36] = 0x0000000000580000ULL;
        data[37] = 0x0000000000580000ULL;
        data[38] = 0x0000000000580000ULL;
        data[39] = 0x0000000000580000ULL;
        data[40] = 0x0000000000500000ULL;
        data[41] = 0x0000000000500000ULL;
        data[42] = 0x0000000000500000ULL;
        data[43] = 0x0000000000500000ULL;
        data[44] = 0x0000000000500000ULL;
        data[45] = 0x0000000000500000ULL;
        data[46] = 0x0000000000500000ULL;
        data[47] = 0x0000000000500000ULL;
    }),
    AttackTable(RightShift<17>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x0000000000bf0000ULL;
        data[1] = 0x0000000000be0000ULL;
        data[2] = 0x0000000000bc0000ULL;
        data[3] = 0x0000000000bc0000ULL;
        data[4] = 0x0000000000b80000ULL;
        data[5] = 0x0000000000b80000ULL;
        data[6] = 0x0000000000b80000ULL;
        data[7] = 0x0000000000b80000ULL;
        data[8] = 0x0000000000b00000ULL;
        data[9] = 0x0000000000b00000ULL;
        data[10] = 0x0000000000b00000ULL;
        data[11] = 0x0000000000b00000ULL;
        data[12] = 0x0000000000b00000ULL;
        data[13] = 0x0000000000b00000ULL;
        data[14] = 0x0000000000b00000ULL;
        data[15] = 0x0000000000b00000ULL;
        data[16] = 0x0000000000a00000ULL;
        data[17] = 0x0000000000a00000ULL;
        data[18] = 0x0000000000a00000ULL;
        data[19] = 0x0000000000a00000ULL;
        data[20] = 0x0000000000a00000ULL;
        data[21] = 0x0000000000a00000ULL;
        data[22] = 0x0000000000a00000ULL;
        data[23] = 0x0000000000a00000ULL;
        data[24] = 0x0000000000a00000ULL;
        data[25] = 0x0000000000a00000ULL;
        data[26] = 0x0000000000a00000ULL;
        data[27] = 0x0000000000a00000ULL;
        data[28] = 0x0000000000a00000ULL;
        data[29] = 0x0000000000a00000ULL;
        data[30] = 0x0000000000a00000ULL;
        data[31] = 0x0000000000a00000ULL;
    }),
    AttackTable(RightShift<17>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x00000000007f0000ULL;
        data[1] = 0x00000000007e0000ULL;
        data[2] = 0x00000000007c0000ULL;
        data[3] = 0x00000000007c0000ULL;
        data[4] = 0x0000000000780000ULL;
        data[5] = 0x0000000000780000ULL;
        data[6] = 0x0000000000780000ULL;
        data[7] = 0x0000000000780000ULL;
        data[8] = 0x0000000000700000ULL;
        data[9] = 0x0000000000700000ULL;
        data[10] = 0x0000000000700000ULL;
        data[11] = 0x0000000000700000ULL;
        data[12] = 0x0000000000700000ULL;
        data[13] = 0x0000000000700000ULL;
        data[14] = 0x0000000000700000ULL;
        data[15] = 0x0000000000700000ULL;
        data[16] = 0x0000000000600000ULL;
        data[17] = 0x0000000000600000ULL;
        data[18] = 0x0000000000600000ULL;
        data[19] = 0x0000000000600000ULL;
        data[20] = 0x0000000000600000ULL;
        data[21] = 0x0000000000600000ULL;
        data[22] = 0x0000000000600000ULL;
        data[23] = 0x0000000000600000ULL;
        data[24] = 0x0000000000600000ULL;
        data[25] = 0x0000000000600000ULL;
        data[26] = 0x0000000000600000ULL;
        data[27] = 0x0000000000600000ULL;
        data[28] = 0x0000000000600000ULL;
        data[29] = 0x0000000000600000ULL;
        data[30] = 0x0000000000600000ULL;
        data[31] = 0x0000000000600000ULL;
        data[32] = 0x0000000000400000ULL;
        data[33] = 0x0000000000400000ULL;
        data[34] = 0x0000000000400000ULL;
        data[35] = 0x0000000000400000ULL;
        data[36] = 0x0000000000400000ULL;
        data[37] = 0x0000000000400000ULL;
        data[38] = 0x0000000000400000ULL;
        data[39] = 0x0000000000400000ULL;
        data[40] = 0x0000000000400000ULL;
        data[41] = 0x0000000000400000ULL;
        data[42] = 0x0000000000400000ULL;
        data[43] = 0x0000000000400000ULL;
        data[44] = 0x0000000000400000ULL;
        data[45] = 0x0000000000400000ULL;
        data[46] = 0x0000000000400000ULL;
        data[47] = 0x0000000000400000ULL;
        data[48] = 0x0000000000400000ULL;
        data[49] = 0x0000000000400000ULL;
        data[50] = 0x0000000000400000ULL;
        data[51] = 0x0000000000400000ULL;
        data[52] = 0x0000000000400000ULL;
        data[53] = 0x0000000000400000ULL;
        data[54] = 0x0000000000400000ULL;
        data[55] = 0x0000000000400000ULL;
        data[56] = 0x0000000000400000ULL;
        data[57] = 0x0000000000400000ULL;
        data[58] = 0x0000000000400000ULL;
        data[59] = 0x0000000000400000ULL;
        data[60] = 0x0000000000400000ULL;
        data[61] = 0x0000000000400000ULL;
        data[62] = 0x0000000000400000ULL;
        data[63] = 0x0000000000400000ULL;
    }),
    AttackTable(RightShift<25>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x00000000fe000000ULL;
        data[1] = 0x0000000002000000ULL;
        data[2] = 0x0000000006000000ULL;
        data[3] = 0x0000000002000000ULL;
        data[4] = 0x000000000e000000ULL;
        data[5] = 0x0000000002000000ULL;
        data[6] = 0x0000000006000000ULL;
        data[7] = 0x0000000002000000ULL;
        data[8] = 0x000000001e000000ULL;
        data[9] = 0x0000000002000000ULL;
        data[10] = 0x0000000006000000ULL;
        data[11] = 0x0000000002000000ULL;
        data[12] = 0x000000000e000000ULL;
        data[13] = 0x0000000002000000ULL;
        data[14] = 0x0000000006000000ULL;
        data[15] = 0x0000000002000000ULL;
        data[16] = 0x000000003e000000ULL;
        data[17] = 0x0000000002000000ULL;
        data[18] = 0x0000000006000000ULL;
        data[19] = 0x0000000002000000ULL;
        data[20] = 0x000000000e000000ULL;
        data[21] = 0x0000000002000000ULL;
        data[22] = 0x0000000006000000ULL;
        data[23] = 0x0000000002000000ULL;
        data[24] = 0x000000001e000000ULL;
        data[25] = 0x0000000002000000ULL;
        data[26] = 0x0000000006000000ULL;
        data[27] = 0x0000000002000000ULL;
        data[28] = 0x000000000e000000ULL;
        data[29] = 0x0000000002000000ULL;
        data[30] = 0x0000000006000000ULL;
        data[31] = 0x0000000002000000ULL;
        data[32] = 0x000000007e000000ULL;
        data[33] = 0x0000000002000000ULL;
        data[34] = 0x0000000006000000ULL;
        data[35] = 0x0000000002000000ULL;
        data[36] = 0x000000000e000000ULL;
        data[37] = 0x0000000002000000ULL;
        data[38] = 0x0000000006000000ULL;
        data[39] = 0x0000000002000000ULL;
        data[40] = 0x000000001e000000ULL;
        data[41] = 0x0000000002000000ULL;
        data[42] = 0x0000000006000000ULL;
        data[43] = 0x0000000002000000ULL;
        data[44] = 0x000000000e000000ULL;
        data[45] = 0x0000000002000000ULL;
        data[46] = 0x0000000006000000ULL;
        data[47] = 0x0000000002000000ULL;
        data[48] = 0x000000003e000000ULL;
        data[49] = 0x0000000002000000ULL;
        data[50] = 0x0000000006000000ULL;
        data[51] = 0x0000000002000000ULL;
        data[52] = 0x000000000e000000ULL;
        data[53] = 0x0000000002000000ULL;
        data[54] = 0x0000000006000000ULL;
        data[55] = 0x0000000002000000ULL;
        data[56] = 0x000000001e000000ULL;
        data[57] = 0x0000000002000000ULL;
        data[58] = 0x0000000006000000ULL;
        data[59] = 0x0000000002000000ULL;
        data[60] = 0x000000000e000000ULL;
        data[61] = 0x0000000002000000ULL;
        data[62] = 0x0000000006000000ULL;
        data[63] = 0x0000000002000000ULL;
    }),
    AttackTable(RightShift<26>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x00000000fd000000ULL;
        data[1] = 0x0000000005000000ULL;
        data[2] = 0x000000000d000000ULL;
        data[3] = 0x0000000005000000ULL;
        data[4] = 0x000000001d000000ULL;
        data[5] = 0x0000000005000000ULL;
        data[6] = 0x000000000d000000ULL;
        data[7] = 0x0000000005000000ULL;
        data[8] = 0x000000003d000000ULL;
        data[9] = 0x0000000005000000ULL;
        data[10] = 0x000000000d000000ULL;
        data[11] = 0x0000000005000000ULL;
        data[12] = 0x000000001d000000ULL;
        data[13] = 0x0000000005000000ULL;
        data[14] = 0x000000000d000000ULL;
        data[15] = 0x0000000005000000ULL;
        data[16] = 0x000000007d000000ULL;
        data[17] = 0x0000000005000000ULL;
        data[18] = 0x000000000d000000ULL;
        data[19] = 0x0000000005000000ULL;
        data[20] = 0x000000001d000000ULL;
        data[21] = 0x0000000005000000ULL;
        data[22] = 0x000000000d000000ULL;
        data[23] = 0x0000000005000000ULL;
        data[24] = 0x000000003d000000ULL;
        data[25] = 0x0000000005000000ULL;
        data[26] = 0x000000000d000000ULL;
        data[27] = 0x0000000005000000ULL;
        data[28] = 0x000000001d000000ULL;
        data[29] = 0x0000000005000000ULL;
        data[30] = 0x000000000d000000ULL;
        data[31] = 0x0000000005000000ULL;
    }),
    AttackTable(RightShift<25>::hash, [](std::vector<uint64_t>& data) {
        data.resize(62);
        data[0] = 0x00000000fb000000ULL;
        data[1] = 0x00000000fa000000ULL;
        data[4] = 0x000000000b000000ULL;
        data[5] = 0x000000000a000000ULL;
        data[8] = 0x000000001b000000ULL;
        data[9] = 0x000000001a000000ULL;
        data[12] = 0x000000000b000000ULL;
        data[13] = 0x000000000a000000ULL;
        data[16] = 0x000000003b000000ULL;
        data[17] = 0x000000003a000000ULL;
        data[20] = 0x000000000b000000ULL;
        data[21] = 0x000000000a000000ULL;
        data[24] = 0x000000001b000000ULL;
        data[25] = 0x000000001a000000ULL;
        data[28] = 0x000000000b000000ULL;
        data[29] = 0x000000000a000000ULL;
        data[32] = 0x000000007b000000ULL;
        data[33] = 0x000000007a000000ULL;
        data[36] = 0x000000000b000000ULL;
        data[37] = 0x000000000a000000ULL;
        data[40] = 0x000000001b000000ULL;
        data[41] = 0x000000001a000000ULL;
        data[44] = 0x000000000b000000ULL;
        data[45] = 0x000000000a000000ULL;
        data[48] = 0x000000003b000000ULL;
        data[49] = 0x000000003a000000ULL;
        data[52] = 0x000000000b000000ULL;
        data[53] = 0x000000000a000000ULL;
        data[56] = 0x000000001b000000ULL;
        data[57] = 0x000000001a000000ULL;
        data[60] = 0x000000000b000000ULL;
        data[61] = 0x000000000a000000ULL;
    }),
    AttackTable(RightShift<25>::hash, [](std::vector<uint64_t>& data) {
        data.resize(60);
        data[0] = 0x00000000f7000000ULL;
        data[1] = 0x00000000f6000000ULL;
        data[2] = 0x00000000f4000000ULL;
        data[3] = 0x00000000f4000000ULL;
        data[8] = 0x0000000017000000ULL;
        data[9] = 0x0000000016000000ULL;
        data[10] = 0x0000000014000000ULL;
        data[11] = 0x0000000014000000ULL;
        data[16] = 0x0000000037000000ULL;
        data[17] = 0x0000000036000000ULL;
        data[18] = 0x0000000034000000ULL;
        data[19] = 0x0000000034000000ULL;
        data[24] = 0x0000000017000000ULL;
        data[25] = 0x0000000016000000ULL;
        data[26] = 0x0000000014000000ULL;
        data[27] = 0x0000000014000000ULL;
        data[32] = 0x0000000077000000ULL;
        data[33] = 0x0000000076000000ULL;
        data[34] = 0x0000000074000000ULL;
        data[35] = 0x0000000074000000ULL;
        data[40] = 0x0000000017000000ULL;
        data[41] = 0x0000000016000000ULL;
        data[42] = 0x0000000014000000ULL;
        data[43] = 0x0000000014000000ULL;
        data[48] = 0x0000000037000000ULL;
        data[49] = 0x0000000036000000ULL;
        data[50] = 0x0000000034000000ULL;
        data[51] = 0x0000000034000000ULL;
        data[56] = 0x0000000017000000ULL;
        data[57] = 0x0000000016000000ULL;
        data[58] = 0x0000000014000000ULL;
        data[59] = 0x0000000014000000ULL;
    }),
    AttackTable(RightShift<25>::hash, [](std::vector<uint64_t>& data) {
        data.resize(56);
        data[0] = 0x00000000ef000000ULL;
        data[1] = 0x00000000ee000000ULL;
        data[2] = 0x00000000ec000000ULL;
        data[3] = 0x00000000ec000000ULL;
        data[4] = 0x00000000e8000000ULL;
        data[5] = 0x00000000e8000000ULL;
        data[6] = 0x00000000e8000000ULL;
        data[7] = 0x00000000e8000000ULL;
        data[16] = 0x000000002f000000ULL;
        data[17] = 0x000000002e000000ULL;
        data[18] = 0x000000002c000000ULL;
        data[19] = 0x000000002c000000ULL;
        data[20] = 0x0000000028000000ULL;
        data[21] = 0x0000000028000000ULL;
        data[22] = 0x0000000028000000ULL;
        data[23] = 0x0000000028000000ULL;
        data[32] = 0x000000006f000000ULL;
        data[33] = 0x000000006e000000ULL;
        data[34] = 0x000000006c000000ULL;
        data[35] = 0x000000006c000000ULL;
        data[36] = 0x0000000068000000ULL;
        data[37] = 0x0000000068000000ULL;
        data[38] = 0x0000000068000000ULL;
        data[39] = 0x0000000068000000ULL;
        data[48] = 0x000000002f000000ULL;
        data[49] = 0x000000002e000000ULL;
        data[50] = 0x000000002c000000ULL;
        data[51] = 0x000000002c000000ULL;
        data[52] = 0x0000000028000000ULL;
        data[53] = 0x0000000028000000ULL;
        data[54] = 0x0000000028000000ULL;
        data[55] = 0x0000000028000000ULL;
    }),
    AttackTable(RightShift<25>::hash, [](std::vector<uint64_t>& data) {
        data.resize(48);
        data[0] = 0x00000000df000000ULL;
        data[1] = 0x00000000de000000ULL;
        data[2] = 0x00000000dc000000ULL;
        data[3] = 0x00000000dc000000ULL;
        data[4] = 0x00000000d8000000ULL;
        data[5] = 0x00000000d8000000ULL;
        data[6] = 0x00000000d8000000ULL;
        data[7] = 0x00000000d8000000ULL;
        data[8] = 0x00000000d0000000ULL;
        data[9] = 0x00000000d0000000ULL;
        data[10] = 0x00000000d0000000ULL;
        data[11] = 0x00000000d0000000ULL;
        data[12] = 0x00000000d0000000ULL;
        data[13] = 0x00000000d0000000ULL;
        data[14] = 0x00000000d0000000ULL;
        data[15] = 0x00000000d0000000ULL;
        data[32] = 0x000000005f000000ULL;
        data[33] = 0x000000005e000000ULL;
        data[34] = 0x000000005c000000ULL;
        data[35] = 0x000000005c000000ULL;
        data[36] = 0x0000000058000000ULL;
        data[37] = 0x0000000058000000ULL;
        data[38] = 0x0000000058000000ULL;
        data[39] = 0x0000000058000000ULL;
        data[40] = 0x0000000050000000ULL;
        data[41] = 0x0000000050000000ULL;
        data[42] = 0x0000000050000000ULL;
        data[43] = 0x0000000050000000ULL;
        data[44] = 0x0000000050000000ULL;
        data[45] = 0x0000000050000000ULL;
        data[46] = 0x0000000050000000ULL;
        data[47] = 0x0000000050000000ULL;
    }),
    AttackTable(RightShift<25>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x00000000bf000000ULL;
        data[1] = 0x00000000be000000ULL;
        data[2] = 0x00000000bc000000ULL;
        data[3] = 0x00000000bc000000ULL;
        data[4] = 0x00000000b8000000ULL;
        data[5] = 0x00000000b8000000ULL;
        data[6] = 0x00000000b8000000ULL;
        data[7] = 0x00000000b8000000ULL;
        data[8] = 0x00000000b0000000ULL;
        data[9] = 0x00000000b0000000ULL;
        data[10] = 0x00000000b0000000ULL;
        data[11] = 0x00000000b0000000ULL;
        data[12] = 0x00000000b0000000ULL;
        data[13] = 0x00000000b0000000ULL;
        data[14] = 0x00000000b0000000ULL;
        data[15] = 0x00000000b0000000ULL;
        data[16] = 0x00000000a0000000ULL;
        data[17] = 0x00000000a0000000ULL;
        data[18] = 0x00000000a0000000ULL;
        data[19] = 0x00000000a0000000ULL;
        data[20] = 0x00000000a0000000ULL;
        data[21] = 0x00000000a0000000ULL;
        data[22] = 0x00000000a0000000ULL;
        data[23] = 0x00000000a0000000ULL;
        data[24] = 0x00000000a0000000ULL;
        data[25] = 0x00000000a0000000ULL;
        data[26] = 0x00000000a0000000ULL;
        data[27] = 0x00000000a0000000ULL;
        data[28] = 0x00000000a0000000ULL;
        data[29] = 0x00000000a0000000ULL;
        data[30] = 0x00000000a0000000ULL;
        data[31] = 0x00000000a0000000ULL;
    }),
    AttackTable(RightShift<25>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x000000007f000000ULL;
        data[1] = 0x000000007e000000ULL;
        data[2] = 0x000000007c000000ULL;
        data[3] = 0x000000007c000000ULL;
        data[4] = 0x0000000078000000ULL;
        data[5] = 0x0000000078000000ULL;
        data[6] = 0x0000000078000000ULL;
        data[7] = 0x0000000078000000ULL;
        data[8] = 0x0000000070000000ULL;
        data[9] = 0x0000000070000000ULL;
        data[10] = 0x0000000070000000ULL;
        data[11] = 0x0000000070000000ULL;
        data[12] = 0x0000000070000000ULL;
        data[13] = 0x0000000070000000ULL;
        data[14] = 0x0000000070000000ULL;
        data[15] = 0x0000000070000000ULL;
        data[16] = 0x0000000060000000ULL;
        data[17] = 0x0000000060000000ULL;
        data[18] = 0x0000000060000000ULL;
        data[19] = 0x0000000060000000ULL;
        data[20] = 0x0000000060000000ULL;
        data[21] = 0x0000000060000000ULL;
        data[22] = 0x0000000060000000ULL;
        data[23] = 0x0000000060000000ULL;
        data[24] = 0x0000000060000000ULL;
        data[25] = 0x0000000060000000ULL;
        data[26] = 0x0000000060000000ULL;
        data[27] = 0x0000000060000000ULL;
        data[28] = 0x0000000060000000ULL;
        data[29] = 0x0000000060000000ULL;
        data[30] = 0x0000000060000000ULL;
        data[31] = 0x0000000060000000ULL;
        data[32] = 0x0000000040000000ULL;
        data[33] = 0x0000000040000000ULL;
        data[34] = 0x0000000040000000ULL;
        data[35] = 0x0000000040000000ULL;
        data[36] = 0x0000000040000000ULL;
        data[37] = 0x0000000040000000ULL;
        data[38] = 0x0000000040000000ULL;
        data[39] = 0x0000000040000000ULL;
        data[40] = 0x0000000040000000ULL;
        data[41] = 0x0000000040000000ULL;
        data[42] = 0x0000000040000000ULL;
        data[43] = 0x0000000040000000ULL;
        data[44] = 0x0000000040000000ULL;
        data[45] = 0x0000000040000000ULL;
        data[46] = 0x0000000040000000ULL;
        data[47] = 0x0000000040000000ULL;
        data[48] = 0x0000000040000000ULL;
        data[49] = 0x0000000040000000ULL;
        data[50] = 0x0000000040000000ULL;
        data[51] = 0x0000000040000000ULL;
        data[52] = 0x0000000040000000ULL;
        data[53] = 0x0000000040000000ULL;
        data[54] = 0x0000000040000000ULL;
        data[55] = 0x0000000040000000ULL;
        data[56] = 0x0000000040000000ULL;
        data[57] = 0x0000000040000000ULL;
        data[58] = 0x0000000040000000ULL;
        data[59] = 0x0000000040000000ULL;
        data[60] = 0x0000000040000000ULL;
        data[61] = 0x0000000040000000ULL;
        data[62] = 0x0000000040000000ULL;
        data[63] = 0x0000000040000000ULL;
    }),
    AttackTable(RightShift<33>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x000000fe00000000ULL;
        data[1] = 0x0000000200000000ULL;
        data[2] = 0x0000000600000000ULL;
        data[3] = 0x0000000200000000ULL;
        data[4] = 0x0000000e00000000ULL;
        data[5] = 0x0000000200000000ULL;
        data[6] = 0x0000000600000000ULL;
        data[7] = 0x0000000200000000ULL;
        data[8] = 0x0000001e00000000ULL;
        data[9] = 0x0000000200000000ULL;
        data[10] = 0x0000000600000000ULL;
        data[11] = 0x0000000200000000ULL;
        data[12] = 0x0000000e00000000ULL;
        data[13] = 0x0000000200000000ULL;
        data[14] = 0x0000000600000000ULL;
        data[15] = 0x0000000200000000ULL;
        data[16] = 0x0000003e00000000ULL;
        data[17] = 0x0000000200000000ULL;
        data[18] = 0x0000000600000000ULL;
        data[19] = 0x0000000200000000ULL;
        data[20] = 0x0000000e00000000ULL;
        data[21] = 0x0000000200000000ULL;
        data[22] = 0x0000000600000000ULL;
        data[23] = 0x0000000200000000ULL;
        data[24] = 0x0000001e00000000ULL;
        data[25] = 0x0000000200000000ULL;
        data[26] = 0x0000000600000000ULL;
        data[27] = 0x0000000200000000ULL;
        data[28] = 0x0000000e00000000ULL;
        data[29] = 0x0000000200000000ULL;
        data[30] = 0x0000000600000000ULL;
        data[31] = 0x0000000200000000ULL;
        data[32] = 0x0000007e00000000ULL;
        data[33] = 0x0000000200000000ULL;
        data[34] = 0x0000000600000000ULL;
        data[35] = 0x0000000200000000ULL;
        data[36] = 0x0000000e00000000ULL;
        data[37] = 0x0000000200000000ULL;
        data[38] = 0x0000000600000000ULL;
        data[39] = 0x0000000200000000ULL;
        data[40] = 0x0000001e00000000ULL;
        data[41] = 0x0000000200000000ULL;
        data[42] = 0x0000000600000000ULL;
        data[43] = 0x0000000200000000ULL;
        data[44] = 0x0000000e00000000ULL;
        data[45] = 0x0000000200000000ULL;
        data[46] = 0x0000000600000000ULL;
        data[47] = 0x0000000200000000ULL;
        data[48] = 0x0000003e00000000ULL;
        data[49] = 0x0000000200000000ULL;
        data[50] = 0x0000000600000000ULL;
        data[51] = 0x0000000200000000ULL;
        data[52] = 0x0000000e00000000ULL;
        data[53] = 0x0000000200000000ULL;
        data[54] = 0x0000000600000000ULL;
        data[55] = 0x0000000200000000ULL;
        data[56] = 0x0000001e00000000ULL;
        data[57] = 0x0000000200000000ULL;
        data[58] = 0x0000000600000000ULL;
        data[59] = 0x0000000200000000ULL;
        data[60] = 0x0000000e00000000ULL;
        data[61] = 0x0000000200000000ULL;
        data[62] = 0x0000000600000000ULL;
        data[63] = 0x0000000200000000ULL;
    }),
    AttackTable(RightShift<34>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x000000fd00000000ULL;
        data[1] = 0x0000000500000000ULL;
        data[2] = 0x0000000d00000000ULL;
        data[3] = 0x0000000500000000ULL;
        data[4] = 0x0000001d00000000ULL;
        data[5] = 0x0000000500000000ULL;
        data[6] = 0x0000000d00000000ULL;
        data[7] = 0x0000000500000000ULL;
        data[8] = 0x0000003d00000000ULL;
        data[9] = 0x0000000500000000ULL;
        data[10] = 0x0000000d00000000ULL;
        data[11] = 0x0000000500000000ULL;
        data[12] = 0x0000001d00000000ULL;
        data[13] = 0x0000000500000000ULL;
        data[14] = 0x0000000d00000000ULL;
        data[15] = 0x0000000500000000ULL;
        data[16] = 0x0000007d00000000ULL;
        data[17] = 0x0000000500000000ULL;
        data[18] = 0x0000000d00000000ULL;
        data[19] = 0x0000000500000000ULL;
        data[20] = 0x0000001d00000000ULL;
        data[21] = 0x0000000500000000ULL;
        data[22] = 0x0000000d00000000ULL;
        data[23] = 0x0000000500000000ULL;
        data[24] = 0x0000003d00000000ULL;
        data[25] = 0x0000000500000000ULL;
        data[26] = 0x0000000d00000000ULL;
        data[27] = 0x0000000500000000ULL;
        data[28] = 0x0000001d00000000ULL;
        data[29] = 0x0000000500000000ULL;
        data[30] = 0x0000000d00000000ULL;
        data[31] = 0x0000000500000000ULL;
    }),
    AttackTable(RightShift<33>::hash, [](std::vector<uint64_t>& data) {
        data.resize(62);
        data[0] = 0x000000fb00000000ULL;
        data[1] = 0x000000fa00000000ULL;
        data[4] = 0x0000000b00000000ULL;
        data[5] = 0x0000000a00000000ULL;
        data[8] = 0x0000001b00000000ULL;
        data[9] = 0x0000001a00000000ULL;
        data[12] = 0x0000000b00000000ULL;
        data[13] = 0x0000000a00000000ULL;
        data[16] = 0x0000003b00000000ULL;
        data[17] = 0x0000003a00000000ULL;
        data[20] = 0x0000000b00000000ULL;
        data[21] = 0x0000000a00000000ULL;
        data[24] = 0x0000001b00000000ULL;
        data[25] = 0x0000001a00000000ULL;
        data[28] = 0x0000000b00000000ULL;
        data[29] = 0x0000000a00000000ULL;
        data[32] = 0x0000007b00000000ULL;
        data[33] = 0x0000007a00000000ULL;
        data[36] = 0x0000000b00000000ULL;
        data[37] = 0x0000000a00000000ULL;
        data[40] = 0x0000001b00000000ULL;
        data[41] = 0x0000001a00000000ULL;
        data[44] = 0x0000000b00000000ULL;
        data[45] = 0x0000000a00000000ULL;
        data[48] = 0x0000003b00000000ULL;
        data[49] = 0x0000003a00000000ULL;
        data[52] = 0x0000000b00000000ULL;
        data[53] = 0x0000000a00000000ULL;
        data[56] = 0x0000001b00000000ULL;
        data[57] = 0x0000001a00000000ULL;
        data[60] = 0x0000000b00000000ULL;
        data[61] = 0x0000000a00000000ULL;
    }),
    AttackTable(RightShift<33>::hash, [](std::vector<uint64_t>& data) {
        data.resize(60);
        data[0] = 0x000000f700000000ULL;
        data[1] = 0x000000f600000000ULL;
        data[2] = 0x000000f400000000ULL;
        data[3] = 0x000000f400000000ULL;
        data[8] = 0x0000001700000000ULL;
        data[9] = 0x0000001600000000ULL;
        data[10] = 0x0000001400000000ULL;
        data[11] = 0x0000001400000000ULL;
        data[16] = 0x0000003700000000ULL;
        data[17] = 0x0000003600000000ULL;
        data[18] = 0x0000003400000000ULL;
        data[19] = 0x0000003400000000ULL;
        data[24] = 0x0000001700000000ULL;
        data[25] = 0x0000001600000000ULL;
        data[26] = 0x0000001400000000ULL;
        data[27] = 0x0000001400000000ULL;
        data[32] = 0x0000007700000000ULL;
        data[33] = 0x0000007600000000ULL;
        data[34] = 0x0000007400000000ULL;
        data[35] = 0x0000007400000000ULL;
        data[40] = 0x0000001700000000ULL;
        data[41] = 0x0000001600000000ULL;
        data[42] = 0x0000001400000000ULL;
        data[43] = 0x0000001400000000ULL;
        data[48] = 0x0000003700000000ULL;
        data[49] = 0x0000003600000000ULL;
        data[50] = 0x0000003400000000ULL;
        data[51] = 0x0000003400000000ULL;
        data[56] = 0x0000001700000000ULL;
        data[57] = 0x0000001600000000ULL;
        data[58] = 0x0000001400000000ULL;
        data[59] = 0x0000001400000000ULL;
    }),
    AttackTable(RightShift<33>::hash, [](std::vector<uint64_t>& data) {
        data.resize(56);
        data[0] = 0x000000ef00000000ULL;
        data[1] = 0x000000ee00000000ULL;
        data[2] = 0x000000ec00000000ULL;
        data[3] = 0x000000ec00000000ULL;
        data[4] = 0x000000e800000000ULL;
        data[5] = 0x000000e800000000ULL;
        data[6] = 0x000000e800000000ULL;
        data[7] = 0x000000e800000000ULL;
        data[16] = 0x0000002f00000000ULL;
        data[17] = 0x0000002e00000000ULL;
        data[18] = 0x0000002c00000000ULL;
        data[19] = 0x0000002c00000000ULL;
        data[20] = 0x0000002800000000ULL;
        data[21] = 0x0000002800000000ULL;
        data[22] = 0x0000002800000000ULL;
        data[23] = 0x0000002800000000ULL;
        data[32] = 0x0000006f00000000ULL;
        data[33] = 0x0000006e00000000ULL;
        data[34] = 0x0000006c00000000ULL;
        data[35] = 0x0000006c00000000ULL;
        data[36] = 0x0000006800000000ULL;
        data[37] = 0x0000006800000000ULL;
        data[38] = 0x0000006800000000ULL;
        data[39] = 0x0000006800000000ULL;
        data[48] = 0x0000002f00000000ULL;
        data[49] = 0x0000002e00000000ULL;
        data[50] = 0x0000002c00000000ULL;
        data[51] = 0x0000002c00000000ULL;
        data[52] = 0x0000002800000000ULL;
        data[53] = 0x0000002800000000ULL;
        data[54] = 0x0000002800000000ULL;
        data[55] = 0x0000002800000000ULL;
    }),
    AttackTable(RightShift<33>::hash, [](std::vector<uint64_t>& data) {
        data.resize(48);
        data[0] = 0x000000df00000000ULL;
        data[1] = 0x000000de00000000ULL;
        data[2] = 0x000000dc00000000ULL;
        data[3] = 0x000000dc00000000ULL;
        data[4] = 0x000000d800000000ULL;
        data[5] = 0x000000d800000000ULL;
        data[6] = 0x000000d800000000ULL;
        data[7] = 0x000000d800000000ULL;
        data[8] = 0x000000d000000000ULL;
        data[9] = 0x000000d000000000ULL;
        data[10] = 0x000000d000000000ULL;
        data[11] = 0x000000d000000000ULL;
        data[12] = 0x000000d000000000ULL;
        data[13] = 0x000000d000000000ULL;
        data[14] = 0x000000d000000000ULL;
        data[15] = 0x000000d000000000ULL;
        data[32] = 0x0000005f00000000ULL;
        data[33] = 0x0000005e00000000ULL;
        data[34] = 0x0000005c00000000ULL;
        data[35] = 0x0000005c00000000ULL;
        data[36] = 0x0000005800000000ULL;
        data[37] = 0x0000005800000000ULL;
        data[38] = 0x0000005800000000ULL;
        data[39] = 0x0000005800000000ULL;
        data[40] = 0x0000005000000000ULL;
        data[41] = 0x0000005000000000ULL;
        data[42] = 0x0000005000000000ULL;
        data[43] = 0x0000005000000000ULL;
        data[44] = 0x0000005000000000ULL;
        data[45] = 0x0000005000000000ULL;
        data[46] = 0x0000005000000000ULL;
        data[47] = 0x0000005000000000ULL;
    }),
    AttackTable(RightShift<33>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x000000bf00000000ULL;
        data[1] = 0x000000be00000000ULL;
        data[2] = 0x000000bc00000000ULL;
        data[3] = 0x000000bc00000000ULL;
        data[4] = 0x000000b800000000ULL;
        data[5] = 0x000000b800000000ULL;
        data[6] = 0x000000b800000000ULL;
        data[7] = 0x000000b800000000ULL;
        data[8] = 0x000000b000000000ULL;
        data[9] = 0x000000b000000000ULL;
        data[10] = 0x000000b000000000ULL;
        data[11] = 0x000000b000000000ULL;
        data[12] = 0x000000b000000000ULL;
        data[13] = 0x000000b000000000ULL;
        data[14] = 0x000000b000000000ULL;
        data[15] = 0x000000b000000000ULL;
        data[16] = 0x000000a000000000ULL;
        data[17] = 0x000000a000000000ULL;
        data[18] = 0x000000a000000000ULL;
        data[19] = 0x000000a000000000ULL;
        data[20] = 0x000000a000000000ULL;
        data[21] = 0x000000a000000000ULL;
        data[22] = 0x000000a000000000ULL;
        data[23] = 0x000000a000000000ULL;
        data[24] = 0x000000a000000000ULL;
        data[25] = 0x000000a000000000ULL;
        data[26] = 0x000000a000000000ULL;
        data[27] = 0x000000a000000000ULL;
        data[28] = 0x000000a000000000ULL;
        data[29] = 0x000000a000000000ULL;
        data[30] = 0x000000a000000000ULL;
        data[31] = 0x000000a000000000ULL;
    }),
    AttackTable(RightShift<33>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x0000007f00000000ULL;
        data[1] = 0x0000007e00000000ULL;
        data[2] = 0x0000007c00000000ULL;
        data[3] = 0x0000007c00000000ULL;
        data[4] = 0x0000007800000000ULL;
        data[5] = 0x0000007800000000ULL;
        data[6] = 0x0000007800000000ULL;
        data[7] = 0x0000007800000000ULL;
        data[8] = 0x0000007000000000ULL;
        data[9] = 0x0000007000000000ULL;
        data[10] = 0x0000007000000000ULL;
        data[11] = 0x0000007000000000ULL;
        data[12] = 0x0000007000000000ULL;
        data[13] = 0x0000007000000000ULL;
        data[14] = 0x0000007000000000ULL;
        data[15] = 0x0000007000000000ULL;
        data[16] = 0x0000006000000000ULL;
        data[17] = 0x0000006000000000ULL;
        data[18] = 0x0000006000000000ULL;
        data[19] = 0x0000006000000000ULL;
        data[20] = 0x0000006000000000ULL;
        data[21] = 0x0000006000000000ULL;
        data[22] = 0x0000006000000000ULL;
        data[23] = 0x0000006000000000ULL;
        data[24] = 0x0000006000000000ULL;
        data[25] = 0x0000006000000000ULL;
        data[26] = 0x0000006000000000ULL;
        data[27] = 0x0000006000000000ULL;
        data[28] = 0x0000006000000000ULL;
        data[29] = 0x0000006000000000ULL;
        data[30] = 0x0000006000000000ULL;
        data[31] = 0x0000006000000000ULL;
        data[32] = 0x0000004000000000ULL;
        data[33] = 0x0000004000000000ULL;
        data[34] = 0x0000004000000000ULL;
        data[35] = 0x0000004000000000ULL;
        data[36] = 0x0000004000000000ULL;
        data[37] = 0x0000004000000000ULL;
        data[38] = 0x0000004000000000ULL;
        data[39] = 0x0000004000000000ULL;
        data[40] = 0x0000004000000000ULL;
        data[41] = 0x0000004000000000ULL;
        data[42] = 0x0000004000000000ULL;
        data[43] = 0x0000004000000000ULL;
        data[44] = 0x0000004000000000ULL;
        data[45] = 0x0000004000000000ULL;
        data[46] = 0x0000004000000000ULL;
        data[47] = 0x0000004000000000ULL;
        data[48] = 0x0000004000000000ULL;
        data[49] = 0x0000004000000000ULL;
        data[50] = 0x0000004000000000ULL;
        data[51] = 0x0000004000000000ULL;
        data[52] = 0x0000004000000000ULL;
        data[53] = 0x0000004000000000ULL;
        data[54] = 0x0000004000000000ULL;
        data[55] = 0x0000004000000000ULL;
        data[56] = 0x0000004000000000ULL;
        data[57] = 0x0000004000000000ULL;
        data[58] = 0x0000004000000000ULL;
        data[59] = 0x0000004000000000ULL;
        data[60] = 0x0000004000000000ULL;
        data[61] = 0x0000004000000000ULL;
        data[62] = 0x0000004000000000ULL;
        data[63] = 0x0000004000000000ULL;
    }),
    AttackTable(RightShift<41>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x0000fe0000000000ULL;
        data[1] = 0x0000020000000000ULL;
        data[2] = 0x0000060000000000ULL;
        data[3] = 0x0000020000000000ULL;
        data[4] = 0x00000e0000000000ULL;
        data[5] = 0x0000020000000000ULL;
        data[6] = 0x0000060000000000ULL;
        data[7] = 0x0000020000000000ULL;
        data[8] = 0x00001e0000000000ULL;
        data[9] = 0x0000020000000000ULL;
        data[10] = 0x0000060000000000ULL;
        data[11] = 0x0000020000000000ULL;
        data[12] = 0x00000e0000000000ULL;
        data[13] = 0x0000020000000000ULL;
        data[14] = 0x0000060000000000ULL;
        data[15] = 0x0000020000000000ULL;
        data[16] = 0x00003e0000000000ULL;
        data[17] = 0x0000020000000000ULL;
        data[18] = 0x0000060000000000ULL;
        data[19] = 0x0000020000000000ULL;
        data[20] = 0x00000e0000000000ULL;
        data[21] = 0x0000020000000000ULL;
        data[22] = 0x0000060000000000ULL;
        data[23] = 0x0000020000000000ULL;
        data[24] = 0x00001e0000000000ULL;
        data[25] = 0x0000020000000000ULL;
        data[26] = 0x0000060000000000ULL;
        data[27] = 0x0000020000000000ULL;
        data[28] = 0x00000e0000000000ULL;
        data[29] = 0x0000020000000000ULL;
        data[30] = 0x0000060000000000ULL;
        data[31] = 0x0000020000000000ULL;
        data[32] = 0x00007e0000000000ULL;
        data[33] = 0x0000020000000000ULL;
        data[34] = 0x0000060000000000ULL;
        data[35] = 0x0000020000000000ULL;
        data[36] = 0x00000e0000000000ULL;
        data[37] = 0x0000020000000000ULL;
        data[38] = 0x0000060000000000ULL;
        data[39] = 0x0000020000000000ULL;
        data[40] = 0x00001e0000000000ULL;
        data[41] = 0x0000020000000000ULL;
        data[42] = 0x0000060000000000ULL;
        data[43] = 0x0000020000000000ULL;
        data[44] = 0x00000e0000000000ULL;
        data[45] = 0x0000020000000000ULL;
        data[46] = 0x0000060000000000ULL;
        data[47] = 0x0000020000000000ULL;
        data[48] = 0x00003e0000000000ULL;
        data[49] = 0x0000020000000000ULL;
        data[50] = 0x0000060000000000ULL;
        data[51] = 0x0000020000000000ULL;
        data[52] = 0x00000e0000000000ULL;
        data[53] = 0x0000020000000000ULL;
        data[54] = 0x0000060000000000ULL;
        data[55] = 0x0000020000000000ULL;
        data[56] = 0x00001e0000000000ULL;
        data[57] = 0x0000020000000000ULL;
        data[58] = 0x0000060000000000ULL;
        data[59] = 0x0000020000000000ULL;
        data[60] = 0x00000e0000000000ULL;
        data[61] = 0x0000020000000000ULL;
        data[62] = 0x0000060000000000ULL;
        data[63] = 0x0000020000000000ULL;
    }),
    AttackTable(RightShift<42>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x0000fd0000000000ULL;
        data[1] = 0x0000050000000000ULL;
        data[2] = 0x00000d0000000000ULL;
        data[3] = 0x0000050000000000ULL;
        data[4] = 0x00001d0000000000ULL;
        data[5] = 0x0000050000000000ULL;
        data[6] = 0x00000d0000000000ULL;
        data[7] = 0x0000050000000000ULL;
        data[8] = 0x00003d0000000000ULL;
        data[9] = 0x0000050000000000ULL;
        data[10] = 0x00000d0000000000ULL;
        data[11] = 0x0000050000000000ULL;
        data[12] = 0x00001d0000000000ULL;
        data[13] = 0x0000050000000000ULL;
        data[14] = 0x00000d0000000000ULL;
        data[15] = 0x0000050000000000ULL;
        data[16] = 0x00007d0000000000ULL;
        data[17] = 0x0000050000000000ULL;
        data[18] = 0x00000d0000000000ULL;
        data[19] = 0x0000050000000000ULL;
        data[20] = 0x00001d0000000000ULL;
        data[21] = 0x0000050000000000ULL;
        data[22] = 0x00000d0000000000ULL;
        data[23] = 0x0000050000000000ULL;
        data[24] = 0x00003d0000000000ULL;
        data[25] = 0x0000050000000000ULL;
        data[26] = 0x00000d0000000000ULL;
        data[27] = 0x0000050000000000ULL;
        data[28] = 0x00001d0000000000ULL;
        data[29] = 0x0000050000000000ULL;
        data[30] = 0x00000d0000000000ULL;
        data[31] = 0x0000050000000000ULL;
    }),
    AttackTable(RightShift<41>::hash, [](std::vector<uint64_t>& data) {
        data.resize(62);
        data[0] = 0x0000fb0000000000ULL;
        data[1] = 0x0000fa0000000000ULL;
        data[4] = 0x00000b0000000000ULL;
        data[5] = 0x00000a0000000000ULL;
        data[8] = 0x00001b0000000000ULL;
        data[9] = 0x00001a0000000000ULL;
        data[12] = 0x00000b0000000000ULL;
        data[13] = 0x00000a0000000000ULL;
        data[16] = 0x00003b0000000000ULL;
        data[17] = 0x00003a0000000000ULL;
        data[20] = 0x00000b0000000000ULL;
        data[21] = 0x00000a0000000000ULL;
        data[24] = 0x00001b0000000000ULL;
        data[25] = 0x00001a0000000000ULL;
        data[28] = 0x00000b0000000000ULL;
        data[29] = 0x00000a0000000000ULL;
        data[32] = 0x00007b0000000000ULL;
        data[33] = 0x00007a0000000000ULL;
        data[36] = 0x00000b0000000000ULL;
        data[37] = 0x00000a0000000000ULL;
        data[40] = 0x00001b0000000000ULL;
        data[41] = 0x00001a0000000000ULL;
        data[44] = 0x00000b0000000000ULL;
        data[45] = 0x00000a0000000000ULL;
        data[48] = 0x00003b0000000000ULL;
        data[49] = 0x00003a0000000000ULL;
        data[52] = 0x00000b0000000000ULL;
        data[53] = 0x00000a0000000000ULL;
        data[56] = 0x00001b0000000000ULL;
        data[57] = 0x00001a0000000000ULL;
        data[60] = 0x00000b0000000000ULL;
        data[61] = 0x00000a0000000000ULL;
    }),
    AttackTable(RightShift<41>::hash, [](std::vector<uint64_t>& data) {
        data.resize(60);
        data[0] = 0x0000f70000000000ULL;
        data[1] = 0x0000f60000000000ULL;
        data[2] = 0x0000f40000000000ULL;
        data[3] = 0x0000f40000000000ULL;
        data[8] = 0x0000170000000000ULL;
        data[9] = 0x0000160000000000ULL;
        data[10] = 0x0000140000000000ULL;
        data[11] = 0x0000140000000000ULL;
        data[16] = 0x0000370000000000ULL;
        data[17] = 0x0000360000000000ULL;
        data[18] = 0x0000340000000000ULL;
        data[19] = 0x0000340000000000ULL;
        data[24] = 0x0000170000000000ULL;
        data[25] = 0x0000160000000000ULL;
        data[26] = 0x0000140000000000ULL;
        data[27] = 0x0000140000000000ULL;
        data[32] = 0x0000770000000000ULL;
        data[33] = 0x0000760000000000ULL;
        data[34] = 0x0000740000000000ULL;
        data[35] = 0x0000740000000000ULL;
        data[40] = 0x0000170000000000ULL;
        data[41] = 0x0000160000000000ULL;
        data[42] = 0x0000140000000000ULL;
        data[43] = 0x0000140000000000ULL;
        data[48] = 0x0000370000000000ULL;
        data[49] = 0x0000360000000000ULL;
        data[50] = 0x0000340000000000ULL;
        data[51] = 0x0000340000000000ULL;
        data[56] = 0x0000170000000000ULL;
        data[57] = 0x0000160000000000ULL;
        data[58] = 0x0000140000000000ULL;
        data[59] = 0x0000140000000000ULL;
    }),
    AttackTable(RightShift<41>::hash, [](std::vector<uint64_t>& data) {
        data.resize(56);
        data[0] = 0x0000ef0000000000ULL;
        data[1] = 0x0000ee0000000000ULL;
        data[2] = 0x0000ec0000000000ULL;
        data[3] = 0x0000ec0000000000ULL;
        data[4] = 0x0000e80000000000ULL;
        data[5] = 0x0000e80000000000ULL;
        data[6] = 0x0000e80000000000ULL;
        data[7] = 0x0000e80000000000ULL;
        data[16] = 0x00002f0000000000ULL;
        data[17] = 0x00002e0000000000ULL;
        data[18] = 0x00002c0000000000ULL;
        data[19] = 0x00002c0000000000ULL;
        data[20] = 0x0000280000000000ULL;
        data[21] = 0x0000280000000000ULL;
        data[22] = 0x0000280000000000ULL;
        data[23] = 0x0000280000000000ULL;
        data[32] = 0x00006f0000000000ULL;
        data[33] = 0x00006e0000000000ULL;
        data[34] = 0x00006c0000000000ULL;
        data[35] = 0x00006c0000000000ULL;
        data[36] = 0x0000680000000000ULL;
        data[37] = 0x0000680000000000ULL;
        data[38] = 0x0000680000000000ULL;
        data[39] = 0x0000680000000000ULL;
        data[48] = 0x00002f0000000000ULL;
        data[49] = 0x00002e0000000000ULL;
        data[50] = 0x00002c0000000000ULL;
        data[51] = 0x00002c0000000000ULL;
        data[52] = 0x0000280000000000ULL;
        data[53] = 0x0000280000000000ULL;
        data[54] = 0x0000280000000000ULL;
        data[55] = 0x0000280000000000ULL;
    }),
    AttackTable(RightShift<41>::hash, [](std::vector<uint64_t>& data) {
        data.resize(48);
        data[0] = 0x0000df0000000000ULL;
        data[1] = 0x0000de0000000000ULL;
        data[2] = 0x0000dc0000000000ULL;
        data[3] = 0x0000dc0000000000ULL;
        data[4] = 0x0000d80000000000ULL;
        data[5] = 0x0000d80000000000ULL;
        data[6] = 0x0000d80000000000ULL;
        data[7] = 0x0000d80000000000ULL;
        data[8] = 0x0000d00000000000ULL;
        data[9] = 0x0000d00000000000ULL;
        data[10] = 0x0000d00000000000ULL;
        data[11] = 0x0000d00000000000ULL;
        data[12] = 0x0000d00000000000ULL;
        data[13] = 0x0000d00000000000ULL;
        data[14] = 0x0000d00000000000ULL;
        data[15] = 0x0000d00000000000ULL;
        data[32] = 0x00005f0000000000ULL;
        data[33] = 0x00005e0000000000ULL;
        data[34] = 0x00005c0000000000ULL;
        data[35] = 0x00005c0000000000ULL;
        data[36] = 0x0000580000000000ULL;
        data[37] = 0x0000580000000000ULL;
        data[38] = 0x0000580000000000ULL;
        data[39] = 0x0000580000000000ULL;
        data[40] = 0x0000500000000000ULL;
        data[41] = 0x0000500000000000ULL;
        data[42] = 0x0000500000000000ULL;
        data[43] = 0x0000500000000000ULL;
        data[44] = 0x0000500000000000ULL;
        data[45] = 0x0000500000000000ULL;
        data[46] = 0x0000500000000000ULL;
        data[47] = 0x0000500000000000ULL;
    }),
    AttackTable(RightShift<41>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x0000bf0000000000ULL;
        data[1] = 0x0000be0000000000ULL;
        data[2] = 0x0000bc0000000000ULL;
        data[3] = 0x0000bc0000000000ULL;
        data[4] = 0x0000b80000000000ULL;
        data[5] = 0x0000b80000000000ULL;
        data[6] = 0x0000b80000000000ULL;
        data[7] = 0x0000b80000000000ULL;
        data[8] = 0x0000b00000000000ULL;
        data[9] = 0x0000b00000000000ULL;
        data[10] = 0x0000b00000000000ULL;
        data[11] = 0x0000b00000000000ULL;
        data[12] = 0x0000b00000000000ULL;
        data[13] = 0x0000b00000000000ULL;
        data[14] = 0x0000b00000000000ULL;
        data[15] = 0x0000b00000000000ULL;
        data[16] = 0x0000a00000000000ULL;
        data[17] = 0x0000a00000000000ULL;
        data[18] = 0x0000a00000000000ULL;
        data[19] = 0x0000a00000000000ULL;
        data[20] = 0x0000a00000000000ULL;
        data[21] = 0x0000a00000000000ULL;
        data[22] = 0x0000a00000000000ULL;
        data[23] = 0x0000a00000000000ULL;
        data[24] = 0x0000a00000000000ULL;
        data[25] = 0x0000a00000000000ULL;
        data[26] = 0x0000a00000000000ULL;
        data[27] = 0x0000a00000000000ULL;
        data[28] = 0x0000a00000000000ULL;
        data[29] = 0x0000a00000000000ULL;
        data[30] = 0x0000a00000000000ULL;
        data[31] = 0x0000a00000000000ULL;
    }),
    AttackTable(RightShift<41>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x00007f0000000000ULL;
        data[1] = 0x00007e0000000000ULL;
        data[2] = 0x00007c0000000000ULL;
        data[3] = 0x00007c0000000000ULL;
        data[4] = 0x0000780000000000ULL;
        data[5] = 0x0000780000000000ULL;
        data[6] = 0x0000780000000000ULL;
        data[7] = 0x0000780000000000ULL;
        data[8] = 0x0000700000000000ULL;
        data[9] = 0x0000700000000000ULL;
        data[10] = 0x0000700000000000ULL;
        data[11] = 0x0000700000000000ULL;
        data[12] = 0x0000700000000000ULL;
        data[13] = 0x0000700000000000ULL;
        data[14] = 0x0000700000000000ULL;
        data[15] = 0x0000700000000000ULL;
        data[16] = 0x0000600000000000ULL;
        data[17] = 0x0000600000000000ULL;
        data[18] = 0x0000600000000000ULL;
        data[19] = 0x0000600000000000ULL;
        data[20] = 0x0000600000000000ULL;
        data[21] = 0x0000600000000000ULL;
        data[22] = 0x0000600000000000ULL;
        data[23] = 0x0000600000000000ULL;
        data[24] = 0x0000600000000000ULL;
        data[25] = 0x0000600000000000ULL;
        data[26] = 0x0000600000000000ULL;
        data[27] = 0x0000600000000000ULL;
        data[28] = 0x0000600000000000ULL;
        data[29] = 0x0000600000000000ULL;
        data[30] = 0x0000600000000000ULL;
        data[31] = 0x0000600000000000ULL;
        data[32] = 0x0000400000000000ULL;
        data[33] = 0x0000400000000000ULL;
        data[34] = 0x0000400000000000ULL;
        data[35] = 0x0000400000000000ULL;
        data[36] = 0x0000400000000000ULL;
        data[37] = 0x0000400000000000ULL;
        data[38] = 0x0000400000000000ULL;
        data[39] = 0x0000400000000000ULL;
        data[40] = 0x0000400000000000ULL;
        data[41] = 0x0000400000000000ULL;
        data[42] = 0x0000400000000000ULL;
        data[43] = 0x0000400000000000ULL;
        data[44] = 0x0000400000000000ULL;
        data[45] = 0x0000400000000000ULL;
        data[46] = 0x0000400000000000ULL;
        data[47] = 0x0000400000000000ULL;
        data[48] = 0x0000400000000000ULL;
        data[49] = 0x0000400000000000ULL;
        data[50] = 0x0000400000000000ULL;
        data[51] = 0x0000400000000000ULL;
        data[52] = 0x0000400000000000ULL;
        data[53] = 0x0000400000000000ULL;
        data[54] = 0x0000400000000000ULL;
        data[55] = 0x0000400000000000ULL;
        data[56] = 0x0000400000000000ULL;
        data[57] = 0x0000400000000000ULL;
        data[58] = 0x0000400000000000ULL;
        data[59] = 0x0000400000000000ULL;
        data[60] = 0x0000400000000000ULL;
        data[61] = 0x0000400000000000ULL;
        data[62] = 0x0000400000000000ULL;
        data[63] = 0x0000400000000000ULL;
    }),
    AttackTable(RightShift<49>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x00fe000000000000ULL;
        data[1] = 0x0002000000000000ULL;
        data[2] = 0x0006000000000000ULL;
        data[3] = 0x0002000000000000ULL;
        data[4] = 0x000e000000000000ULL;
        data[5] = 0x0002000000000000ULL;
        data[6] = 0x0006000000000000ULL;
        data[7] = 0x0002000000000000ULL;
        data[8] = 0x001e000000000000ULL;
        data[9] = 0x0002000000000000ULL;
        data[10] = 0x0006000000000000ULL;
        data[11] = 0x0002000000000000ULL;
        data[12] = 0x000e000000000000ULL;
        data[13] = 0x0002000000000000ULL;
        data[14] = 0x0006000000000000ULL;
        data[15] = 0x0002000000000000ULL;
        data[16] = 0x003e000000000000ULL;
        data[17] = 0x0002000000000000ULL;
        data[18] = 0x0006000000000000ULL;
        data[19] = 0x0002000000000000ULL;
        data[20] = 0x000e000000000000ULL;
        data[21] = 0x0002000000000000ULL;
        data[22] = 0x0006000000000000ULL;
        data[23] = 0x0002000000000000ULL;
        data[24] = 0x001e000000000000ULL;
        data[25] = 0x0002000000000000ULL;
        data[26] = 0x0006000000000000ULL;
        data[27] = 0x0002000000000000ULL;
        data[28] = 0x000e000000000000ULL;
        data[29] = 0x0002000000000000ULL;
        data[30] = 0x0006000000000000ULL;
        data[31] = 0x0002000000000000ULL;
        data[32] = 0x007e000000000000ULL;
        data[33] = 0x0002000000000000ULL;
        data[34] = 0x0006000000000000ULL;
        data[35] = 0x0002000000000000ULL;
        data[36] = 0x000e000000000000ULL;
        data[37] = 0x0002000000000000ULL;
        data[38] = 0x0006000000000000ULL;
        data[39] = 0x0002000000000000ULL;
        data[40] = 0x001e000000000000ULL;
        data[41] = 0x0002000000000000ULL;
        data[42] = 0x0006000000000000ULL;
        data[43] = 0x0002000000000000ULL;
        data[44] = 0x000e000000000000ULL;
        data[45] = 0x0002000000000000ULL;
        data[46] = 0x0006000000000000ULL;
        data[47] = 0x0002000000000000ULL;
        data[48] = 0x003e000000000000ULL;
        data[49] = 0x0002000000000000ULL;
        data[50] = 0x0006000000000000ULL;
        data[51] = 0x0002000000000000ULL;
        data[52] = 0x000e000000000000ULL;
        data[53] = 0x0002000000000000ULL;
        data[54] = 0x0006000000000000ULL;
        data[55] = 0x0002000000000000ULL;
        data[56] = 0x001e000000000000ULL;
        data[57] = 0x0002000000000000ULL;
        data[58] = 0x0006000000000000ULL;
        data[59] = 0x0002000000000000ULL;
        data[60] = 0x000e000000000000ULL;
        data[61] = 0x0002000000000000ULL;
        data[62] = 0x0006000000000000ULL;
        data[63] = 0x0002000000000000ULL;
    }),
    AttackTable(RightShift<50>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x00fd000000000000ULL;
        data[1] = 0x0005000000000000ULL;
        data[2] = 0x000d000000000000ULL;
        data[3] = 0x0005000000000000ULL;
        data[4] = 0x001d000000000000ULL;
        data[5] = 0x0005000000000000ULL;
        data[6] = 0x000d000000000000ULL;
        data[7] = 0x0005000000000000ULL;
        data[8] = 0x003d000000000000ULL;
        data[9] = 0x0005000000000000ULL;
        data[10] = 0x000d000000000000ULL;
        data[11] = 0x0005000000000000ULL;
        data[12] = 0x001d000000000000ULL;
        data[13] = 0x0005000000000000ULL;
        data[14] = 0x000d000000000000ULL;
        data[15] = 0x0005000000000000ULL;
        data[16] = 0x007d000000000000ULL;
        data[17] = 0x0005000000000000ULL;
        data[18] = 0x000d000000000000ULL;
        data[19] = 0x0005000000000000ULL;
        data[20] = 0x001d000000000000ULL;
        data[21] = 0x0005000000000000ULL;
        data[22] = 0x000d000000000000ULL;
        data[23] = 0x0005000000000000ULL;
        data[24] = 0x003d000000000000ULL;
        data[25] = 0x0005000000000000ULL;
        data[26] = 0x000d000000000000ULL;
        data[27] = 0x0005000000000000ULL;
        data[28] = 0x001d000000000000ULL;
        data[29] = 0x0005000000000000ULL;
        data[30] = 0x000d000000000000ULL;
        data[31] = 0x0005000000000000ULL;
    }),
    AttackTable(RightShift<49>::hash, [](std::vector<uint64_t>& data) {
        data.resize(62);
        data[0] = 0x00fb000000000000ULL;
        data[1] = 0x00fa000000000000ULL;
        data[4] = 0x000b000000000000ULL;
        data[5] = 0x000a000000000000ULL;
        data[8] = 0x001b000000000000ULL;
        data[9] = 0x001a000000000000ULL;
        data[12] = 0x000b000000000000ULL;
        data[13] = 0x000a000000000000ULL;
        data[16] = 0x003b000000000000ULL;
        data[17] = 0x003a000000000000ULL;
        data[20] = 0x000b000000000000ULL;
        data[21] = 0x000a000000000000ULL;
        data[24] = 0x001b000000000000ULL;
        data[25] = 0x001a000000000000ULL;
        data[28] = 0x000b000000000000ULL;
        data[29] = 0x000a000000000000ULL;
        data[32] = 0x007b000000000000ULL;
        data[33] = 0x007a000000000000ULL;
        data[36] = 0x000b000000000000ULL;
        data[37] = 0x000a000000000000ULL;
        data[40] = 0x001b000000000000ULL;
        data[41] = 0x001a000000000000ULL;
        data[44] = 0x000b000000000000ULL;
        data[45] = 0x000a000000000000ULL;
        data[48] = 0x003b000000000000ULL;
        data[49] = 0x003a000000000000ULL;
        data[52] = 0x000b000000000000ULL;
        data[53] = 0x000a000000000000ULL;
        data[56] = 0x001b000000000000ULL;
        data[57] = 0x001a000000000000ULL;
        data[60] = 0x000b000000000000ULL;
        data[61] = 0x000a000000000000ULL;
    }),
    AttackTable(RightShift<49>::hash, [](std::vector<uint64_t>& data) {
        data.resize(60);
        data[0] = 0x00f7000000000000ULL;
        data[1] = 0x00f6000000000000ULL;
        data[2] = 0x00f4000000000000ULL;
        data[3] = 0x00f4000000000000ULL;
        data[8] = 0x0017000000000000ULL;
        data[9] = 0x0016000000000000ULL;
        data[10] = 0x0014000000000000ULL;
        data[11] = 0x0014000000000000ULL;
        data[16] = 0x0037000000000000ULL;
        data[17] = 0x0036000000000000ULL;
        data[18] = 0x0034000000000000ULL;
        data[19] = 0x0034000000000000ULL;
        data[24] = 0x0017000000000000ULL;
        data[25] = 0x0016000000000000ULL;
        data[26] = 0x0014000000000000ULL;
        data[27] = 0x0014000000000000ULL;
        data[32] = 0x0077000000000000ULL;
        data[33] = 0x0076000000000000ULL;
        data[34] = 0x0074000000000000ULL;
        data[35] = 0x0074000000000000ULL;
        data[40] = 0x0017000000000000ULL;
        data[41] = 0x0016000000000000ULL;
        data[42] = 0x0014000000000000ULL;
        data[43] = 0x0014000000000000ULL;
        data[48] = 0x0037000000000000ULL;
        data[49] = 0x0036000000000000ULL;
        data[50] = 0x0034000000000000ULL;
        data[51] = 0x0034000000000000ULL;
        data[56] = 0x0017000000000000ULL;
        data[57] = 0x0016000000000000ULL;
        data[58] = 0x0014000000000000ULL;
        data[59] = 0x0014000000000000ULL;
    }),
    AttackTable(RightShift<49>::hash, [](std::vector<uint64_t>& data) {
        data.resize(56);
        data[0] = 0x00ef000000000000ULL;
        data[1] = 0x00ee000000000000ULL;
        data[2] = 0x00ec000000000000ULL;
        data[3] = 0x00ec000000000000ULL;
        data[4] = 0x00e8000000000000ULL;
        data[5] = 0x00e8000000000000ULL;
        data[6] = 0x00e8000000000000ULL;
        data[7] = 0x00e8000000000000ULL;
        data[16] = 0x002f000000000000ULL;
        data[17] = 0x002e000000000000ULL;
        data[18] = 0x002c000000000000ULL;
        data[19] = 0x002c000000000000ULL;
        data[20] = 0x0028000000000000ULL;
        data[21] = 0x0028000000000000ULL;
        data[22] = 0x0028000000000000ULL;
        data[23] = 0x0028000000000000ULL;
        data[32] = 0x006f000000000000ULL;
        data[33] = 0x006e000000000000ULL;
        data[34] = 0x006c000000000000ULL;
        data[35] = 0x006c000000000000ULL;
        data[36] = 0x0068000000000000ULL;
        data[37] = 0x0068000000000000ULL;
        data[38] = 0x0068000000000000ULL;
        data[39] = 0x0068000000000000ULL;
        data[48] = 0x002f000000000000ULL;
        data[49] = 0x002e000000000000ULL;
        data[50] = 0x002c000000000000ULL;
        data[51] = 0x002c000000000000ULL;
        data[52] = 0x0028000000000000ULL;
        data[53] = 0x0028000000000000ULL;
        data[54] = 0x0028000000000000ULL;
        data[55] = 0x0028000000000000ULL;
    }),
    AttackTable(RightShift<49>::hash, [](std::vector<uint64_t>& data) {
        data.resize(48);
        data[0] = 0x00df000000000000ULL;
        data[1] = 0x00de000000000000ULL;
        data[2] = 0x00dc000000000000ULL;
        data[3] = 0x00dc000000000000ULL;
        data[4] = 0x00d8000000000000ULL;
        data[5] = 0x00d8000000000000ULL;
        data[6] = 0x00d8000000000000ULL;
        data[7] = 0x00d8000000000000ULL;
        data[8] = 0x00d0000000000000ULL;
        data[9] = 0x00d0000000000000ULL;
        data[10] = 0x00d0000000000000ULL;
        data[11] = 0x00d0000000000000ULL;
        data[12] = 0x00d0000000000000ULL;
        data[13] = 0x00d0000000000000ULL;
        data[14] = 0x00d0000000000000ULL;
        data[15] = 0x00d0000000000000ULL;
        data[32] = 0x005f000000000000ULL;
        data[33] = 0x005e000000000000ULL;
        data[34] = 0x005c000000000000ULL;
        data[35] = 0x005c000000000000ULL;
        data[36] = 0x0058000000000000ULL;
        data[37] = 0x0058000000000000ULL;
        data[38] = 0x0058000000000000ULL;
        data[39] = 0x0058000000000000ULL;
        data[40] = 0x0050000000000000ULL;
        data[41] = 0x0050000000000000ULL;
        data[42] = 0x0050000000000000ULL;
        data[43] = 0x0050000000000000ULL;
        data[44] = 0x0050000000000000ULL;
        data[45] = 0x0050000000000000ULL;
        data[46] = 0x0050000000000000ULL;
        data[47] = 0x0050000000000000ULL;
    }),
    AttackTable(RightShift<49>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0x00bf000000000000ULL;
        data[1] = 0x00be000000000000ULL;
        data[2] = 0x00bc000000000000ULL;
        data[3] = 0x00bc000000000000ULL;
        data[4] = 0x00b8000000000000ULL;
        data[5] = 0x00b8000000000000ULL;
        data[6] = 0x00b8000000000000ULL;
        data[7] = 0x00b8000000000000ULL;
        data[8] = 0x00b0000000000000ULL;
        data[9] = 0x00b0000000000000ULL;
        data[10] = 0x00b0000000000000ULL;
        data[11] = 0x00b0000000000000ULL;
        data[12] = 0x00b0000000000000ULL;
        data[13] = 0x00b0000000000000ULL;
        data[14] = 0x00b0000000000000ULL;
        data[15] = 0x00b0000000000000ULL;
        data[16] = 0x00a0000000000000ULL;
        data[17] = 0x00a0000000000000ULL;
        data[18] = 0x00a0000000000000ULL;
        data[19] = 0x00a0000000000000ULL;
        data[20] = 0x00a0000000000000ULL;
        data[21] = 0x00a0000000000000ULL;
        data[22] = 0x00a0000000000000ULL;
        data[23] = 0x00a0000000000000ULL;
        data[24] = 0x00a0000000000000ULL;
        data[25] = 0x00a0000000000000ULL;
        data[26] = 0x00a0000000000000ULL;
        data[27] = 0x00a0000000000000ULL;
        data[28] = 0x00a0000000000000ULL;
        data[29] = 0x00a0000000000000ULL;
        data[30] = 0x00a0000000000000ULL;
        data[31] = 0x00a0000000000000ULL;
    }),
    AttackTable(RightShift<49>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x007f000000000000ULL;
        data[1] = 0x007e000000000000ULL;
        data[2] = 0x007c000000000000ULL;
        data[3] = 0x007c000000000000ULL;
        data[4] = 0x0078000000000000ULL;
        data[5] = 0x0078000000000000ULL;
        data[6] = 0x0078000000000000ULL;
        data[7] = 0x0078000000000000ULL;
        data[8] = 0x0070000000000000ULL;
        data[9] = 0x0070000000000000ULL;
        data[10] = 0x0070000000000000ULL;
        data[11] = 0x0070000000000000ULL;
        data[12] = 0x0070000000000000ULL;
        data[13] = 0x0070000000000000ULL;
        data[14] = 0x0070000000000000ULL;
        data[15] = 0x0070000000000000ULL;
        data[16] = 0x0060000000000000ULL;
        data[17] = 0x0060000000000000ULL;
        data[18] = 0x0060000000000000ULL;
        data[19] = 0x0060000000000000ULL;
        data[20] = 0x0060000000000000ULL;
        data[21] = 0x0060000000000000ULL;
        data[22] = 0x0060000000000000ULL;
        data[23] = 0x0060000000000000ULL;
        data[24] = 0x0060000000000000ULL;
        data[25] = 0x0060000000000000ULL;
        data[26] = 0x0060000000000000ULL;
        data[27] = 0x0060000000000000ULL;
        data[28] = 0x0060000000000000ULL;
        data[29] = 0x0060000000000000ULL;
        data[30] = 0x0060000000000000ULL;
        data[31] = 0x0060000000000000ULL;
        data[32] = 0x0040000000000000ULL;
        data[33] = 0x0040000000000000ULL;
        data[34] = 0x0040000000000000ULL;
        data[35] = 0x0040000000000000ULL;
        data[36] = 0x0040000000000000ULL;
        data[37] = 0x0040000000000000ULL;
        data[38] = 0x0040000000000000ULL;
        data[39] = 0x0040000000000000ULL;
        data[40] = 0x0040000000000000ULL;
        data[41] = 0x0040000000000000ULL;
        data[42] = 0x0040000000000000ULL;
        data[43] = 0x0040000000000000ULL;
        data[44] = 0x0040000000000000ULL;
        data[45] = 0x0040000000000000ULL;
        data[46] = 0x0040000000000000ULL;
        data[47] = 0x0040000000000000ULL;
        data[48] = 0x0040000000000000ULL;
        data[49] = 0x0040000000000000ULL;
        data[50] = 0x0040000000000000ULL;
        data[51] = 0x0040000000000000ULL;
        data[52] = 0x0040000000000000ULL;
        data[53] = 0x0040000000000000ULL;
        data[54] = 0x0040000000000000ULL;
        data[55] = 0x0040000000000000ULL;
        data[56] = 0x0040000000000000ULL;
        data[57] = 0x0040000000000000ULL;
        data[58] = 0x0040000000000000ULL;
        data[59] = 0x0040000000000000ULL;
        data[60] = 0x0040000000000000ULL;
        data[61] = 0x0040000000000000ULL;
        data[62] = 0x0040000000000000ULL;
        data[63] = 0x0040000000000000ULL;
    }),
    AttackTable(RightShift<57>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0xfe00000000000000ULL;
        data[1] = 0x0200000000000000ULL;
        data[2] = 0x0600000000000000ULL;
        data[3] = 0x0200000000000000ULL;
        data[4] = 0x0e00000000000000ULL;
        data[5] = 0x0200000000000000ULL;
        data[6] = 0x0600000000000000ULL;
        data[7] = 0x0200000000000000ULL;
        data[8] = 0x1e00000000000000ULL;
        data[9] = 0x0200000000000000ULL;
        data[10] = 0x0600000000000000ULL;
        data[11] = 0x0200000000000000ULL;
        data[12] = 0x0e00000000000000ULL;
        data[13] = 0x0200000000000000ULL;
        data[14] = 0x0600000000000000ULL;
        data[15] = 0x0200000000000000ULL;
        data[16] = 0x3e00000000000000ULL;
        data[17] = 0x0200000000000000ULL;
        data[18] = 0x0600000000000000ULL;
        data[19] = 0x0200000000000000ULL;
        data[20] = 0x0e00000000000000ULL;
        data[21] = 0x0200000000000000ULL;
        data[22] = 0x0600000000000000ULL;
        data[23] = 0x0200000000000000ULL;
        data[24] = 0x1e00000000000000ULL;
        data[25] = 0x0200000000000000ULL;
        data[26] = 0x0600000000000000ULL;
        data[27] = 0x0200000000000000ULL;
        data[28] = 0x0e00000000000000ULL;
        data[29] = 0x0200000000000000ULL;
        data[30] = 0x0600000000000000ULL;
        data[31] = 0x0200000000000000ULL;
        data[32] = 0x7e00000000000000ULL;
        data[33] = 0x0200000000000000ULL;
        data[34] = 0x0600000000000000ULL;
        data[35] = 0x0200000000000000ULL;
        data[36] = 0x0e00000000000000ULL;
        data[37] = 0x0200000000000000ULL;
        data[38] = 0x0600000000000000ULL;
        data[39] = 0x0200000000000000ULL;
        data[40] = 0x1e00000000000000ULL;
        data[41] = 0x0200000000000000ULL;
        data[42] = 0x0600000000000000ULL;
        data[43] = 0x0200000000000000ULL;
        data[44] = 0x0e00000000000000ULL;
        data[45] = 0x0200000000000000ULL;
        data[46] = 0x0600000000000000ULL;
        data[47] = 0x0200000000000000ULL;
        data[48] = 0x3e00000000000000ULL;
        data[49] = 0x0200000000000000ULL;
        data[50] = 0x0600000000000000ULL;
        data[51] = 0x0200000000000000ULL;
        data[52] = 0x0e00000000000000ULL;
        data[53] = 0x0200000000000000ULL;
        data[54] = 0x0600000000000000ULL;
        data[55] = 0x0200000000000000ULL;
        data[56] = 0x1e00000000000000ULL;
        data[57] = 0x0200000000000000ULL;
        data[58] = 0x0600000000000000ULL;
        data[59] = 0x0200000000000000ULL;
        data[60] = 0x0e00000000000000ULL;
        data[61] = 0x0200000000000000ULL;
        data[62] = 0x0600000000000000ULL;
        data[63] = 0x0200000000000000ULL;
    }),
    AttackTable(RightShift<58>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0xfd00000000000000ULL;
        data[1] = 0x0500000000000000ULL;
        data[2] = 0x0d00000000000000ULL;
        data[3] = 0x0500000000000000ULL;
        data[4] = 0x1d00000000000000ULL;
        data[5] = 0x0500000000000000ULL;
        data[6] = 0x0d00000000000000ULL;
        data[7] = 0x0500000000000000ULL;
        data[8] = 0x3d00000000000000ULL;
        data[9] = 0x0500000000000000ULL;
        data[10] = 0x0d00000000000000ULL;
        data[11] = 0x0500000000000000ULL;
        data[12] = 0x1d00000000000000ULL;
        data[13] = 0x0500000000000000ULL;
        data[14] = 0x0d00000000000000ULL;
        data[15] = 0x0500000000000000ULL;
        data[16] = 0x7d00000000000000ULL;
        data[17] = 0x0500000000000000ULL;
        data[18] = 0x0d00000000000000ULL;
        data[19] = 0x0500000000000000ULL;
        data[20] = 0x1d00000000000000ULL;
        data[21] = 0x0500000000000000ULL;
        data[22] = 0x0d00000000000000ULL;
        data[23] = 0x0500000000000000ULL;
        data[24] = 0x3d00000000000000ULL;
        data[25] = 0x0500000000000000ULL;
        data[26] = 0x0d00000000000000ULL;
        data[27] = 0x0500000000000000ULL;
        data[28] = 0x1d00000000000000ULL;
        data[29] = 0x0500000000000000ULL;
        data[30] = 0x0d00000000000000ULL;
        data[31] = 0x0500000000000000ULL;
    }),
    AttackTable(RightShift<57>::hash, [](std::vector<uint64_t>& data) {
        data.resize(62);
        data[0] = 0xfb00000000000000ULL;
        data[1] = 0xfa00000000000000ULL;
        data[4] = 0x0b00000000000000ULL;
        data[5] = 0x0a00000000000000ULL;
        data[8] = 0x1b00000000000000ULL;
        data[9] = 0x1a00000000000000ULL;
        data[12] = 0x0b00000000000000ULL;
        data[13] = 0x0a00000000000000ULL;
        data[16] = 0x3b00000000000000ULL;
        data[17] = 0x3a00000000000000ULL;
        data[20] = 0x0b00000000000000ULL;
        data[21] = 0x0a00000000000000ULL;
        data[24] = 0x1b00000000000000ULL;
        data[25] = 0x1a00000000000000ULL;
        data[28] = 0x0b00000000000000ULL;
        data[29] = 0x0a00000000000000ULL;
        data[32] = 0x7b00000000000000ULL;
        data[33] = 0x7a00000000000000ULL;
        data[36] = 0x0b00000000000000ULL;
        data[37] = 0x0a00000000000000ULL;
        data[40] = 0x1b00000000000000ULL;
        data[41] = 0x1a00000000000000ULL;
        data[44] = 0x0b00000000000000ULL;
        data[45] = 0x0a00000000000000ULL;
        data[48] = 0x3b00000000000000ULL;
        data[49] = 0x3a00000000000000ULL;
        data[52] = 0x0b00000000000000ULL;
        data[53] = 0x0a00000000000000ULL;
        data[56] = 0x1b00000000000000ULL;
        data[57] = 0x1a00000000000000ULL;
        data[60] = 0x0b00000000000000ULL;
        data[61] = 0x0a00000000000000ULL;
    }),
    AttackTable(RightShift<57>::hash, [](std::vector<uint64_t>& data) {
        data.resize(60);
        data[0] = 0xf700000000000000ULL;
        data[1] = 0xf600000000000000ULL;
        data[2] = 0xf400000000000000ULL;
        data[3] = 0xf400000000000000ULL;
        data[8] = 0x1700000000000000ULL;
        data[9] = 0x1600000000000000ULL;
        data[10] = 0x1400000000000000ULL;
        data[11] = 0x1400000000000000ULL;
        data[16] = 0x3700000000000000ULL;
        data[17] = 0x3600000000000000ULL;
        data[18] = 0x3400000000000000ULL;
        data[19] = 0x3400000000000000ULL;
        data[24] = 0x1700000000000000ULL;
        data[25] = 0x1600000000000000ULL;
        data[26] = 0x1400000000000000ULL;
        data[27] = 0x1400000000000000ULL;
        data[32] = 0x7700000000000000ULL;
        data[33] = 0x7600000000000000ULL;
        data[34] = 0x7400000000000000ULL;
        data[35] = 0x7400000000000000ULL;
        data[40] = 0x1700000000000000ULL;
        data[41] = 0x1600000000000000ULL;
        data[42] = 0x1400000000000000ULL;
        data[43] = 0x1400000000000000ULL;
        data[48] = 0x3700000000000000ULL;
        data[49] = 0x3600000000000000ULL;
        data[50] = 0x3400000000000000ULL;
        data[51] = 0x3400000000000000ULL;
        data[56] = 0x1700000000000000ULL;
        data[57] = 0x1600000000000000ULL;
        data[58] = 0x1400000000000000ULL;
        data[59] = 0x1400000000000000ULL;
    }),
    AttackTable(RightShift<57>::hash, [](std::vector<uint64_t>& data) {
        data.resize(56);
        data[0] = 0xef00000000000000ULL;
        data[1] = 0xee00000000000000ULL;
        data[2] = 0xec00000000000000ULL;
        data[3] = 0xec00000000000000ULL;
        data[4] = 0xe800000000000000ULL;
        data[5] = 0xe800000000000000ULL;
        data[6] = 0xe800000000000000ULL;
        data[7] = 0xe800000000000000ULL;
        data[16] = 0x2f00000000000000ULL;
        data[17] = 0x2e00000000000000ULL;
        data[18] = 0x2c00000000000000ULL;
        data[19] = 0x2c00000000000000ULL;
        data[20] = 0x2800000000000000ULL;
        data[21] = 0x2800000000000000ULL;
        data[22] = 0x2800000000000000ULL;
        data[23] = 0x2800000000000000ULL;
        data[32] = 0x6f00000000000000ULL;
        data[33] = 0x6e00000000000000ULL;
        data[34] = 0x6c00000000000000ULL;
        data[35] = 0x6c00000000000000ULL;
        data[36] = 0x6800000000000000ULL;
        data[37] = 0x6800000000000000ULL;
        data[38] = 0x6800000000000000ULL;
        data[39] = 0x6800000000000000ULL;
        data[48] = 0x2f00000000000000ULL;
        data[49] = 0x2e00000000000000ULL;
        data[50] = 0x2c00000000000000ULL;
        data[51] = 0x2c00000000000000ULL;
        data[52] = 0x2800000000000000ULL;
        data[53] = 0x2800000000000000ULL;
        data[54] = 0x2800000000000000ULL;
        data[55] = 0x2800000000000000ULL;
    }),
    AttackTable(RightShift<57>::hash, [](std::vector<uint64_t>& data) {
        data.resize(48);
        data[0] = 0xdf00000000000000ULL;
        data[1] = 0xde00000000000000ULL;
        data[2] = 0xdc00000000000000ULL;
        data[3] = 0xdc00000000000000ULL;
        data[4] = 0xd800000000000000ULL;
        data[5] = 0xd800000000000000ULL;
        data[6] = 0xd800000000000000ULL;
        data[7] = 0xd800000000000000ULL;
        data[8] = 0xd000000000000000ULL;
        data[9] = 0xd000000000000000ULL;
        data[10] = 0xd000000000000000ULL;
        data[11] = 0xd000000000000000ULL;
        data[12] = 0xd000000000000000ULL;
        data[13] = 0xd000000000000000ULL;
        data[14] = 0xd000000000000000ULL;
        data[15] = 0xd000000000000000ULL;
        data[32] = 0x5f00000000000000ULL;
        data[33] = 0x5e00000000000000ULL;
        data[34] = 0x5c00000000000000ULL;
        data[35] = 0x5c00000000000000ULL;
        data[36] = 0x5800000000000000ULL;
        data[37] = 0x5800000000000000ULL;
        data[38] = 0x5800000000000000ULL;
        data[39] = 0x5800000000000000ULL;
        data[40] = 0x5000000000000000ULL;
        data[41] = 0x5000000000000000ULL;
        data[42] = 0x5000000000000000ULL;
        data[43] = 0x5000000000000000ULL;
        data[44] = 0x5000000000000000ULL;
        data[45] = 0x5000000000000000ULL;
        data[46] = 0x5000000000000000ULL;
        data[47] = 0x5000000000000000ULL;
    }),
    AttackTable(RightShift<57>::hash, [](std::vector<uint64_t>& data) {
        data.resize(32);
        data[0] = 0xbf00000000000000ULL;
        data[1] = 0xbe00000000000000ULL;
        data[2] = 0xbc00000000000000ULL;
        data[3] = 0xbc00000000000000ULL;
        data[4] = 0xb800000000000000ULL;
        data[5] = 0xb800000000000000ULL;
        data[6] = 0xb800000000000000ULL;
        data[7] = 0xb800000000000000ULL;
        data[8] = 0xb000000000000000ULL;
        data[9] = 0xb000000000000000ULL;
        data[10] = 0xb000000000000000ULL;
        data[11] = 0xb000000000000000ULL;
        data[12] = 0xb000000000000000ULL;
        data[13] = 0xb000000000000000ULL;
        data[14] = 0xb000000000000000ULL;
        data[15] = 0xb000000000000000ULL;
        data[16] = 0xa000000000000000ULL;
        data[17] = 0xa000000000000000ULL;
        data[18] = 0xa000000000000000ULL;
        data[19] = 0xa000000000000000ULL;
        data[20] = 0xa000000000000000ULL;
        data[21] = 0xa000000000000000ULL;
        data[22] = 0xa000000000000000ULL;
        data[23] = 0xa000000000000000ULL;
        data[24] = 0xa000000000000000ULL;
        data[25] = 0xa000000000000000ULL;
        data[26] = 0xa000000000000000ULL;
        data[27] = 0xa000000000000000ULL;
        data[28] = 0xa000000000000000ULL;
        data[29] = 0xa000000000000000ULL;
        data[30] = 0xa000000000000000ULL;
        data[31] = 0xa000000000000000ULL;
    }),
    AttackTable(RightShift<57>::hash, [](std::vector<uint64_t>& data) {
        data.resize(64);
        data[0] = 0x7f00000000000000ULL;
        data[1] = 0x7e00000000000000ULL;
        data[2] = 0x7c00000000000000ULL;
        data[3] = 0x7c00000000000000ULL;
        data[4] = 0x7800000000000000ULL;
        data[5] = 0x7800000000000000ULL;
        data[6] = 0x7800000000000000ULL;
        data[7] = 0x7800000000000000ULL;
        data[8] = 0x7000000000000000ULL;
        data[9] = 0x7000000000000000ULL;
        data[10] = 0x7000000000000000ULL;
        data[11] = 0x7000000000000000ULL;
        data[12] = 0x7000000000000000ULL;
        data[13] = 0x7000000000000000ULL;
        data[14] = 0x7000000000000000ULL;
        data[15] = 0x7000000000000000ULL;
        data[16] = 0x6000000000000000ULL;
        data[17] = 0x6000000000000000ULL;
        data[18] = 0x6000000000000000ULL;
        data[19] = 0x6000000000000000ULL;
        data[20] = 0x6000000000000000ULL;
        data[21] = 0x6000000000000000ULL;
        data[22] = 0x6000000000000000ULL;
        data[23] = 0x6000000000000000ULL;
        data[24] = 0x6000000000000000ULL;
        data[25] = 0x6000000000000000ULL;
        data[26] = 0x6000000000000000ULL;
        data[27] = 0x6000000000000000ULL;
        data[28] = 0x6000000000000000ULL;
        data[29] = 0x6000000000000000ULL;
        data[30] = 0x6000000000000000ULL;
        data[31] = 0x6000000000000000ULL;
        data[32] = 0x4000000000000000ULL;
        data[33] = 0x4000000000000000ULL;
        data[34] = 0x4000000000000000ULL;
        data[35] = 0x4000000000000000ULL;
        data[36] = 0x4000000000000000ULL;
        data[37] = 0x4000000000000000ULL;
        data[38] = 0x4000000000000000ULL;
        data[39] = 0x4000000000000000ULL;
        data[40] = 0x4000000000000000ULL;
        data[41] = 0x4000000000000000ULL;
        data[42] = 0x4000000000000000ULL;
        data[43] = 0x4000000000000000ULL;
        data[44] = 0x4000000000000000ULL;
        data[45] = 0x4000000000000000ULL;
        data[46] = 0x4000000000000000ULL;
        data[47] = 0x4000000000000000ULL;
        data[48] = 0x4000000000000000ULL;
        data[49] = 0x4000000000000000ULL;
        data[50] = 0x4000000000000000ULL;
        data[51] = 0x4000000000000000ULL;
        data[52] = 0x4000000000000000ULL;
        data[53] = 0x4000000000000000ULL;
        data[54] = 0x4000000000000000ULL;
        data[55] = 0x4000000000000000ULL;
        data[56] = 0x4000000000000000ULL;
        data[57] = 0x4000000000000000ULL;
        data[58] = 0x4000000000000000ULL;
        data[59] = 0x4000000000000000ULL;
        data[60] = 0x4000000000000000ULL;
        data[61] = 0x4000000000000000ULL;
        data[62] = 0x4000000000000000ULL;
        data[63] = 0x4000000000000000ULL;
    }),
};

static const AttackTable BB_DIAG_ATTACKS[64] = {
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x8040201008040200ULL;
        data[25] = 0x0000000000000200ULL;
        data[26] = 0x0000000000000200ULL;
        data[29] = 0x0000001008040200ULL;
        data[40] = 0x0000000000000200ULL;
        data[55] = 0x0000000000000200ULL;
        data[61] = 0x0000000000040200ULL;
        data[70] = 0x0000000000000200ULL;
        data[71] = 0x0000000000000200ULL;
        data[79] = 0x0000000000000200ULL;
        data[91] = 0x0000000000040200ULL;
        data[92] = 0x0000000000040200ULL;
        data[100] = 0x0000000000000200ULL;
        data[107] = 0x0000000008040200ULL;
        data[110] = 0x0000000000000200ULL;
        data[121] = 0x0000000000040200ULL;
        data[124] = 0x0000000000000200ULL;
        data[136] = 0x0000000008040200ULL;
        data[137] = 0x0000201008040200ULL;
        data[145] = 0x0000000000040200ULL;
        data[155] = 0x0000000000000200ULL;
        data[166] = 0x0000001008040200ULL;
        data[176] = 0x0000000000040200ULL;
        data[178] = 0x0000000000000200ULL;
        data[190] = 0x0000000008040200ULL;
        data[208] = 0x0000000000000200ULL;
        data[217] = 0x0000000000000200ULL;
        data[221] = 0x0000001008040200ULL;
        data[223] = 0x0000000000000200ULL;
        data[244] = 0x0000000000040200ULL;
        data[247] = 0x0000000000000200ULL;
        data[253] = 0x0000000000000200ULL;
        data[262] = 0x0000000000000200ULL;
        data[274] = 0x0000000000040200ULL;
        data[283] = 0x0000000000040200ULL;
        data[289] = 0x0000000008040200ULL;
        data[292] = 0x0000000000000200ULL;
        data[313] = 0x0000000000040200ULL;
        data[315] = 0x0000000000000200ULL;
        data[320] = 0x0040201008040200ULL;
        data[328] = 0x0000000008040200ULL;
        data[346] = 0x0000000000000200ULL;
        data[358] = 0x0000001008040200ULL;
        data[360] = 0x0000000000000200ULL;
        data[370] = 0x0000000000000200ULL;
        data[381] = 0x0000000000040200ULL;
        data[391] = 0x0000000000000200ULL;
        data[399] = 0x0000000000000200ULL;
        data[400] = 0x0000000000000200ULL;
        data[412] = 0x0000000000040200ULL;
        data[415] = 0x0000000000000200ULL;
        data[427] = 0x0000000008040200ULL;
        data[430] = 0x0000000000000200ULL;
        data[436] = 0x0000000000040200ULL;
        data[444] = 0x0000000000000200ULL;
        data[445] = 0x0000000000000200ULL;
        data[457] = 0x0000201008040200ULL;
        data[465] = 0x0000000000040200ULL;
        data[466] = 0x0000000000040200ULL;
        data[475] = 0x0000000000000200ULL;
        data[481] = 0x0000000008040200ULL;
        data[496] = 0x0000000000040200ULL;
        data[507] = 0x0000000000000200ULL;
        data[510] = 0x0000000008040200ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x0080402010080500ULL;
        data[33] = 0x0000000000080500ULL;
        data[38] = 0x0000002010080500ULL;
        data[70] = 0x0000000000000500ULL;
        data[75] = 0x0000000000000500ULL;
        data[109] = 0x0000000000000500ULL;
        data[114] = 0x0000000000000500ULL;
        data[117] = 0x0000000010080500ULL;
        data[133] = 0x0000000000080500ULL;
        data[155] = 0x0000000010080500ULL;
        data[172] = 0x0000000000080500ULL;
        data[192] = 0x0000000000000500ULL;
        data[209] = 0x0000000000000500ULL;
        data[231] = 0x0000000000000500ULL;
        data[247] = 0x0000000000000500ULL;
        data[250] = 0x0000000000080500ULL;
        data[256] = 0x0000402010080500ULL;
        data[289] = 0x0000000000080500ULL;
        data[294] = 0x0000002010080500ULL;
        data[326] = 0x0000000000000500ULL;
        data[331] = 0x0000000000000500ULL;
        data[365] = 0x0000000000000500ULL;
        data[370] = 0x0000000000000500ULL;
        data[373] = 0x0000000010080500ULL;
        data[389] = 0x0000000000080500ULL;
        data[411] = 0x0000000010080500ULL;
        data[428] = 0x0000000000080500ULL;
        data[448] = 0x0000000000000500ULL;
        data[465] = 0x0000000000000500ULL;
        data[487] = 0x0000000000000500ULL;
        data[503] = 0x0000000000000500ULL;
        data[506] = 0x0000000000080500ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(502);
        data[0] = 0x0000804020110a00ULL;
        data[51] = 0x0000000000000a00ULL;
        data[61] = 0x0000000000000a00ULL;
        data[66] = 0x0000000000110a00ULL;
        data[77] = 0x0000004020110a00ULL;
        data[128] = 0x0000000000000a00ULL;
        data[138] = 0x0000000000000a00ULL;
        data[141] = 0x0000000000010a00ULL;
        data[144] = 0x0000000020100a00ULL;
        data[151] = 0x0000000000010a00ULL;
        data[177] = 0x0000000000100a00ULL;
        data[218] = 0x0000000000010a00ULL;
        data[221] = 0x0000000020100a00ULL;
        data[228] = 0x0000000000010a00ULL;
        data[234] = 0x0000000020110a00ULL;
        data[254] = 0x0000000000100a00ULL;
        data[267] = 0x0000000000110a00ULL;
        data[295] = 0x0000000000000a00ULL;
        data[311] = 0x0000000020110a00ULL;
        data[328] = 0x0000000000000a00ULL;
        data[344] = 0x0000000000110a00ULL;
        data[372] = 0x0000000000000a00ULL;
        data[385] = 0x0000000000010a00ULL;
        data[405] = 0x0000000000000a00ULL;
        data[411] = 0x0000000000100a00ULL;
        data[418] = 0x0000000000010a00ULL;
        data[421] = 0x0000804020100a00ULL;
        data[462] = 0x0000000000010a00ULL;
        data[488] = 0x0000000000100a00ULL;
        data[495] = 0x0000000000010a00ULL;
        data[498] = 0x0000004020100a00ULL;
        data[501] = 0x0000000000110a00ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_5_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x0000008041221400ULL;
        data[5] = 0x0000000040201400ULL;
        data[13] = 0x0000000001021400ULL;
        data[65] = 0x0000000000021400ULL;
        data[70] = 0x0000000000001400ULL;
        data[91] = 0x0000000001221400ULL;
        data[97] = 0x0000000000201400ULL;
        data[105] = 0x0000000001021400ULL;
        data[128] = 0x0000000040201400ULL;
        data[157] = 0x0000000000021400ULL;
        data[180] = 0x0000008040201400ULL;
        data[188] = 0x0000000001021400ULL;
        data[194] = 0x0000000000001400ULL;
        data[214] = 0x0000000040221400ULL;
        data[219] = 0x0000000000201400ULL;
        data[272] = 0x0000000000201400ULL;
        data[279] = 0x0000000001021400ULL;
        data[285] = 0x0000000000001400ULL;
        data[303] = 0x0000008040201400ULL;
        data[306] = 0x0000000000221400ULL;
        data[316] = 0x0000000000001400ULL;
        data[337] = 0x0000000041221400ULL;
        data[368] = 0x0000000000001400ULL;
        data[389] = 0x0000008040221400ULL;
        data[394] = 0x0000000000201400ULL;
        data[403] = 0x0000000000021400ULL;
        data[408] = 0x0000000000001400ULL;
        data[428] = 0x0000000001221400ULL;
        data[460] = 0x0000000000001400ULL;
        data[481] = 0x0000000000221400ULL;
        data[491] = 0x0000000000001400ULL;
        data[494] = 0x0000000000021400ULL;
    }),
    AttackTable(RightShift<11>::hash, [](std::vector<uint64_t>& data) {
        data.resize(18566);
        data[0] = 0x0000000182442800ULL;
        data[1] = 0x0000000080402800ULL;
        data[4] = 0x0000000102042800ULL;
        data[5] = 0x0000000000002800ULL;
        data[128] = 0x0000000080442800ULL;
        data[129] = 0x0000000080402800ULL;
        data[132] = 0x0000000000042800ULL;
        data[133] = 0x0000000000002800ULL;
        data[2048] = 0x0000000102442800ULL;
        data[2049] = 0x0000000000402800ULL;
        data[2052] = 0x0000000102042800ULL;
        data[2053] = 0x0000000000002800ULL;
        data[2176] = 0x0000000000442800ULL;
        data[2177] = 0x0000000000402800ULL;
        data[2180] = 0x0000000000042800ULL;
        data[2181] = 0x0000000000002800ULL;
        data[16384] = 0x0000000082442800ULL;
        data[16385] = 0x0000000080402800ULL;
        data[16388] = 0x0000000002042800ULL;
        data[16389] = 0x0000000000002800ULL;
        data[16512] = 0x0000000080442800ULL;
        data[16513] = 0x0000000080402800ULL;
        data[16516] = 0x0000000000042800ULL;
        data[16517] = 0x0000000000002800ULL;
        data[18432] = 0x0000000002442800ULL;
        data[18433] = 0x0000000000402800ULL;
        data[18436] = 0x0000000002042800ULL;
        data[18437] = 0x0000000000002800ULL;
        data[18560] = 0x0000000000442800ULL;
        data[18561] = 0x0000000000402800ULL;
        data[18564] = 0x0000000000042800ULL;
        data[18565] = 0x0000000000002800ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_3_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x0000010204885000ULL;
        data[25] = 0x0000000000085000ULL;
        data[30] = 0x0000000000085000ULL;
        data[38] = 0x0000000204885000ULL;
        data[47] = 0x0000000000885000ULL;
        data[69] = 0x0000000000085000ULL;
        data[86] = 0x0000000000885000ULL;
        data[91] = 0x0000000000885000ULL;
        data[130] = 0x0000000000885000ULL;
        data[135] = 0x0000000000005000ULL;
        data[174] = 0x0000000000005000ULL;
        data[179] = 0x0000000000005000ULL;
        data[197] = 0x0000000000805000ULL;
        data[218] = 0x0000000000005000ULL;
        data[227] = 0x0000000000005000ULL;
        data[235] = 0x0000000000805000ULL;
        data[240] = 0x0000000000805000ULL;
        data[266] = 0x0000000000005000ULL;
        data[271] = 0x0000000000005000ULL;
        data[279] = 0x0000000000805000ULL;
        data[288] = 0x0000000000805000ULL;
        data[309] = 0x0000000000005000ULL;
        data[327] = 0x0000000000805000ULL;
        data[332] = 0x0000000000805000ULL;
        data[370] = 0x0000000000805000ULL;
        data[407] = 0x0000000004085000ULL;
        data[445] = 0x0000000004085000ULL;
        data[450] = 0x0000010204085000ULL;
        data[468] = 0x0000000004885000ULL;
        data[489] = 0x0000000204085000ULL;
        data[498] = 0x0000000000085000ULL;
        data[506] = 0x0000000004885000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_3_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(502);
        data[0] = 0x000102040810a000ULL;
        data[10] = 0x000000000000a000ULL;
        data[40] = 0x000000000810a000ULL;
        data[46] = 0x000000000000a000ULL;
        data[65] = 0x000000000000a000ULL;
        data[77] = 0x000000040810a000ULL;
        data[87] = 0x000000000000a000ULL;
        data[95] = 0x000000000010a000ULL;
        data[97] = 0x000000000000a000ULL;
        data[117] = 0x000000000810a000ULL;
        data[128] = 0x000002040810a000ULL;
        data[142] = 0x000000000000a000ULL;
        data[152] = 0x000000000000a000ULL;
        data[172] = 0x000000000010a000ULL;
        data[174] = 0x000000000000a000ULL;
        data[183] = 0x000000000010a000ULL;
        data[193] = 0x000000000000a000ULL;
        data[205] = 0x000000040810a000ULL;
        data[223] = 0x000000000010a000ULL;
        data[229] = 0x000000000000a000ULL;
        data[260] = 0x000000000010a000ULL;
        data[270] = 0x000000000000a000ULL;
        data[280] = 0x000000000000a000ULL;
        data[300] = 0x000000000010a000ULL;
        data[311] = 0x000000000010a000ULL;
        data[357] = 0x000000000000a000ULL;
        data[388] = 0x000000000010a000ULL;
        data[394] = 0x000000000000a000ULL;
        data[424] = 0x000000000810a000ULL;
        data[471] = 0x000000000000a000ULL;
        data[481] = 0x000000000000a000ULL;
        data[501] = 0x000000000810a000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x0102040810204000ULL;
        data[3] = 0x0000000000004000ULL;
        data[10] = 0x0000000000204000ULL;
        data[13] = 0x0000000000004000ULL;
        data[24] = 0x0000000000004000ULL;
        data[40] = 0x0000000810204000ULL;
        data[43] = 0x0000000000004000ULL;
        data[46] = 0x0000000000204000ULL;
        data[49] = 0x0000000000004000ULL;
        data[65] = 0x0000000000204000ULL;
        data[77] = 0x0000040810204000ULL;
        data[80] = 0x0000000000004000ULL;
        data[87] = 0x0000000000204000ULL;
        data[90] = 0x0000000000004000ULL;
        data[95] = 0x0000000010204000ULL;
        data[97] = 0x0000000000204000ULL;
        data[100] = 0x0000000000004000ULL;
        data[117] = 0x0000000810204000ULL;
        data[120] = 0x0000000000004000ULL;
        data[128] = 0x0002040810204000ULL;
        data[131] = 0x0000000000004000ULL;
        data[142] = 0x0000000000204000ULL;
        data[152] = 0x0000000000204000ULL;
        data[172] = 0x0000000010204000ULL;
        data[174] = 0x0000000000204000ULL;
        data[177] = 0x0000000000004000ULL;
        data[183] = 0x0000000010204000ULL;
        data[193] = 0x0000000000204000ULL;
        data[205] = 0x0000040810204000ULL;
        data[208] = 0x0000000000004000ULL;
        data[213] = 0x0000000000004000ULL;
        data[223] = 0x0000000010204000ULL;
        data[229] = 0x0000000000204000ULL;
        data[244] = 0x0000000000004000ULL;
        data[260] = 0x0000000010204000ULL;
        data[270] = 0x0000000000204000ULL;
        data[280] = 0x0000000000204000ULL;
        data[290] = 0x0000000000004000ULL;
        data[300] = 0x0000000010204000ULL;
        data[301] = 0x0000000000004000ULL;
        data[311] = 0x0000000010204000ULL;
        data[321] = 0x0000000000004000ULL;
        data[331] = 0x0000000000004000ULL;
        data[341] = 0x0000000000004000ULL;
        data[357] = 0x0000000000204000ULL;
        data[372] = 0x0000000000004000ULL;
        data[378] = 0x0000000000004000ULL;
        data[388] = 0x0000000010204000ULL;
        data[394] = 0x0000000000204000ULL;
        data[397] = 0x0000000000004000ULL;
        data[408] = 0x0000000000004000ULL;
        data[418] = 0x0000000000004000ULL;
        data[424] = 0x0000000810204000ULL;
        data[427] = 0x0000000000004000ULL;
        data[429] = 0x0000000000004000ULL;
        data[449] = 0x0000000000004000ULL;
        data[459] = 0x0000000000004000ULL;
        data[471] = 0x0000000000204000ULL;
        data[474] = 0x0000000000004000ULL;
        data[481] = 0x0000000000204000ULL;
        data[484] = 0x0000000000004000ULL;
        data[501] = 0x0000000810204000ULL;
        data[504] = 0x0000000000004000ULL;
        data[506] = 0x0000000000004000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x4020100804020002ULL;
        data[37] = 0x0000000000020002ULL;
        data[54] = 0x0000000000020002ULL;
        data[58] = 0x0000000804020002ULL;
        data[66] = 0x0000000004020002ULL;
        data[115] = 0x0000000000020002ULL;
        data[123] = 0x0000000000020002ULL;
        data[128] = 0x0020100804020002ULL;
        data[144] = 0x0000000004020002ULL;
        data[182] = 0x0000000000020002ULL;
        data[185] = 0x0000000000020002ULL;
        data[205] = 0x0000000804020002ULL;
        data[214] = 0x0000000004020002ULL;
        data[243] = 0x0000000000020002ULL;
        data[251] = 0x0000000000020002ULL;
        data[272] = 0x0000000004020002ULL;
        data[275] = 0x0000100804020002ULL;
        data[291] = 0x0000000000020002ULL;
        data[313] = 0x0000000000020002ULL;
        data[333] = 0x0000000804020002ULL;
        data[342] = 0x0000000004020002ULL;
        data[352] = 0x0000000000020002ULL;
        data[360] = 0x0000000000020002ULL;
        data[381] = 0x0000000004020002ULL;
        data[403] = 0x0000100804020002ULL;
        data[419] = 0x0000000000020002ULL;
        data[421] = 0x0000000000020002ULL;
        data[442] = 0x0000000804020002ULL;
        data[450] = 0x0000000004020002ULL;
        data[480] = 0x0000000000020002ULL;
        data[488] = 0x0000000000020002ULL;
        data[509] = 0x0000000004020002ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x8040201008050005ULL;
        data[33] = 0x0000000008050005ULL;
        data[38] = 0x0000201008050005ULL;
        data[70] = 0x0000000000050005ULL;
        data[75] = 0x0000000000050005ULL;
        data[109] = 0x0000000000050005ULL;
        data[114] = 0x0000000000050005ULL;
        data[117] = 0x0000001008050005ULL;
        data[133] = 0x0000000008050005ULL;
        data[155] = 0x0000001008050005ULL;
        data[172] = 0x0000000008050005ULL;
        data[192] = 0x0000000000050005ULL;
        data[209] = 0x0000000000050005ULL;
        data[231] = 0x0000000000050005ULL;
        data[247] = 0x0000000000050005ULL;
        data[250] = 0x0000000008050005ULL;
        data[256] = 0x0040201008050005ULL;
        data[289] = 0x0000000008050005ULL;
        data[294] = 0x0000201008050005ULL;
        data[326] = 0x0000000000050005ULL;
        data[331] = 0x0000000000050005ULL;
        data[365] = 0x0000000000050005ULL;
        data[370] = 0x0000000000050005ULL;
        data[373] = 0x0000001008050005ULL;
        data[389] = 0x0000000008050005ULL;
        data[411] = 0x0000001008050005ULL;
        data[428] = 0x0000000008050005ULL;
        data[448] = 0x0000000000050005ULL;
        data[465] = 0x0000000000050005ULL;
        data[487] = 0x0000000000050005ULL;
        data[503] = 0x0000000000050005ULL;
        data[506] = 0x0000000008050005ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x00804020110a000aULL;
        data[2] = 0x00000000000a000aULL;
        data[7] = 0x00000020100a000aULL;
        data[33] = 0x00000000010a000aULL;
        data[38] = 0x00000020110a000aULL;
        data[86] = 0x00000000100a000aULL;
        data[103] = 0x00000000000a000aULL;
        data[117] = 0x00000000110a000aULL;
        data[125] = 0x00000000100a000aULL;
        data[133] = 0x00000000010a000aULL;
        data[141] = 0x00000000000a000aULL;
        data[155] = 0x00000000110a000aULL;
        data[172] = 0x00000000010a000aULL;
        data[220] = 0x00000000000a000aULL;
        data[225] = 0x00004020100a000aULL;
        data[250] = 0x00000000010a000aULL;
        data[256] = 0x00004020110a000aULL;
        data[258] = 0x00000000000a000aULL;
        data[263] = 0x00000020100a000aULL;
        data[289] = 0x00000000010a000aULL;
        data[294] = 0x00000020110a000aULL;
        data[342] = 0x00000000100a000aULL;
        data[359] = 0x00000000000a000aULL;
        data[373] = 0x00000000110a000aULL;
        data[381] = 0x00000000100a000aULL;
        data[389] = 0x00000000010a000aULL;
        data[397] = 0x00000000000a000aULL;
        data[411] = 0x00000000110a000aULL;
        data[428] = 0x00000000010a000aULL;
        data[476] = 0x00000000000a000aULL;
        data[481] = 0x00804020100a000aULL;
        data[506] = 0x00000000010a000aULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(502);
        data[0] = 0x0000804122140014ULL;
        data[5] = 0x0000000000140014ULL;
        data[15] = 0x0000004020140014ULL;
        data[27] = 0x0000000020140014ULL;
        data[60] = 0x0000000000140014ULL;
        data[66] = 0x0000000102140014ULL;
        data[77] = 0x0000004122140014ULL;
        data[88] = 0x0000000022140014ULL;
        data[104] = 0x0000000020140014ULL;
        data[122] = 0x0000000002140014ULL;
        data[137] = 0x0000000000140014ULL;
        data[165] = 0x0000000022140014ULL;
        data[173] = 0x0000000020140014ULL;
        data[199] = 0x0000000002140014ULL;
        data[206] = 0x0000000000140014ULL;
        data[234] = 0x0000000122140014ULL;
        data[250] = 0x0000000020140014ULL;
        data[267] = 0x0000000102140014ULL;
        data[283] = 0x0000000000140014ULL;
        data[295] = 0x0000000000140014ULL;
        data[305] = 0x0000804020140014ULL;
        data[311] = 0x0000000122140014ULL;
        data[344] = 0x0000000102140014ULL;
        data[356] = 0x0000000002140014ULL;
        data[366] = 0x0000804022140014ULL;
        data[372] = 0x0000000000140014ULL;
        data[382] = 0x0000004020140014ULL;
        data[433] = 0x0000000002140014ULL;
        data[440] = 0x0000000000140014ULL;
        data[443] = 0x0000004022140014ULL;
        data[450] = 0x0000804020140014ULL;
        data[501] = 0x0000000102140014ULL;
    }),
    AttackTable(RightShift<19>::hash, [](std::vector<uint64_t>& data) {
        data.resize(18566);
        data[0] = 0x0000018244280028ULL;
        data[1] = 0x0000008040280028ULL;
        data[4] = 0x0000010204280028ULL;
        data[5] = 0x0000000000280028ULL;
        data[128] = 0x0000008044280028ULL;
        data[129] = 0x0000008040280028ULL;
        data[132] = 0x0000000004280028ULL;
        data[133] = 0x0000000000280028ULL;
        data[2048] = 0x0000010244280028ULL;
        data[2049] = 0x0000000040280028ULL;
        data[2052] = 0x0000010204280028ULL;
        data[2053] = 0x0000000000280028ULL;
        data[2176] = 0x0000000044280028ULL;
        data[2177] = 0x0000000040280028ULL;
        data[2180] = 0x0000000004280028ULL;
        data[2181] = 0x0000000000280028ULL;
        data[16384] = 0x0000008244280028ULL;
        data[16385] = 0x0000008040280028ULL;
        data[16388] = 0x0000000204280028ULL;
        data[16389] = 0x0000000000280028ULL;
        data[16512] = 0x0000008044280028ULL;
        data[16513] = 0x0000008040280028ULL;
        data[16516] = 0x0000000004280028ULL;
        data[16517] = 0x0000000000280028ULL;
        data[18432] = 0x0000000244280028ULL;
        data[18433] = 0x0000000040280028ULL;
        data[18436] = 0x0000000204280028ULL;
        data[18437] = 0x0000000000280028ULL;
        data[18560] = 0x0000000044280028ULL;
        data[18561] = 0x0000000040280028ULL;
        data[18564] = 0x0000000004280028ULL;
        data[18565] = 0x0000000000280028ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_3_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(502);
        data[0] = 0x0001020488500050ULL;
        data[10] = 0x0000000000500050ULL;
        data[20] = 0x0000000000500050ULL;
        data[40] = 0x0000000088500050ULL;
        data[77] = 0x0000000488500050ULL;
        data[95] = 0x0000000080500050ULL;
        data[97] = 0x0000000000500050ULL;
        data[117] = 0x0000000088500050ULL;
        data[128] = 0x0000020488500050ULL;
        data[133] = 0x0000000008500050ULL;
        data[172] = 0x0000000080500050ULL;
        data[183] = 0x0000000080500050ULL;
        data[205] = 0x0000000488500050ULL;
        data[210] = 0x0000000008500050ULL;
        data[221] = 0x0001020408500050ULL;
        data[223] = 0x0000000080500050ULL;
        data[260] = 0x0000000080500050ULL;
        data[261] = 0x0000000008500050ULL;
        data[298] = 0x0000000408500050ULL;
        data[300] = 0x0000000080500050ULL;
        data[311] = 0x0000000080500050ULL;
        data[317] = 0x0000000000500050ULL;
        data[338] = 0x0000000008500050ULL;
        data[349] = 0x0000020408500050ULL;
        data[388] = 0x0000000080500050ULL;
        data[394] = 0x0000000000500050ULL;
        data[404] = 0x0000000000500050ULL;
        data[424] = 0x0000000088500050ULL;
        data[426] = 0x0000000408500050ULL;
        data[445] = 0x0000000000500050ULL;
        data[481] = 0x0000000000500050ULL;
        data[501] = 0x0000000088500050ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(502);
        data[0] = 0x0102040810a000a0ULL;
        data[10] = 0x0000000000a000a0ULL;
        data[40] = 0x0000000810a000a0ULL;
        data[46] = 0x0000000000a000a0ULL;
        data[65] = 0x0000000000a000a0ULL;
        data[77] = 0x0000040810a000a0ULL;
        data[87] = 0x0000000000a000a0ULL;
        data[95] = 0x0000000010a000a0ULL;
        data[97] = 0x0000000000a000a0ULL;
        data[117] = 0x0000000810a000a0ULL;
        data[128] = 0x0002040810a000a0ULL;
        data[142] = 0x0000000000a000a0ULL;
        data[152] = 0x0000000000a000a0ULL;
        data[172] = 0x0000000010a000a0ULL;
        data[174] = 0x0000000000a000a0ULL;
        data[183] = 0x0000000010a000a0ULL;
        data[193] = 0x0000000000a000a0ULL;
        data[205] = 0x0000040810a000a0ULL;
        data[223] = 0x0000000010a000a0ULL;
        data[229] = 0x0000000000a000a0ULL;
        data[260] = 0x0000000010a000a0ULL;
        data[270] = 0x0000000000a000a0ULL;
        data[280] = 0x0000000000a000a0ULL;
        data[300] = 0x0000000010a000a0ULL;
        data[311] = 0x0000000010a000a0ULL;
        data[357] = 0x0000000000a000a0ULL;
        data[388] = 0x0000000010a000a0ULL;
        data[394] = 0x0000000000a000a0ULL;
        data[424] = 0x0000000810a000a0ULL;
        data[471] = 0x0000000000a000a0ULL;
        data[481] = 0x0000000000a000a0ULL;
        data[501] = 0x0000000810a000a0ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(492);
        data[0] = 0x0204081020400040ULL;
        data[8] = 0x0000000020400040ULL;
        data[20] = 0x0000000000400040ULL;
        data[28] = 0x0000000000400040ULL;
        data[49] = 0x0000000000400040ULL;
        data[81] = 0x0000001020400040ULL;
        data[89] = 0x0000000020400040ULL;
        data[92] = 0x0000000000400040ULL;
        data[110] = 0x0000000020400040ULL;
        data[130] = 0x0000000000400040ULL;
        data[154] = 0x0000081020400040ULL;
        data[174] = 0x0000000000400040ULL;
        data[191] = 0x0000000020400040ULL;
        data[194] = 0x0000000000400040ULL;
        data[203] = 0x0000000000400040ULL;
        data[235] = 0x0000001020400040ULL;
        data[256] = 0x0004081020400040ULL;
        data[264] = 0x0000000020400040ULL;
        data[276] = 0x0000000000400040ULL;
        data[284] = 0x0000000000400040ULL;
        data[305] = 0x0000000000400040ULL;
        data[337] = 0x0000001020400040ULL;
        data[345] = 0x0000000020400040ULL;
        data[348] = 0x0000000000400040ULL;
        data[366] = 0x0000000020400040ULL;
        data[386] = 0x0000000000400040ULL;
        data[410] = 0x0000081020400040ULL;
        data[430] = 0x0000000000400040ULL;
        data[447] = 0x0000000020400040ULL;
        data[450] = 0x0000000000400040ULL;
        data[459] = 0x0000000000400040ULL;
        data[491] = 0x0000001020400040ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x2010080402000204ULL;
        data[25] = 0x0000000002000200ULL;
        data[29] = 0x0000000402000204ULL;
        data[55] = 0x0010080402000200ULL;
        data[63] = 0x0000000002000200ULL;
        data[94] = 0x0000000402000200ULL;
        data[107] = 0x0000000002000204ULL;
        data[136] = 0x0000000002000204ULL;
        data[137] = 0x0000080402000204ULL;
        data[162] = 0x0000000002000200ULL;
        data[166] = 0x0000000402000204ULL;
        data[190] = 0x0000000002000204ULL;
        data[193] = 0x0000080402000200ULL;
        data[217] = 0x0000000002000200ULL;
        data[221] = 0x0000000402000204ULL;
        data[246] = 0x0000000002000200ULL;
        data[247] = 0x2010080402000200ULL;
        data[276] = 0x0000000402000200ULL;
        data[289] = 0x0000000002000204ULL;
        data[320] = 0x0010080402000204ULL;
        data[328] = 0x0000000002000204ULL;
        data[354] = 0x0000000002000200ULL;
        data[358] = 0x0000000402000204ULL;
        data[383] = 0x0000000002000200ULL;
        data[385] = 0x0000080402000200ULL;
        data[414] = 0x0000000402000200ULL;
        data[427] = 0x0000000002000204ULL;
        data[438] = 0x0000000002000200ULL;
        data[457] = 0x0000080402000204ULL;
        data[468] = 0x0000000402000200ULL;
        data[481] = 0x0000000002000204ULL;
        data[510] = 0x0000000002000204ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x4020100805000508ULL;
        data[41] = 0x0000000805000500ULL;
        data[50] = 0x0000000005000500ULL;
        data[58] = 0x0000000805000508ULL;
        data[66] = 0x0000000005000508ULL;
        data[111] = 0x0020100805000500ULL;
        data[127] = 0x0000000005000500ULL;
        data[128] = 0x0020100805000508ULL;
        data[144] = 0x0000000005000508ULL;
        data[189] = 0x0000000805000500ULL;
        data[197] = 0x0000000005000500ULL;
        data[205] = 0x0000000805000508ULL;
        data[214] = 0x0000000005000508ULL;
        data[255] = 0x0000000005000500ULL;
        data[258] = 0x0000100805000500ULL;
        data[272] = 0x0000000005000508ULL;
        data[275] = 0x0000100805000508ULL;
        data[317] = 0x0000000805000500ULL;
        data[325] = 0x0000000005000500ULL;
        data[333] = 0x0000000805000508ULL;
        data[342] = 0x0000000005000508ULL;
        data[364] = 0x0000000005000500ULL;
        data[381] = 0x0000000005000508ULL;
        data[386] = 0x0000100805000500ULL;
        data[403] = 0x0000100805000508ULL;
        data[425] = 0x0000000805000500ULL;
        data[434] = 0x0000000005000500ULL;
        data[442] = 0x0000000805000508ULL;
        data[450] = 0x0000000005000508ULL;
        data[492] = 0x0000000005000500ULL;
        data[495] = 0x4020100805000500ULL;
        data[509] = 0x0000000005000508ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_21_mixin<0x3ff>, [](std::vector<uint64_t>& data) {
        data.resize(1020);
        data[0] = 0x804020110a000a11ULL;
        data[6] = 0x000000010a000a00ULL;
        data[7] = 0x804020100a000a01ULL;
        data[39] = 0x000000000a000a10ULL;
        data[45] = 0x000000110a000a11ULL;
        data[51] = 0x000000010a000a00ULL;
        data[52] = 0x000000100a000a01ULL;
        data[56] = 0x000020110a000a10ULL;
        data[63] = 0x000020100a000a00ULL;
        data[81] = 0x000000000a000a10ULL;
        data[93] = 0x000000010a000a00ULL;
        data[102] = 0x000000110a000a10ULL;
        data[109] = 0x000000100a000a00ULL;
        data[115] = 0x000020110a000a00ULL;
        data[127] = 0x000000000a000a10ULL;
        data[139] = 0x000000010a000a00ULL;
        data[143] = 0x004020110a000a10ULL;
        data[150] = 0x004020100a000a00ULL;
        data[158] = 0x000000000a000a11ULL;
        data[161] = 0x000000110a000a00ULL;
        data[170] = 0x000000010a000a01ULL;
        data[189] = 0x000000110a000a10ULL;
        data[196] = 0x000000100a000a00ULL;
        data[203] = 0x804020110a000a00ULL;
        data[204] = 0x000000000a000a11ULL;
        data[215] = 0x000000010a000a01ULL;
        data[220] = 0x000020110a000a11ULL;
        data[227] = 0x000020100a000a01ULL;
        data[245] = 0x000000000a000a11ULL;
        data[249] = 0x000000110a000a00ULL;
        data[257] = 0x000000010a000a01ULL;
        data[266] = 0x000000110a000a11ULL;
        data[273] = 0x000000100a000a01ULL;
        data[280] = 0x000020110a000a01ULL;
        data[291] = 0x000000000a000a11ULL;
        data[302] = 0x000000000a000a10ULL;
        data[303] = 0x000000010a000a01ULL;
        data[308] = 0x004020110a000a11ULL;
        data[315] = 0x004020100a000a01ULL;
        data[325] = 0x000000110a000a01ULL;
        data[347] = 0x000000000a000a10ULL;
        data[353] = 0x000000110a000a11ULL;
        data[354] = 0x000000010a000a10ULL;
        data[360] = 0x000000100a000a01ULL;
        data[361] = 0x000000000a000a00ULL;
        data[367] = 0x804020110a000a01ULL;
        data[389] = 0x000000000a000a10ULL;
        data[400] = 0x000000010a000a10ULL;
        data[407] = 0x000000000a000a00ULL;
        data[411] = 0x000020100a000a10ULL;
        data[413] = 0x000000110a000a01ULL;
        data[423] = 0x000020110a000a00ULL;
        data[435] = 0x000000000a000a10ULL;
        data[441] = 0x000000010a000a10ULL;
        data[448] = 0x000000000a000a00ULL;
        data[457] = 0x000000100a000a10ULL;
        data[466] = 0x000000000a000a11ULL;
        data[469] = 0x000000110a000a00ULL;
        data[487] = 0x000000010a000a10ULL;
        data[494] = 0x000000000a000a00ULL;
        data[499] = 0x804020100a000a10ULL;
        data[511] = 0x004020110a000a00ULL;
        data[512] = 0x000000000a000a11ULL;
        data[518] = 0x000000010a000a11ULL;
        data[525] = 0x000000000a000a01ULL;
        data[545] = 0x000000100a000a10ULL;
        data[553] = 0x000000000a000a11ULL;
        data[557] = 0x000000110a000a00ULL;
        data[564] = 0x000000010a000a11ULL;
        data[571] = 0x000000000a000a01ULL;
        data[576] = 0x000020100a000a11ULL;
        data[588] = 0x000020110a000a01ULL;
        data[599] = 0x000000000a000a11ULL;
        data[606] = 0x000000010a000a11ULL;
        data[613] = 0x000000000a000a01ULL;
        data[621] = 0x000000100a000a11ULL;
        data[633] = 0x000000110a000a01ULL;
        data[651] = 0x000000010a000a11ULL;
        data[658] = 0x000000000a000a01ULL;
        data[662] = 0x000000010a000a10ULL;
        data[663] = 0x804020100a000a11ULL;
        data[669] = 0x000000000a000a00ULL;
        data[675] = 0x004020110a000a01ULL;
        data[708] = 0x000000010a000a10ULL;
        data[709] = 0x000000100a000a11ULL;
        data[715] = 0x000000000a000a00ULL;
        data[719] = 0x000020100a000a10ULL;
        data[721] = 0x000000110a000a01ULL;
        data[722] = 0x000000010a000a00ULL;
        data[749] = 0x000000010a000a10ULL;
        data[756] = 0x000000000a000a00ULL;
        data[765] = 0x000000100a000a10ULL;
        data[767] = 0x000000010a000a00ULL;
        data[772] = 0x000020110a000a10ULL;
        data[779] = 0x000020100a000a00ULL;
        data[795] = 0x000000010a000a10ULL;
        data[802] = 0x000000000a000a00ULL;
        data[807] = 0x004020100a000a10ULL;
        data[809] = 0x000000010a000a00ULL;
        data[818] = 0x000000110a000a10ULL;
        data[825] = 0x000000100a000a00ULL;
        data[826] = 0x000000010a000a11ULL;
        data[833] = 0x000000000a000a01ULL;
        data[853] = 0x000000100a000a10ULL;
        data[855] = 0x000000010a000a00ULL;
        data[859] = 0x804020110a000a10ULL;
        data[866] = 0x804020100a000a00ULL;
        data[872] = 0x000000010a000a11ULL;
        data[879] = 0x000000000a000a01ULL;
        data[884] = 0x000020100a000a11ULL;
        data[886] = 0x000000010a000a01ULL;
        data[905] = 0x000000110a000a10ULL;
        data[912] = 0x000000100a000a00ULL;
        data[914] = 0x000000010a000a11ULL;
        data[921] = 0x000000000a000a01ULL;
        data[929] = 0x000000100a000a11ULL;
        data[931] = 0x000000010a000a01ULL;
        data[936] = 0x000020110a000a11ULL;
        data[943] = 0x000020100a000a01ULL;
        data[959] = 0x000000010a000a11ULL;
        data[966] = 0x000000000a000a01ULL;
        data[971] = 0x004020100a000a11ULL;
        data[973] = 0x000000010a000a01ULL;
        data[982] = 0x000000110a000a11ULL;
        data[989] = 0x000000100a000a01ULL;
        data[1017] = 0x000000100a000a11ULL;
        data[1018] = 0x000000000a000a10ULL;
        data[1019] = 0x000000010a000a01ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x0080412214001422ULL;
        data[3] = 0x0000002014001422ULL;
        data[12] = 0x0080402014001402ULL;
        data[20] = 0x0000002214001420ULL;
        data[22] = 0x0000010214001400ULL;
        data[23] = 0x0000000214001422ULL;
        data[27] = 0x0000000014001422ULL;
        data[29] = 0x0000402214001400ULL;
        data[32] = 0x0000002014001400ULL;
        data[35] = 0x0000000014001402ULL;
        data[38] = 0x0000012214001422ULL;
        data[41] = 0x0080402014001420ULL;
        data[47] = 0x0000412214001402ULL;
        data[50] = 0x0000002014001402ULL;
        data[61] = 0x0000000214001422ULL;
        data[64] = 0x0000000014001420ULL;
        data[67] = 0x0000002214001400ULL;
        data[70] = 0x0000000214001402ULL;
        data[74] = 0x0000000014001402ULL;
        data[75] = 0x0000412214001420ULL;
        data[79] = 0x0000002014001420ULL;
        data[82] = 0x0000000014001422ULL;
        data[85] = 0x0000012214001402ULL;
        data[88] = 0x0000402014001400ULL;
        data[99] = 0x0000000214001420ULL;
        data[103] = 0x0000000014001420ULL;
        data[109] = 0x0000000214001402ULL;
        data[111] = 0x0000000014001400ULL;
        data[114] = 0x0000012214001420ULL;
        data[117] = 0x0000010214001422ULL;
        data[120] = 0x0000000014001422ULL;
        data[122] = 0x0080412214001400ULL;
        data[126] = 0x0000002014001400ULL;
        data[127] = 0x0000402014001422ULL;
        data[129] = 0x0000000014001402ULL;
        data[137] = 0x0000000214001420ULL;
        data[146] = 0x0000000214001400ULL;
        data[150] = 0x0000000014001400ULL;
        data[155] = 0x0000010214001422ULL;
        data[158] = 0x0000000014001420ULL;
        data[161] = 0x0000012214001400ULL;
        data[162] = 0x0080402214001422ULL;
        data[164] = 0x0000010214001402ULL;
        data[166] = 0x0000002014001422ULL;
        data[167] = 0x0000000014001402ULL;
        data[174] = 0x0080402014001402ULL;
        data[184] = 0x0000000214001400ULL;
        data[192] = 0x0000010214001420ULL;
        data[196] = 0x0000000014001420ULL;
        data[200] = 0x0000002214001422ULL;
        data[202] = 0x0000010214001402ULL;
        data[203] = 0x0080402014001420ULL;
        data[205] = 0x0000000014001400ULL;
        data[209] = 0x0000402214001402ULL;
        data[213] = 0x0000002014001402ULL;
        data[221] = 0x0080402014001422ULL;
        data[231] = 0x0000010214001420ULL;
        data[238] = 0x0000402214001420ULL;
        data[239] = 0x0000010214001400ULL;
        data[241] = 0x0000002014001420ULL;
        data[243] = 0x0000000014001400ULL;
        data[244] = 0x0000000014001422ULL;
        data[247] = 0x0000002214001402ULL;
        data[250] = 0x0000402014001400ULL;
        data[256] = 0x0000412214001422ULL;
        data[259] = 0x0000002014001422ULL;
        data[268] = 0x0000402014001402ULL;
        data[276] = 0x0000002214001420ULL;
        data[278] = 0x0000010214001400ULL;
        data[279] = 0x0000000214001422ULL;
        data[283] = 0x0000000014001422ULL;
        data[285] = 0x0080402214001400ULL;
        data[288] = 0x0000002014001400ULL;
        data[291] = 0x0000000014001402ULL;
        data[294] = 0x0000012214001422ULL;
        data[297] = 0x0000402014001420ULL;
        data[303] = 0x0080412214001402ULL;
        data[306] = 0x0000002014001402ULL;
        data[317] = 0x0000000214001422ULL;
        data[320] = 0x0000000014001420ULL;
        data[323] = 0x0000002214001400ULL;
        data[326] = 0x0000000214001402ULL;
        data[330] = 0x0000000014001402ULL;
        data[331] = 0x0080412214001420ULL;
        data[335] = 0x0000002014001420ULL;
        data[338] = 0x0000000014001422ULL;
        data[341] = 0x0000012214001402ULL;
        data[344] = 0x0080402014001400ULL;
        data[355] = 0x0000000214001420ULL;
        data[359] = 0x0000000014001420ULL;
        data[365] = 0x0000000214001402ULL;
        data[367] = 0x0000000014001400ULL;
        data[370] = 0x0000012214001420ULL;
        data[373] = 0x0000010214001422ULL;
        data[376] = 0x0000000014001422ULL;
        data[378] = 0x0000412214001400ULL;
        data[382] = 0x0000002014001400ULL;
        data[383] = 0x0080402014001422ULL;
        data[385] = 0x0000000014001402ULL;
        data[393] = 0x0000000214001420ULL;
        data[402] = 0x0000000214001400ULL;
        data[406] = 0x0000000014001400ULL;
        data[411] = 0x0000010214001422ULL;
        data[414] = 0x0000000014001420ULL;
        data[417] = 0x0000012214001400ULL;
        data[418] = 0x0000402214001422ULL;
        data[420] = 0x0000010214001402ULL;
        data[422] = 0x0000002014001422ULL;
        data[423] = 0x0000000014001402ULL;
        data[430] = 0x0000402014001402ULL;
        data[440] = 0x0000000214001400ULL;
        data[448] = 0x0000010214001420ULL;
        data[452] = 0x0000000014001420ULL;
        data[456] = 0x0000002214001422ULL;
        data[458] = 0x0000010214001402ULL;
        data[459] = 0x0000402014001420ULL;
        data[461] = 0x0000000014001400ULL;
        data[465] = 0x0080402214001402ULL;
        data[469] = 0x0000002014001402ULL;
        data[477] = 0x0000402014001422ULL;
        data[487] = 0x0000010214001420ULL;
        data[494] = 0x0080402214001420ULL;
        data[495] = 0x0000010214001400ULL;
        data[497] = 0x0000002014001420ULL;
        data[499] = 0x0000000014001400ULL;
        data[500] = 0x0000000014001422ULL;
        data[503] = 0x0000002214001402ULL;
        data[506] = 0x0080402014001400ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x3ff>, [](std::vector<uint64_t>& data) {
        data.resize(1021);
        data[0] = 0x0001824428002844ULL;
        data[1] = 0x0000804028002804ULL;
        data[15] = 0x0000824428002840ULL;
        data[17] = 0x0000804028002800ULL;
        data[25] = 0x0000804028002840ULL;
        data[45] = 0x0000000428002804ULL;
        data[61] = 0x0000000428002800ULL;
        data[66] = 0x0001020428002800ULL;
        data[86] = 0x0000804028002844ULL;
        data[91] = 0x0000804028002844ULL;
        data[107] = 0x0000804028002840ULL;
        data[127] = 0x0000020428002804ULL;
        data[135] = 0x0000000428002844ULL;
        data[137] = 0x0000000028002804ULL;
        data[151] = 0x0000000428002840ULL;
        data[153] = 0x0000000028002800ULL;
        data[156] = 0x0001020428002840ULL;
        data[158] = 0x0000000028002800ULL;
        data[168] = 0x0000004428002800ULL;
        data[210] = 0x0000000428002800ULL;
        data[217] = 0x0000020428002844ULL;
        data[219] = 0x0000000028002804ULL;
        data[227] = 0x0000000028002844ULL;
        data[229] = 0x0000004428002804ULL;
        data[234] = 0x0001024428002804ULL;
        data[243] = 0x0000000028002840ULL;
        data[248] = 0x0000000028002840ULL;
        data[250] = 0x0000024428002800ULL;
        data[258] = 0x0000004428002840ULL;
        data[260] = 0x0000004028002800ULL;
        data[271] = 0x0000000428002804ULL;
        data[276] = 0x0001020428002804ULL;
        data[292] = 0x0000020428002800ULL;
        data[300] = 0x0000000428002840ULL;
        data[301] = 0x0000000028002800ULL;
        data[309] = 0x0000000028002844ULL;
        data[319] = 0x0000004428002844ULL;
        data[321] = 0x0000004028002804ULL;
        data[324] = 0x0001024428002844ULL;
        data[326] = 0x0000004028002804ULL;
        data[340] = 0x0000024428002840ULL;
        data[342] = 0x0000004028002800ULL;
        data[350] = 0x0000004028002840ULL;
        data[361] = 0x0000000428002844ULL;
        data[362] = 0x0000000028002804ULL;
        data[366] = 0x0001020428002844ULL;
        data[368] = 0x0000000028002804ULL;
        data[378] = 0x0000804428002804ULL;
        data[382] = 0x0000020428002840ULL;
        data[384] = 0x0000000028002800ULL;
        data[392] = 0x0000000028002840ULL;
        data[394] = 0x0000804428002800ULL;
        data[399] = 0x0001824428002800ULL;
        data[411] = 0x0000004028002844ULL;
        data[416] = 0x0000004028002844ULL;
        data[432] = 0x0000004028002840ULL;
        data[453] = 0x0000000028002844ULL;
        data[458] = 0x0000000028002844ULL;
        data[460] = 0x0000824428002804ULL;
        data[468] = 0x0000804428002844ULL;
        data[469] = 0x0000804028002804ULL;
        data[474] = 0x0000000028002840ULL;
        data[484] = 0x0000804428002840ULL;
        data[485] = 0x0000804028002800ULL;
        data[489] = 0x0001824428002840ULL;
        data[491] = 0x0000804028002800ULL;
        data[535] = 0x0000000428002800ULL;
        data[550] = 0x0000824428002844ULL;
        data[552] = 0x0000804028002804ULL;
        data[559] = 0x0000804028002844ULL;
        data[575] = 0x0000804028002840ULL;
        data[581] = 0x0000804028002840ULL;
        data[596] = 0x0000000428002804ULL;
        data[601] = 0x0001020428002804ULL;
        data[617] = 0x0000020428002800ULL;
        data[625] = 0x0000000428002840ULL;
        data[626] = 0x0000000028002800ULL;
        data[642] = 0x0000804028002844ULL;
        data[686] = 0x0000000428002844ULL;
        data[687] = 0x0000000028002804ULL;
        data[691] = 0x0001020428002844ULL;
        data[692] = 0x0000000028002804ULL;
        data[702] = 0x0000004428002804ULL;
        data[707] = 0x0000020428002840ULL;
        data[708] = 0x0000000028002800ULL;
        data[716] = 0x0000000028002840ULL;
        data[718] = 0x0000004428002800ULL;
        data[724] = 0x0001024428002800ULL;
        data[744] = 0x0000000428002804ULL;
        data[760] = 0x0000000428002800ULL;
        data[765] = 0x0001020428002800ULL;
        data[777] = 0x0000000028002844ULL;
        data[783] = 0x0000000028002844ULL;
        data[785] = 0x0000024428002804ULL;
        data[793] = 0x0000004428002844ULL;
        data[794] = 0x0000004028002804ULL;
        data[799] = 0x0000000028002840ULL;
        data[809] = 0x0000004428002840ULL;
        data[810] = 0x0000004028002800ULL;
        data[814] = 0x0001024428002840ULL;
        data[815] = 0x0000004028002800ULL;
        data[827] = 0x0000020428002804ULL;
        data[834] = 0x0000000428002844ULL;
        data[836] = 0x0000000028002804ULL;
        data[850] = 0x0000000428002840ULL;
        data[852] = 0x0000000028002800ULL;
        data[856] = 0x0001020428002840ULL;
        data[857] = 0x0000000028002800ULL;
        data[867] = 0x0000804428002800ULL;
        data[875] = 0x0000024428002844ULL;
        data[876] = 0x0000004028002804ULL;
        data[884] = 0x0000004028002844ULL;
        data[900] = 0x0000004028002840ULL;
        data[905] = 0x0000004028002840ULL;
        data[917] = 0x0000020428002844ULL;
        data[918] = 0x0000000028002804ULL;
        data[926] = 0x0000000028002844ULL;
        data[928] = 0x0000804428002804ULL;
        data[933] = 0x0001824428002804ULL;
        data[942] = 0x0000000028002840ULL;
        data[947] = 0x0000000028002840ULL;
        data[949] = 0x0000824428002800ULL;
        data[957] = 0x0000804428002840ULL;
        data[959] = 0x0000804028002800ULL;
        data[966] = 0x0000004028002844ULL;
        data[1008] = 0x0000000028002844ULL;
        data[1018] = 0x0000804428002844ULL;
        data[1020] = 0x0000804028002804ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_17_mixin<0x3ff>, [](std::vector<uint64_t>& data) {
        data.resize(1017);
        data[0] = 0x0102048850005088ULL;
        data[3] = 0x0000008050005000ULL;
        data[6] = 0x0000000050005080ULL;
        data[14] = 0x0000008050005080ULL;
        data[26] = 0x0000000050005080ULL;
        data[30] = 0x0000040850005000ULL;
        data[57] = 0x0000008050005088ULL;
        data[69] = 0x0000000050005088ULL;
        data[73] = 0x0000000850005008ULL;
        data[77] = 0x0000008050005088ULL;
        data[81] = 0x0000048850005008ULL;
        data[93] = 0x0002040850005008ULL;
        data[108] = 0x0000000050005000ULL;
        data[129] = 0x0000008850005000ULL;
        data[132] = 0x0000000850005080ULL;
        data[140] = 0x0000048850005080ULL;
        data[151] = 0x0000000050005008ULL;
        data[152] = 0x0002040850005080ULL;
        data[158] = 0x0000008050005008ULL;
        data[171] = 0x0000000050005008ULL;
        data[183] = 0x0000008850005088ULL;
        data[188] = 0x0000040850005008ULL;
        data[195] = 0x0000000850005088ULL;
        data[203] = 0x0002048850005088ULL;
        data[206] = 0x0000008050005000ULL;
        data[210] = 0x0000000050005080ULL;
        data[217] = 0x0000008050005080ULL;
        data[223] = 0x0000008850005000ULL;
        data[230] = 0x0000000050005080ULL;
        data[235] = 0x0000000850005000ULL;
        data[243] = 0x0102048850005000ULL;
        data[246] = 0x0000040850005080ULL;
        data[260] = 0x0000008050005088ULL;
        data[265] = 0x0000000050005008ULL;
        data[273] = 0x0000000050005088ULL;
        data[281] = 0x0000008050005088ULL;
        data[286] = 0x0000008850005008ULL;
        data[289] = 0x0000000850005088ULL;
        data[297] = 0x0000048850005088ULL;
        data[300] = 0x0000008050005000ULL;
        data[310] = 0x0102040850005088ULL;
        data[313] = 0x0000000050005000ULL;
        data[320] = 0x0000008050005000ULL;
        data[324] = 0x0000000050005080ULL;
        data[345] = 0x0000008850005080ULL;
        data[364] = 0x0000008050005008ULL;
        data[367] = 0x0000000050005088ULL;
        data[375] = 0x0000008050005088ULL;
        data[387] = 0x0000000050005088ULL;
        data[391] = 0x0000040850005008ULL;
        data[422] = 0x0000008050005080ULL;
        data[426] = 0x0000008850005000ULL;
        data[439] = 0x0000000850005000ULL;
        data[446] = 0x0002048850005000ULL;
        data[450] = 0x0000040850005080ULL;
        data[469] = 0x0000000050005008ULL;
        data[490] = 0x0000008850005008ULL;
        data[493] = 0x0000000850005088ULL;
        data[501] = 0x0000048850005088ULL;
        data[504] = 0x0000008050005000ULL;
        data[513] = 0x0002040850005088ULL;
        data[516] = 0x0000000050005000ULL;
        data[524] = 0x0000008050005000ULL;
        data[527] = 0x0000000050005080ULL;
        data[533] = 0x0000000850005000ULL;
        data[541] = 0x0000048850005000ULL;
        data[548] = 0x0000008850005080ULL;
        data[553] = 0x0102040850005000ULL;
        data[567] = 0x0000008050005008ULL;
        data[571] = 0x0000000050005088ULL;
        data[578] = 0x0000008050005088ULL;
        data[584] = 0x0000008850005008ULL;
        data[591] = 0x0000000050005088ULL;
        data[596] = 0x0000000850005008ULL;
        data[604] = 0x0102048850005008ULL;
        data[607] = 0x0000040850005088ULL;
        data[610] = 0x0000000050005000ULL;
        data[618] = 0x0000008050005000ULL;
        data[626] = 0x0000008050005080ULL;
        data[631] = 0x0000000050005000ULL;
        data[643] = 0x0000008850005080ULL;
        data[655] = 0x0000000850005080ULL;
        data[661] = 0x0000008050005008ULL;
        data[663] = 0x0102048850005080ULL;
        data[674] = 0x0000000050005008ULL;
        data[681] = 0x0000008050005008ULL;
        data[685] = 0x0000000050005088ULL;
        data[706] = 0x0000008850005088ULL;
        data[720] = 0x0000008050005080ULL;
        data[733] = 0x0000000050005080ULL;
        data[736] = 0x0000000850005000ULL;
        data[740] = 0x0000008050005080ULL;
        data[744] = 0x0000048850005000ULL;
        data[757] = 0x0002040850005000ULL;
        data[783] = 0x0000008050005088ULL;
        data[787] = 0x0000008850005008ULL;
        data[800] = 0x0000000850005008ULL;
        data[807] = 0x0002048850005008ULL;
        data[811] = 0x0000040850005088ULL;
        data[814] = 0x0000000050005000ULL;
        data[822] = 0x0000008050005000ULL;
        data[834] = 0x0000000050005000ULL;
        data[846] = 0x0000008850005080ULL;
        data[851] = 0x0000040850005000ULL;
        data[858] = 0x0000000850005080ULL;
        data[865] = 0x0000008050005008ULL;
        data[866] = 0x0002048850005080ULL;
        data[877] = 0x0000000050005008ULL;
        data[885] = 0x0000008050005008ULL;
        data[888] = 0x0000000050005088ULL;
        data[894] = 0x0000000850005008ULL;
        data[901] = 0x0000048850005008ULL;
        data[909] = 0x0000008850005088ULL;
        data[914] = 0x0102040850005008ULL;
        data[924] = 0x0000008050005080ULL;
        data[928] = 0x0000000050005000ULL;
        data[936] = 0x0000000050005080ULL;
        data[944] = 0x0000008050005080ULL;
        data[949] = 0x0000008850005000ULL;
        data[953] = 0x0000000850005080ULL;
        data[960] = 0x0000048850005080ULL;
        data[971] = 0x0000000050005008ULL;
        data[973] = 0x0102040850005080ULL;
        data[979] = 0x0000008050005008ULL;
        data[987] = 0x0000008050005088ULL;
        data[991] = 0x0000000050005008ULL;
        data[1003] = 0x0000008850005088ULL;
        data[1016] = 0x0000000850005088ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(512);
        data[0] = 0x02040810a000a010ULL;
        data[8] = 0x00000000a000a010ULL;
        data[20] = 0x00000000a000a000ULL;
        data[63] = 0x00000810a000a000ULL;
        data[81] = 0x00000010a000a010ULL;
        data[89] = 0x00000000a000a010ULL;
        data[101] = 0x00000000a000a000ULL;
        data[110] = 0x00000000a000a010ULL;
        data[145] = 0x00000010a000a000ULL;
        data[154] = 0x00000810a000a010ULL;
        data[165] = 0x00040810a000a000ULL;
        data[174] = 0x00000000a000a000ULL;
        data[191] = 0x00000000a000a010ULL;
        data[235] = 0x00000010a000a010ULL;
        data[247] = 0x00000010a000a000ULL;
        data[255] = 0x00000000a000a000ULL;
        data[256] = 0x00040810a000a010ULL;
        data[264] = 0x00000000a000a010ULL;
        data[276] = 0x00000000a000a000ULL;
        data[319] = 0x00000810a000a000ULL;
        data[337] = 0x00000010a000a010ULL;
        data[345] = 0x00000000a000a010ULL;
        data[357] = 0x00000000a000a000ULL;
        data[366] = 0x00000000a000a010ULL;
        data[401] = 0x00000010a000a000ULL;
        data[410] = 0x00000810a000a010ULL;
        data[421] = 0x02040810a000a000ULL;
        data[430] = 0x00000000a000a000ULL;
        data[447] = 0x00000000a000a010ULL;
        data[491] = 0x00000010a000a010ULL;
        data[503] = 0x00000010a000a000ULL;
        data[511] = 0x00000000a000a000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x0408102040004020ULL;
        data[7] = 0x0000102040004000ULL;
        data[12] = 0x0000000040004000ULL;
        data[43] = 0x0000000040004020ULL;
        data[45] = 0x0000000040004020ULL;
        data[53] = 0x0000000040004000ULL;
        data[138] = 0x0000002040004020ULL;
        data[146] = 0x0000002040004000ULL;
        data[148] = 0x0008102040004000ULL;
        data[179] = 0x0000102040004020ULL;
        data[183] = 0x0000000040004020ULL;
        data[191] = 0x0000000040004000ULL;
        data[194] = 0x0000000040004000ULL;
        data[225] = 0x0000000040004020ULL;
        data[234] = 0x0000002040004020ULL;
        data[242] = 0x0000002040004000ULL;
        data[244] = 0x0408102040004000ULL;
        data[275] = 0x0000102040004020ULL;
        data[279] = 0x0000000040004020ULL;
        data[287] = 0x0000000040004000ULL;
        data[290] = 0x0000000040004000ULL;
        data[321] = 0x0000000040004020ULL;
        data[382] = 0x0000002040004000ULL;
        data[413] = 0x0000002040004020ULL;
        data[416] = 0x0008102040004020ULL;
        data[423] = 0x0000102040004000ULL;
        data[428] = 0x0000000040004000ULL;
        data[459] = 0x0000000040004020ULL;
        data[461] = 0x0000000040004020ULL;
        data[469] = 0x0000000040004000ULL;
        data[478] = 0x0000002040004000ULL;
        data[509] = 0x0000002040004020ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(506);
        data[0] = 0x1008040200020408ULL;
        data[66] = 0x0000000200020400ULL;
        data[72] = 0x0000000200020000ULL;
        data[83] = 0x0000000200020408ULL;
        data[89] = 0x0000000200020000ULL;
        data[121] = 0x0000040200020000ULL;
        data[138] = 0x0000040200020000ULL;
        data[162] = 0x0000000200020400ULL;
        data[163] = 0x0000000200020000ULL;
        data[179] = 0x0000000200020408ULL;
        data[180] = 0x0000000200020000ULL;
        data[212] = 0x0000040200020400ULL;
        data[217] = 0x0000040200020000ULL;
        data[228] = 0x0000040200020408ULL;
        data[234] = 0x0000040200020000ULL;
        data[253] = 0x0000000200020400ULL;
        data[259] = 0x0000000200020000ULL;
        data[270] = 0x0000000200020408ULL;
        data[276] = 0x0000000200020000ULL;
        data[308] = 0x0000040200020400ULL;
        data[309] = 0x0008040200020000ULL;
        data[324] = 0x0000040200020408ULL;
        data[325] = 0x0008040200020000ULL;
        data[349] = 0x0000000200020400ULL;
        data[366] = 0x0000000200020408ULL;
        data[399] = 0x0008040200020400ULL;
        data[405] = 0x1008040200020000ULL;
        data[416] = 0x0008040200020408ULL;
        data[421] = 0x1008040200020000ULL;
        data[488] = 0x0000000200020000ULL;
        data[495] = 0x1008040200020400ULL;
        data[505] = 0x0000000200020000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(508);
        data[0] = 0x2010080500050810ULL;
        data[7] = 0x0000000500050000ULL;
        data[29] = 0x0000000500050810ULL;
        data[41] = 0x0000000500050000ULL;
        data[104] = 0x0000080500050800ULL;
        data[106] = 0x0010080500050000ULL;
        data[133] = 0x0000000500050800ULL;
        data[137] = 0x0000080500050810ULL;
        data[139] = 0x0010080500050000ULL;
        data[145] = 0x0000000500050000ULL;
        data[166] = 0x0000000500050810ULL;
        data[178] = 0x0000000500050000ULL;
        data[187] = 0x0000000500050800ULL;
        data[221] = 0x0000000500050810ULL;
        data[243] = 0x0000080500050000ULL;
        data[277] = 0x0000080500050000ULL;
        data[286] = 0x0010080500050800ULL;
        data[298] = 0x2010080500050000ULL;
        data[320] = 0x0010080500050810ULL;
        data[325] = 0x0000000500050800ULL;
        data[327] = 0x0000000500050000ULL;
        data[331] = 0x2010080500050000ULL;
        data[358] = 0x0000000500050810ULL;
        data[361] = 0x0000000500050000ULL;
        data[424] = 0x0000080500050800ULL;
        data[435] = 0x0000080500050000ULL;
        data[457] = 0x0000080500050810ULL;
        data[465] = 0x0000000500050000ULL;
        data[469] = 0x0000080500050000ULL;
        data[478] = 0x2010080500050800ULL;
        data[498] = 0x0000000500050000ULL;
        data[507] = 0x0000000500050800ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_17_mixin<0x3ff>, [](std::vector<uint64_t>& data) {
        data.resize(1024);
        data[0] = 0x4020110a000a1120ULL;
        data[13] = 0x0000000a000a1020ULL;
        data[21] = 0x0000100a000a0000ULL;
        data[31] = 0x4020100a000a0000ULL;
        data[32] = 0x0000010a000a1120ULL;
        data[50] = 0x0000110a000a0100ULL;
        data[60] = 0x0000010a000a1000ULL;
        data[64] = 0x0000000a000a0000ULL;
        data[65] = 0x0000110a000a1020ULL;
        data[68] = 0x0020110a000a0100ULL;
        data[71] = 0x4020100a000a1100ULL;
        data[104] = 0x0000000a000a1100ULL;
        data[110] = 0x0000010a000a0000ULL;
        data[114] = 0x0000000a000a1120ULL;
        data[122] = 0x0000100a000a0100ULL;
        data[128] = 0x0000010a000a0000ULL;
        data[137] = 0x0000100a000a1000ULL;
        data[139] = 0x0020100a000a0100ULL;
        data[147] = 0x4020100a000a1020ULL;
        data[165] = 0x0000000a000a0100ULL;
        data[166] = 0x0000110a000a1120ULL;
        data[180] = 0x0000000a000a1020ULL;
        data[183] = 0x0000000a000a0100ULL;
        data[184] = 0x0020110a000a1120ULL;
        data[198] = 0x0000100a000a0000ULL;
        data[215] = 0x0020100a000a0000ULL;
        data[226] = 0x0000010a000a1000ULL;
        data[229] = 0x0000010a000a0100ULL;
        data[234] = 0x0000110a000a0100ULL;
        data[238] = 0x0000100a000a1100ULL;
        data[244] = 0x0000010a000a1000ULL;
        data[255] = 0x0020100a000a1100ULL;
        data[262] = 0x4020110a000a0000ULL;
        data[281] = 0x0000000a000a1120ULL;
        data[294] = 0x0000010a000a0000ULL;
        data[298] = 0x0000000a000a1120ULL;
        data[305] = 0x0000010a000a0000ULL;
        data[306] = 0x0000100a000a0100ULL;
        data[313] = 0x0000100a000a1020ULL;
        data[316] = 0x4020100a000a0100ULL;
        data[331] = 0x0020100a000a1020ULL;
        data[345] = 0x0000010a000a1100ULL;
        data[349] = 0x0000000a000a0100ULL;
        data[350] = 0x0000110a000a1120ULL;
        data[377] = 0x0000000a000a0000ULL;
        data[378] = 0x4020110a000a1000ULL;
        data[382] = 0x0000100a000a0000ULL;
        data[395] = 0x0000010a000a0100ULL;
        data[410] = 0x0000010a000a1000ULL;
        data[413] = 0x0000010a000a0100ULL;
        data[421] = 0x0000010a000a1020ULL;
        data[422] = 0x0000100a000a1100ULL;
        data[428] = 0x0000110a000a0000ULL;
        data[432] = 0x4020100a000a1120ULL;
        data[446] = 0x0020110a000a0000ULL;
        data[465] = 0x0000000a000a1120ULL;
        data[471] = 0x0000010a000a0000ULL;
        data[483] = 0x0000100a000a0100ULL;
        data[489] = 0x0000010a000a0000ULL;
        data[493] = 0x0000000a000a1000ULL;
        data[497] = 0x0000100a000a1020ULL;
        data[500] = 0x0020100a000a0100ULL;
        data[511] = 0x0000010a000a1100ULL;
        data[529] = 0x0000010a000a1100ULL;
        data[543] = 0x0000000a000a0000ULL;
        data[544] = 0x0000110a000a1000ULL;
        data[547] = 0x4020110a000a0100ULL;
        data[561] = 0x0000000a000a0000ULL;
        data[562] = 0x0020110a000a1000ULL;
        data[579] = 0x0000010a000a0100ULL;
        data[587] = 0x0000010a000a1020ULL;
        data[590] = 0x0000010a000a0100ULL;
        data[598] = 0x0000100a000a1120ULL;
        data[605] = 0x0000010a000a1020ULL;
        data[612] = 0x0000110a000a0000ULL;
        data[616] = 0x0020100a000a1120ULL;
        data[623] = 0x4020110a000a0000ULL;
        data[655] = 0x0000010a000a0000ULL;
        data[659] = 0x0000000a000a1000ULL;
        data[662] = 0x0000000a000a0100ULL;
        data[663] = 0x4020110a000a1100ULL;
        data[667] = 0x0000100a000a0100ULL;
        data[677] = 0x0000000a000a1000ULL;
        data[694] = 0x4020100a000a0000ULL;
        data[695] = 0x0000010a000a1100ULL;
        data[706] = 0x0000010a000a1120ULL;
        data[713] = 0x0000110a000a0100ULL;
        data[727] = 0x0000000a000a0000ULL;
        data[728] = 0x0000110a000a1000ULL;
        data[731] = 0x0020110a000a0100ULL;
        data[738] = 0x0000000a000a0000ULL;
        data[739] = 0x4020110a000a1020ULL;
        data[756] = 0x0000010a000a0100ULL;
        data[771] = 0x0000010a000a1020ULL;
        data[774] = 0x0000010a000a0100ULL;
        data[778] = 0x0000000a000a1100ULL;
        data[782] = 0x0000100a000a1120ULL;
        data[789] = 0x0000110a000a0000ULL;
        data[807] = 0x0020110a000a0000ULL;
        data[810] = 0x4020100a000a1000ULL;
        data[828] = 0x0000000a000a0100ULL;
        data[829] = 0x0000110a000a1100ULL;
        data[843] = 0x0000000a000a1000ULL;
        data[846] = 0x0000000a000a0100ULL;
        data[847] = 0x0020110a000a1100ULL;
        data[853] = 0x0000000a000a1020ULL;
        data[861] = 0x0000100a000a0000ULL;
        data[872] = 0x0000010a000a1120ULL;
        data[878] = 0x0020100a000a0000ULL;
        data[890] = 0x0000010a000a1120ULL;
        data[897] = 0x0000110a000a0100ULL;
        data[904] = 0x0000000a000a0000ULL;
        data[905] = 0x0000110a000a1020ULL;
        data[908] = 0x4020110a000a0100ULL;
        data[922] = 0x0000000a000a0000ULL;
        data[923] = 0x0020110a000a1020ULL;
        data[940] = 0x0000010a000a0100ULL;
        data[944] = 0x0000000a000a1100ULL;
        data[962] = 0x0000000a000a1100ULL;
        data[968] = 0x0000010a000a0000ULL;
        data[973] = 0x0000110a000a0000ULL;
        data[977] = 0x0000100a000a1000ULL;
        data[979] = 0x4020100a000a0100ULL;
        data[994] = 0x0020100a000a1000ULL;
        data[1012] = 0x0000000a000a0100ULL;
        data[1013] = 0x0000110a000a1100ULL;
        data[1020] = 0x0000000a000a1020ULL;
        data[1023] = 0x0000000a000a0100ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_9_mixin<0x1fff>, [](std::vector<uint64_t>& data) {
        data.resize(8189);
        data[0] = 0x8041221400142241ULL;
        data[73] = 0x0000001400142040ULL;
        data[152] = 0x0000021400142000ULL;
        data[158] = 0x8040201400140000ULL;
        data[174] = 0x0000001400142040ULL;
        data[180] = 0x0000001400140200ULL;
        data[184] = 0x0000001400142201ULL;
        data[196] = 0x0000201400142240ULL;
        data[210] = 0x0001021400140000ULL;
        data[221] = 0x0000201400142201ULL;
        data[232] = 0x0000001400140000ULL;
        data[248] = 0x0000221400140000ULL;
        data[251] = 0x0001221400142000ULL;
        data[256] = 0x0000001400140200ULL;
        data[269] = 0x0000201400140000ULL;
        data[275] = 0x8041221400142200ULL;
        data[281] = 0x0000001400140201ULL;
        data[293] = 0x8040201400140200ULL;
        data[297] = 0x8040201400142241ULL;
        data[311] = 0x0001021400140000ULL;
        data[323] = 0x0041221400140000ULL;
        data[346] = 0x0000021400140200ULL;
        data[349] = 0x8040221400140000ULL;
        data[350] = 0x0001021400142241ULL;
        data[387] = 0x0000221400142241ULL;
        data[447] = 0x0000021400140201ULL;
        data[450] = 0x0000001400142000ULL;
        data[508] = 0x0000001400140000ULL;
        data[545] = 0x0000201400140000ULL;
        data[549] = 0x0000201400142000ULL;
        data[573] = 0x8040201400142200ULL;
        data[609] = 0x0000001400140000ULL;
        data[616] = 0x0000021400142040ULL;
        data[621] = 0x0040201400140000ULL;
        data[626] = 0x0001021400142200ULL;
        data[644] = 0x0000001400140200ULL;
        data[646] = 0x8040201400140000ULL;
        data[647] = 0x0000001400142241ULL;
        data[663] = 0x0000221400142200ULL;
        data[674] = 0x0001021400140000ULL;
        data[685] = 0x0000201400142241ULL;
        data[699] = 0x0000021400140000ULL;
        data[711] = 0x0000221400140000ULL;
        data[715] = 0x0001221400142040ULL;
        data[723] = 0x0000021400140200ULL;
        data[726] = 0x0001021400142201ULL;
        data[739] = 0x0041221400142240ULL;
        data[744] = 0x0000001400140201ULL;
        data[764] = 0x8040221400142201ULL;
        data[775] = 0x0001021400140000ULL;
        data[812] = 0x0040221400140000ULL;
        data[822] = 0x0001221400140201ULL;
        data[913] = 0x0000001400142040ULL;
        data[923] = 0x0000001400142200ULL;
        data[960] = 0x0000201400142200ULL;
        data[971] = 0x0000001400140000ULL;
        data[991] = 0x0001221400142000ULL;
        data[996] = 0x0000001400140000ULL;
        data[1009] = 0x0000201400140000ULL;
        data[1012] = 0x0000201400142040ULL;
        data[1020] = 0x0000001400140200ULL;
        data[1024] = 0x0000001400142201ULL;
        data[1036] = 0x0040201400142240ULL;
        data[1050] = 0x0001021400140000ULL;
        data[1061] = 0x8040201400142201ULL;
        data[1072] = 0x0000001400140000ULL;
        data[1088] = 0x0040221400140000ULL;
        data[1089] = 0x0001021400142240ULL;
        data[1091] = 0x0041221400142000ULL;
        data[1109] = 0x0040201400140000ULL;
        data[1114] = 0x0000021400142201ULL;
        data[1119] = 0x0000201400140201ULL;
        data[1126] = 0x0000221400142240ULL;
        data[1162] = 0x0000021400140000ULL;
        data[1186] = 0x0000021400140200ULL;
        data[1190] = 0x0001021400142241ULL;
        data[1227] = 0x0040221400142241ULL;
        data[1285] = 0x0001221400140201ULL;
        data[1288] = 0x0000201400142000ULL;
        data[1348] = 0x0000001400140000ULL;
        data[1385] = 0x0040201400140000ULL;
        data[1386] = 0x0000001400142240ULL;
        data[1389] = 0x0040201400142000ULL;
        data[1412] = 0x0000001400142201ULL;
        data[1424] = 0x0000201400142240ULL;
        data[1438] = 0x0000021400140000ULL;
        data[1442] = 0x0001021400142000ULL;
        data[1454] = 0x0001221400142040ULL;
        data[1460] = 0x0000001400140000ULL;
        data[1466] = 0x0001021400142200ULL;
        data[1479] = 0x0000221400142000ULL;
        data[1484] = 0x0000001400140200ULL;
        data[1487] = 0x0000001400142241ULL;
        data[1503] = 0x0040221400142200ULL;
        data[1514] = 0x0001021400140000ULL;
        data[1525] = 0x0040201400142241ULL;
        data[1539] = 0x0000021400140000ULL;
        data[1551] = 0x8040221400140000ULL;
        data[1555] = 0x8041221400142040ULL;
        data[1561] = 0x0001221400140200ULL;
        data[1577] = 0x0000021400142241ULL;
        data[1583] = 0x0000201400140201ULL;
        data[1662] = 0x8041221400140201ULL;
        data[1735] = 0x0000001400140000ULL;
        data[1739] = 0x0000001400142000ULL;
        data[1752] = 0x0000201400142040ULL;
        data[1763] = 0x0000001400142200ULL;
        data[1777] = 0x0000201400142000ULL;
        data[1800] = 0x0040201400142200ULL;
        data[1811] = 0x0000001400140000ULL;
        data[1831] = 0x8041221400142000ULL;
        data[1836] = 0x0000001400140000ULL;
        data[1849] = 0x8040201400140000ULL;
        data[1852] = 0x8040201400142040ULL;
        data[1853] = 0x0000021400142200ULL;
        data[1858] = 0x0000201400140200ULL;
        data[1875] = 0x0000001400142241ULL;
        data[1901] = 0x0000021400140000ULL;
        data[1905] = 0x0001021400142040ULL;
        data[1929] = 0x0001021400142240ULL;
        data[1942] = 0x0000221400142040ULL;
        data[1954] = 0x0000021400142201ULL;
        data[1959] = 0x8040201400140201ULL;
        data[1966] = 0x8040221400142240ULL;
        data[2002] = 0x0000021400140000ULL;
        data[2012] = 0x0001021400140201ULL;
        data[2024] = 0x0001221400140200ULL;
        data[2049] = 0x0000221400140201ULL;
        data[2125] = 0x0041221400140201ULL;
        data[2128] = 0x8040201400142000ULL;
        data[2151] = 0x0000001400142200ULL;
        data[2181] = 0x0001021400142000ULL;
        data[2199] = 0x0000001400140000ULL;
        data[2203] = 0x0000001400142040ULL;
        data[2218] = 0x0000221400142000ULL;
        data[2226] = 0x0000001400142240ULL;
        data[2240] = 0x0000201400142040ULL;
        data[2252] = 0x0000001400142201ULL;
        data[2264] = 0x8040201400142240ULL;
        data[2278] = 0x0000021400140000ULL;
        data[2282] = 0x0001021400142000ULL;
        data[2294] = 0x0041221400142040ULL;
        data[2300] = 0x0000001400140000ULL;
        data[2310] = 0x0000001400140201ULL;
        data[2316] = 0x0000021400142240ULL;
        data[2319] = 0x8040221400142000ULL;
        data[2322] = 0x0000201400140200ULL;
        data[2347] = 0x0000201400140201ULL;
        data[2377] = 0x0001221400140000ULL;
        data[2401] = 0x0041221400140200ULL;
        data[2417] = 0x0000021400142241ULL;
        data[2423] = 0x0040201400140201ULL;
        data[2475] = 0x0001021400140201ULL;
        data[2478] = 0x0000001400142000ULL;
        data[2513] = 0x0000221400140201ULL;
        data[2516] = 0x0000201400142000ULL;
        data[2575] = 0x0000001400140000ULL;
        data[2579] = 0x0000001400142000ULL;
        data[2592] = 0x0040201400142040ULL;
        data[2614] = 0x0000001400142240ULL;
        data[2617] = 0x8040201400142000ULL;
        data[2644] = 0x0001021400142040ULL;
        data[2669] = 0x0000021400142000ULL;
        data[2675] = 0x0000201400140000ULL;
        data[2681] = 0x0000221400142040ULL;
        data[2693] = 0x0000021400142200ULL;
        data[2698] = 0x0040201400140200ULL;
        data[2715] = 0x0000001400142241ULL;
        data[2741] = 0x0000021400140000ULL;
        data[2745] = 0x0001021400142040ULL;
        data[2751] = 0x0001021400140200ULL;
        data[2773] = 0x0000001400140201ULL;
        data[2782] = 0x0040221400142040ULL;
        data[2788] = 0x0000221400140200ULL;
        data[2792] = 0x0001221400142201ULL;
        data[2810] = 0x0000201400140201ULL;
        data[2840] = 0x0001221400140000ULL;
        data[2852] = 0x0001021400140201ULL;
        data[2864] = 0x8041221400140200ULL;
        data[2889] = 0x0040221400140201ULL;
        data[2942] = 0x0000001400142040ULL;
        data[2967] = 0x0000001400142000ULL;
        data[2979] = 0x0000201400142040ULL;
        data[2991] = 0x0000001400142200ULL;
        data[3021] = 0x0001021400142000ULL;
        data[3039] = 0x0000001400140000ULL;
        data[3043] = 0x0000001400142040ULL;
        data[3049] = 0x0000001400140200ULL;
        data[3058] = 0x0040221400142000ULL;
        data[3080] = 0x0040201400142040ULL;
        data[3086] = 0x0000201400140200ULL;
        data[3090] = 0x0000201400142201ULL;
        data[3116] = 0x0001221400140000ULL;
        data[3133] = 0x0000021400142040ULL;
        data[3138] = 0x0000201400140000ULL;
        data[3150] = 0x0000001400140201ULL;
        data[3156] = 0x0000021400142240ULL;
        data[3162] = 0x8040201400140200ULL;
        data[3187] = 0x0040201400140201ULL;
        data[3214] = 0x0001021400140200ULL;
        data[3217] = 0x8041221400140000ULL;
        data[3239] = 0x0000021400140201ULL;
        data[3252] = 0x0000221400140200ULL;
        data[3256] = 0x0001221400142241ULL;
        data[3315] = 0x0001021400140201ULL;
        data[3318] = 0x0000001400142000ULL;
        data[3353] = 0x8040221400140201ULL;
        data[3356] = 0x0040201400142000ULL;
        data[3408] = 0x0000021400142000ULL;
        data[3414] = 0x0000201400140000ULL;
        data[3430] = 0x0000001400142040ULL;
        data[3454] = 0x0000001400142240ULL;
        data[3484] = 0x0001021400142040ULL;
        data[3509] = 0x0000021400142000ULL;
        data[3512] = 0x0000001400140200ULL;
        data[3515] = 0x8040201400140000ULL;
        data[3521] = 0x8040221400142040ULL;
        data[3531] = 0x0001221400142200ULL;
        data[3537] = 0x0000001400140201ULL;
        data[3549] = 0x0000201400140200ULL;
        data[3553] = 0x0000201400142241ULL;
        data[3567] = 0x0001021400140000ULL;
        data[3579] = 0x0001221400140000ULL;
        data[3591] = 0x0001021400140200ULL;
        data[3605] = 0x0000221400140000ULL;
        data[3613] = 0x0000001400140201ULL;
        data[3628] = 0x8040221400140200ULL;
        data[3632] = 0x8041221400142201ULL;
        data[3650] = 0x8040201400140201ULL;
        data[3680] = 0x0041221400140000ULL;
        data[3703] = 0x0000021400140201ULL;
        data[3706] = 0x0000001400142000ULL;
        data[3782] = 0x0000001400142040ULL;
        data[3807] = 0x0000001400142000ULL;
        data[3819] = 0x8040201400142040ULL;
        data[3829] = 0x0000201400142200ULL;
        data[3865] = 0x0000001400140000ULL;
        data[3872] = 0x0000021400142040ULL;
        data[3877] = 0x0000201400140000ULL;
        data[3889] = 0x0000001400140200ULL;
        data[3902] = 0x0000201400140000ULL;
        data[3926] = 0x8040201400140200ULL;
        data[3930] = 0x8040201400142201ULL;
        data[3956] = 0x0041221400140000ULL;
        data[3973] = 0x0000021400142040ULL;
        data[3978] = 0x0040201400140000ULL;
        data[3979] = 0x0000021400140200ULL;
        data[3982] = 0x0001021400142201ULL;
        data[3995] = 0x0001221400142240ULL;
        data[4000] = 0x0000001400140201ULL;
        data[4020] = 0x0000221400142201ULL;
        data[4031] = 0x0001021400140000ULL;
        data[4054] = 0x0001021400140200ULL;
        data[4068] = 0x0000221400140000ULL;
        data[4079] = 0x0000021400140201ULL;
        data[4092] = 0x0040221400140200ULL;
        data[4096] = 0x0041221400142241ULL;
        data[4169] = 0x0000001400142040ULL;
        data[4248] = 0x0000021400142000ULL;
        data[4254] = 0x0040201400140000ULL;
        data[4270] = 0x0000001400142040ULL;
        data[4276] = 0x0000001400140200ULL;
        data[4280] = 0x0000001400142201ULL;
        data[4292] = 0x0000201400142240ULL;
        data[4306] = 0x0001021400140000ULL;
        data[4317] = 0x0000201400142201ULL;
        data[4328] = 0x0000001400140000ULL;
        data[4344] = 0x0000221400140000ULL;
        data[4347] = 0x0001221400142000ULL;
        data[4352] = 0x0000001400140200ULL;
        data[4365] = 0x0000201400140000ULL;
        data[4371] = 0x0041221400142200ULL;
        data[4377] = 0x0000001400140201ULL;
        data[4389] = 0x0040201400140200ULL;
        data[4393] = 0x0040201400142241ULL;
        data[4407] = 0x0001021400140000ULL;
        data[4419] = 0x8041221400140000ULL;
        data[4442] = 0x0000021400140200ULL;
        data[4445] = 0x0040221400140000ULL;
        data[4446] = 0x0001021400142241ULL;
        data[4483] = 0x0000221400142241ULL;
        data[4543] = 0x0000021400140201ULL;
        data[4546] = 0x0000001400142000ULL;
        data[4604] = 0x0000001400140000ULL;
        data[4641] = 0x0000201400140000ULL;
        data[4645] = 0x0000201400142000ULL;
        data[4669] = 0x0040201400142200ULL;
        data[4705] = 0x0000001400140000ULL;
        data[4712] = 0x0000021400142040ULL;
        data[4717] = 0x8040201400140000ULL;
        data[4722] = 0x0001021400142200ULL;
        data[4740] = 0x0000001400140200ULL;
        data[4742] = 0x0040201400140000ULL;
        data[4743] = 0x0000001400142241ULL;
        data[4759] = 0x0000221400142200ULL;
        data[4770] = 0x0001021400140000ULL;
        data[4781] = 0x0000201400142241ULL;
        data[4795] = 0x0000021400140000ULL;
        data[4807] = 0x0000221400140000ULL;
        data[4811] = 0x0001221400142040ULL;
        data[4819] = 0x0000021400140200ULL;
        data[4822] = 0x0001021400142201ULL;
        data[4835] = 0x8041221400142240ULL;
        data[4840] = 0x0000001400140201ULL;
        data[4860] = 0x0040221400142201ULL;
        data[4871] = 0x0001021400140000ULL;
        data[4908] = 0x8040221400140000ULL;
        data[4918] = 0x0001221400140201ULL;
        data[5009] = 0x0000001400142040ULL;
        data[5019] = 0x0000001400142200ULL;
        data[5056] = 0x0000201400142200ULL;
        data[5067] = 0x0000001400140000ULL;
        data[5087] = 0x0001221400142000ULL;
        data[5092] = 0x0000001400140000ULL;
        data[5105] = 0x0000201400140000ULL;
        data[5108] = 0x0000201400142040ULL;
        data[5116] = 0x0000001400140200ULL;
        data[5120] = 0x0000001400142201ULL;
        data[5132] = 0x8040201400142240ULL;
        data[5146] = 0x0001021400140000ULL;
        data[5157] = 0x0040201400142201ULL;
        data[5168] = 0x0000001400140000ULL;
        data[5184] = 0x8040221400140000ULL;
        data[5185] = 0x0001021400142240ULL;
        data[5187] = 0x8041221400142000ULL;
        data[5205] = 0x8040201400140000ULL;
        data[5210] = 0x0000021400142201ULL;
        data[5215] = 0x0000201400140201ULL;
        data[5222] = 0x0000221400142240ULL;
        data[5258] = 0x0000021400140000ULL;
        data[5282] = 0x0000021400140200ULL;
        data[5286] = 0x0001021400142241ULL;
        data[5323] = 0x8040221400142241ULL;
        data[5381] = 0x0001221400140201ULL;
        data[5384] = 0x0000201400142000ULL;
        data[5444] = 0x0000001400140000ULL;
        data[5481] = 0x8040201400140000ULL;
        data[5482] = 0x0000001400142240ULL;
        data[5485] = 0x8040201400142000ULL;
        data[5508] = 0x0000001400142201ULL;
        data[5520] = 0x0000201400142240ULL;
        data[5534] = 0x0000021400140000ULL;
        data[5538] = 0x0001021400142000ULL;
        data[5550] = 0x0001221400142040ULL;
        data[5556] = 0x0000001400140000ULL;
        data[5562] = 0x0001021400142200ULL;
        data[5575] = 0x0000221400142000ULL;
        data[5580] = 0x0000001400140200ULL;
        data[5583] = 0x0000001400142241ULL;
        data[5599] = 0x8040221400142200ULL;
        data[5610] = 0x0001021400140000ULL;
        data[5621] = 0x8040201400142241ULL;
        data[5635] = 0x0000021400140000ULL;
        data[5647] = 0x0040221400140000ULL;
        data[5651] = 0x0041221400142040ULL;
        data[5657] = 0x0001221400140200ULL;
        data[5673] = 0x0000021400142241ULL;
        data[5679] = 0x0000201400140201ULL;
        data[5758] = 0x0041221400140201ULL;
        data[5831] = 0x0000001400140000ULL;
        data[5835] = 0x0000001400142000ULL;
        data[5848] = 0x0000201400142040ULL;
        data[5859] = 0x0000001400142200ULL;
        data[5873] = 0x0000201400142000ULL;
        data[5896] = 0x8040201400142200ULL;
        data[5907] = 0x0000001400140000ULL;
        data[5927] = 0x0041221400142000ULL;
        data[5932] = 0x0000001400140000ULL;
        data[5945] = 0x0040201400140000ULL;
        data[5948] = 0x0040201400142040ULL;
        data[5949] = 0x0000021400142200ULL;
        data[5954] = 0x0000201400140200ULL;
        data[5971] = 0x0000001400142241ULL;
        data[5997] = 0x0000021400140000ULL;
        data[6001] = 0x0001021400142040ULL;
        data[6025] = 0x0001021400142240ULL;
        data[6038] = 0x0000221400142040ULL;
        data[6050] = 0x0000021400142201ULL;
        data[6055] = 0x0040201400140201ULL;
        data[6062] = 0x0040221400142240ULL;
        data[6098] = 0x0000021400140000ULL;
        data[6108] = 0x0001021400140201ULL;
        data[6120] = 0x0001221400140200ULL;
        data[6145] = 0x0000221400140201ULL;
        data[6221] = 0x8041221400140201ULL;
        data[6224] = 0x0040201400142000ULL;
        data[6247] = 0x0000001400142200ULL;
        data[6277] = 0x0001021400142000ULL;
        data[6295] = 0x0000001400140000ULL;
        data[6299] = 0x0000001400142040ULL;
        data[6314] = 0x0000221400142000ULL;
        data[6322] = 0x0000001400142240ULL;
        data[6336] = 0x0000201400142040ULL;
        data[6348] = 0x0000001400142201ULL;
        data[6360] = 0x0040201400142240ULL;
        data[6374] = 0x0000021400140000ULL;
        data[6378] = 0x0001021400142000ULL;
        data[6390] = 0x8041221400142040ULL;
        data[6396] = 0x0000001400140000ULL;
        data[6406] = 0x0000001400140201ULL;
        data[6412] = 0x0000021400142240ULL;
        data[6415] = 0x0040221400142000ULL;
        data[6418] = 0x0000201400140200ULL;
        data[6443] = 0x0000201400140201ULL;
        data[6473] = 0x0001221400140000ULL;
        data[6497] = 0x8041221400140200ULL;
        data[6513] = 0x0000021400142241ULL;
        data[6519] = 0x8040201400140201ULL;
        data[6571] = 0x0001021400140201ULL;
        data[6574] = 0x0000001400142000ULL;
        data[6609] = 0x0000221400140201ULL;
        data[6612] = 0x0000201400142000ULL;
        data[6671] = 0x0000001400140000ULL;
        data[6675] = 0x0000001400142000ULL;
        data[6688] = 0x8040201400142040ULL;
        data[6710] = 0x0000001400142240ULL;
        data[6713] = 0x0040201400142000ULL;
        data[6740] = 0x0001021400142040ULL;
        data[6765] = 0x0000021400142000ULL;
        data[6771] = 0x0000201400140000ULL;
        data[6777] = 0x0000221400142040ULL;
        data[6789] = 0x0000021400142200ULL;
        data[6794] = 0x8040201400140200ULL;
        data[6811] = 0x0000001400142241ULL;
        data[6837] = 0x0000021400140000ULL;
        data[6841] = 0x0001021400142040ULL;
        data[6847] = 0x0001021400140200ULL;
        data[6869] = 0x0000001400140201ULL;
        data[6878] = 0x8040221400142040ULL;
        data[6884] = 0x0000221400140200ULL;
        data[6888] = 0x0001221400142201ULL;
        data[6906] = 0x0000201400140201ULL;
        data[6936] = 0x0001221400140000ULL;
        data[6948] = 0x0001021400140201ULL;
        data[6960] = 0x0041221400140200ULL;
        data[6985] = 0x8040221400140201ULL;
        data[7038] = 0x0000001400142040ULL;
        data[7063] = 0x0000001400142000ULL;
        data[7075] = 0x0000201400142040ULL;
        data[7087] = 0x0000001400142200ULL;
        data[7117] = 0x0001021400142000ULL;
        data[7135] = 0x0000001400140000ULL;
        data[7139] = 0x0000001400142040ULL;
        data[7145] = 0x0000001400140200ULL;
        data[7154] = 0x8040221400142000ULL;
        data[7176] = 0x8040201400142040ULL;
        data[7182] = 0x0000201400140200ULL;
        data[7186] = 0x0000201400142201ULL;
        data[7212] = 0x0001221400140000ULL;
        data[7229] = 0x0000021400142040ULL;
        data[7234] = 0x0000201400140000ULL;
        data[7246] = 0x0000001400140201ULL;
        data[7252] = 0x0000021400142240ULL;
        data[7258] = 0x0040201400140200ULL;
        data[7283] = 0x8040201400140201ULL;
        data[7310] = 0x0001021400140200ULL;
        data[7313] = 0x0041221400140000ULL;
        data[7335] = 0x0000021400140201ULL;
        data[7348] = 0x0000221400140200ULL;
        data[7352] = 0x0001221400142241ULL;
        data[7411] = 0x0001021400140201ULL;
        data[7414] = 0x0000001400142000ULL;
        data[7449] = 0x0040221400140201ULL;
        data[7452] = 0x8040201400142000ULL;
        data[7504] = 0x0000021400142000ULL;
        data[7510] = 0x0000201400140000ULL;
        data[7526] = 0x0000001400142040ULL;
        data[7550] = 0x0000001400142240ULL;
        data[7580] = 0x0001021400142040ULL;
        data[7605] = 0x0000021400142000ULL;
        data[7608] = 0x0000001400140200ULL;
        data[7611] = 0x0040201400140000ULL;
        data[7617] = 0x0040221400142040ULL;
        data[7627] = 0x0001221400142200ULL;
        data[7633] = 0x0000001400140201ULL;
        data[7645] = 0x0000201400140200ULL;
        data[7649] = 0x0000201400142241ULL;
        data[7663] = 0x0001021400140000ULL;
        data[7675] = 0x0001221400140000ULL;
        data[7687] = 0x0001021400140200ULL;
        data[7701] = 0x0000221400140000ULL;
        data[7709] = 0x0000001400140201ULL;
        data[7724] = 0x0040221400140200ULL;
        data[7728] = 0x0041221400142201ULL;
        data[7746] = 0x0040201400140201ULL;
        data[7776] = 0x8041221400140000ULL;
        data[7799] = 0x0000021400140201ULL;
        data[7802] = 0x0000001400142000ULL;
        data[7878] = 0x0000001400142040ULL;
        data[7903] = 0x0000001400142000ULL;
        data[7915] = 0x0040201400142040ULL;
        data[7925] = 0x0000201400142200ULL;
        data[7961] = 0x0000001400140000ULL;
        data[7968] = 0x0000021400142040ULL;
        data[7973] = 0x0000201400140000ULL;
        data[7985] = 0x0000001400140200ULL;
        data[7998] = 0x0000201400140000ULL;
        data[8022] = 0x0040201400140200ULL;
        data[8026] = 0x0040201400142201ULL;
        data[8052] = 0x8041221400140000ULL;
        data[8069] = 0x0000021400142040ULL;
        data[8074] = 0x8040201400140000ULL;
        data[8075] = 0x0000021400140200ULL;
        data[8078] = 0x0001021400142201ULL;
        data[8091] = 0x0001221400142240ULL;
        data[8096] = 0x0000001400140201ULL;
        data[8116] = 0x0000221400142201ULL;
        data[8127] = 0x0001021400140000ULL;
        data[8150] = 0x0001021400140200ULL;
        data[8164] = 0x0000221400140000ULL;
        data[8175] = 0x0000021400140201ULL;
        data[8188] = 0x8040221400140200ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_7_mixin<0x1fff>, [](std::vector<uint64_t>& data) {
        data.resize(8170);
        data[0] = 0x0182442800284482ULL;
        data[4] = 0x0000002800284402ULL;
        data[12] = 0x0000442800280402ULL;
        data[20] = 0x0080402800280402ULL;
        data[67] = 0x0080402800284080ULL;
        data[101] = 0x0080402800284480ULL;
        data[114] = 0x0000402800280400ULL;
        data[145] = 0x0000402800284402ULL;
        data[166] = 0x0002042800284080ULL;
        data[215] = 0x0102042800280000ULL;
        data[263] = 0x0082442800280000ULL;
        data[267] = 0x0000002800280000ULL;
        data[301] = 0x0080402800284402ULL;
        data[322] = 0x0000042800284080ULL;
        data[356] = 0x0102442800280000ULL;
        data[364] = 0x0080402800280000ULL;
        data[366] = 0x0000042800284000ULL;
        data[390] = 0x0000002800280000ULL;
        data[400] = 0x0002042800284400ULL;
        data[408] = 0x0000402800280000ULL;
        data[443] = 0x0000042800280402ULL;
        data[463] = 0x0000442800284080ULL;
        data[467] = 0x0000002800284000ULL;
        data[489] = 0x0000042800284080ULL;
        data[496] = 0x0082442800280402ULL;
        data[512] = 0x0080442800280000ULL;
        data[523] = 0x0102042800284480ULL;
        data[531] = 0x0000402800280000ULL;
        data[543] = 0x0182442800284000ULL;
        data[544] = 0x0000002800280400ULL;
        data[556] = 0x0000042800284400ULL;
        data[564] = 0x0080402800280000ULL;
        data[575] = 0x0000002800284482ULL;
        data[590] = 0x0000002800284080ULL;
        data[598] = 0x0080402800280400ULL;
        data[620] = 0x0182442800280402ULL;
        data[624] = 0x0000002800280402ULL;
        data[644] = 0x0080402800284000ULL;
        data[679] = 0x0000042800284480ULL;
        data[687] = 0x0080402800280000ULL;
        data[697] = 0x0000442800284400ULL;
        data[721] = 0x0080402800280400ULL;
        data[723] = 0x0000042800284402ULL;
        data[731] = 0x0000002800284482ULL;
        data[765] = 0x0000402800280402ULL;
        data[786] = 0x0002042800280000ULL;
        data[820] = 0x0000442800284480ULL;
        data[824] = 0x0000002800284400ULL;
        data[872] = 0x0000402800284482ULL;
        data[921] = 0x0080402800280402ULL;
        data[942] = 0x0000042800280000ULL;
        data[973] = 0x0002042800284080ULL;
        data[986] = 0x0000042800280000ULL;
        data[1020] = 0x0002042800280400ULL;
        data[1067] = 0x0102042800284000ULL;
        data[1074] = 0x0000002800284080ULL;
        data[1083] = 0x0000442800280000ULL;
        data[1087] = 0x0000002800280000ULL;
        data[1110] = 0x0000042800280000ULL;
        data[1115] = 0x0002442800284080ULL;
        data[1119] = 0x0000002800284000ULL;
        data[1143] = 0x0102042800280400ULL;
        data[1164] = 0x0182442800280000ULL;
        data[1176] = 0x0000042800280400ULL;
        data[1195] = 0x0000002800280402ULL;
        data[1207] = 0x0002042800284402ULL;
        data[1211] = 0x0000002800280000ULL;
        data[1216] = 0x0000402800284080ULL;
        data[1223] = 0x0000042800284000ULL;
        data[1242] = 0x0000002800284080ULL;
        data[1265] = 0x0080402800280000ULL;
        data[1271] = 0x0080442800284080ULL;
        data[1275] = 0x0000002800284000ULL;
        data[1299] = 0x0000042800280400ULL;
        data[1304] = 0x0082442800284480ULL;
        data[1308] = 0x0000002800284400ULL;
        data[1317] = 0x0000442800280400ULL;
        data[1330] = 0x0102042800284482ULL;
        data[1343] = 0x0000042800280402ULL;
        data[1348] = 0x0002442800284402ULL;
        data[1351] = 0x0000002800280402ULL;
        data[1364] = 0x0000442800284000ULL;
        data[1372] = 0x0080402800284080ULL;
        data[1398] = 0x0000002800284080ULL;
        data[1416] = 0x0000402800284000ULL;
        data[1431] = 0x0000002800284480ULL;
        data[1440] = 0x0000442800280400ULL;
        data[1444] = 0x0000002800280400ULL;
        data[1449] = 0x0000402800284400ULL;
        data[1472] = 0x0102442800284482ULL;
        data[1476] = 0x0000002800284402ULL;
        data[1492] = 0x0000402800280402ULL;
        data[1504] = 0x0080442800284402ULL;
        data[1539] = 0x0000402800284080ULL;
        data[1573] = 0x0000402800284480ULL;
        data[1594] = 0x0002042800280000ULL;
        data[1605] = 0x0080402800284400ULL;
        data[1628] = 0x0080442800284482ULL;
        data[1632] = 0x0000002800284402ULL;
        data[1687] = 0x0102042800280000ULL;
        data[1695] = 0x0000002800280000ULL;
        data[1729] = 0x0080402800284480ULL;
        data[1735] = 0x0002442800280000ULL;
        data[1739] = 0x0000002800280000ULL;
        data[1773] = 0x0000402800284402ULL;
        data[1794] = 0x0000042800284080ULL;
        data[1827] = 0x0002042800280402ULL;
        data[1836] = 0x0000402800280000ULL;
        data[1843] = 0x0000042800280000ULL;
        data[1848] = 0x0082442800284000ULL;
        data[1862] = 0x0000002800280000ULL;
        data[1874] = 0x0102042800284000ULL;
        data[1891] = 0x0080442800280000ULL;
        data[1895] = 0x0000002800280000ULL;
        data[1924] = 0x0082442800280400ULL;
        data[1928] = 0x0000002800280400ULL;
        data[1951] = 0x0102042800280402ULL;
        data[1968] = 0x0002442800280402ULL;
        data[1971] = 0x0182442800284080ULL;
        data[1975] = 0x0000002800284000ULL;
        data[1984] = 0x0000442800280000ULL;
        data[1992] = 0x0080402800280000ULL;
        data[2015] = 0x0102442800284000ULL;
        data[2018] = 0x0000002800280000ULL;
        data[2023] = 0x0080402800284080ULL;
        data[2028] = 0x0000042800284400ULL;
        data[2036] = 0x0000402800280000ULL;
        data[2052] = 0x0000002800280400ULL;
        data[2070] = 0x0000402800280400ULL;
        data[2092] = 0x0102442800280402ULL;
        data[2096] = 0x0000002800280402ULL;
        data[2116] = 0x0000402800284000ULL;
        data[2124] = 0x0080442800280402ULL;
        data[2151] = 0x0000042800284480ULL;
        data[2159] = 0x0000402800280000ULL;
        data[2171] = 0x0080442800284000ULL;
        data[2193] = 0x0000402800280400ULL;
        data[2203] = 0x0000002800284482ULL;
        data[2205] = 0x0182442800284400ULL;
        data[2226] = 0x0080402800280400ULL;
        data[2248] = 0x0080442800280402ULL;
        data[2252] = 0x0000002800280402ULL;
        data[2257] = 0x0080402800284402ULL;
        data[2272] = 0x0080402800284000ULL;
        data[2349] = 0x0080402800280400ULL;
        data[2380] = 0x0080402800284482ULL;
        data[2393] = 0x0000402800280402ULL;
        data[2414] = 0x0000042800280000ULL;
        data[2445] = 0x0002042800284080ULL;
        data[2468] = 0x0082442800280000ULL;
        data[2494] = 0x0102042800280000ULL;
        data[2546] = 0x0000002800284080ULL;
        data[2591] = 0x0182442800280000ULL;
        data[2595] = 0x0000002800280000ULL;
        data[2601] = 0x0000042800284080ULL;
        data[2635] = 0x0002042800284480ULL;
        data[2636] = 0x0102442800280000ULL;
        data[2643] = 0x0080402800280000ULL;
        data[2648] = 0x0000042800280400ULL;
        data[2679] = 0x0002042800284402ULL;
        data[2695] = 0x0000042800284000ULL;
        data[2702] = 0x0000002800284080ULL;
        data[2737] = 0x0000402800280000ULL;
        data[2743] = 0x0000442800284080ULL;
        data[2747] = 0x0000002800284000ULL;
        data[2771] = 0x0000042800280400ULL;
        data[2776] = 0x0002442800284480ULL;
        data[2780] = 0x0000002800284400ULL;
        data[2792] = 0x0080442800280000ULL;
        data[2802] = 0x0102042800284482ULL;
        data[2823] = 0x0000002800280402ULL;
        data[2825] = 0x0182442800280400ULL;
        data[2835] = 0x0000042800284402ULL;
        data[2844] = 0x0000402800284080ULL;
        data[2870] = 0x0000002800284080ULL;
        data[2877] = 0x0080402800280402ULL;
        data[2893] = 0x0080402800280000ULL;
        data[2903] = 0x0000002800284480ULL;
        data[2924] = 0x0080402800284000ULL;
        data[2932] = 0x0080442800284480ULL;
        data[2936] = 0x0000002800284400ULL;
        data[2958] = 0x0000042800284482ULL;
        data[2976] = 0x0000442800284402ULL;
        data[3000] = 0x0080402800280402ULL;
        data[3059] = 0x0000002800284480ULL;
        data[3066] = 0x0002042800280000ULL;
        data[3077] = 0x0000402800284400ULL;
        data[3100] = 0x0000442800284482ULL;
        data[3104] = 0x0000002800284402ULL;
        data[3167] = 0x0000002800280000ULL;
        data[3179] = 0x0002042800284000ULL;
        data[3201] = 0x0000402800284480ULL;
        data[3222] = 0x0000042800280000ULL;
        data[3255] = 0x0002042800280400ULL;
        data[3299] = 0x0002042800280402ULL;
        data[3302] = 0x0102042800284080ULL;
        data[3315] = 0x0000042800280000ULL;
        data[3320] = 0x0002442800284000ULL;
        data[3323] = 0x0000002800280000ULL;
        data[3346] = 0x0102042800284000ULL;
        data[3354] = 0x0000002800284080ULL;
        data[3363] = 0x0000442800280000ULL;
        data[3367] = 0x0000002800280000ULL;
        data[3396] = 0x0002442800280400ULL;
        data[3400] = 0x0000002800280400ULL;
        data[3423] = 0x0102042800280402ULL;
        data[3443] = 0x0102442800284080ULL;
        data[3447] = 0x0000002800284000ULL;
        data[3455] = 0x0000042800280402ULL;
        data[3464] = 0x0000402800280000ULL;
        data[3476] = 0x0080442800284000ULL;
        data[3490] = 0x0000002800280000ULL;
        data[3495] = 0x0000402800284080ULL;
        data[3502] = 0x0000042800284000ULL;
        data[3524] = 0x0000002800280400ULL;
        data[3536] = 0x0102042800284400ULL;
        data[3544] = 0x0080402800280000ULL;
        data[3552] = 0x0080442800280400ULL;
        data[3556] = 0x0000002800280400ULL;
        data[3579] = 0x0000042800280402ULL;
        data[3584] = 0x0082442800284482ULL;
        data[3588] = 0x0000002800284402ULL;
        data[3596] = 0x0000442800280402ULL;
        data[3599] = 0x0080442800284080ULL;
        data[3603] = 0x0000002800284000ULL;
        data[3643] = 0x0000442800284000ULL;
        data[3651] = 0x0080402800284080ULL;
        data[3677] = 0x0102442800284400ULL;
        data[3680] = 0x0000002800280400ULL;
        data[3685] = 0x0080402800284480ULL;
        data[3698] = 0x0000402800280400ULL;
        data[3711] = 0x0000002800284482ULL;
        data[3720] = 0x0000442800280402ULL;
        data[3724] = 0x0000002800280402ULL;
        data[3729] = 0x0000402800284402ULL;
        data[3744] = 0x0000402800284000ULL;
        data[3799] = 0x0002042800280000ULL;
        data[3821] = 0x0000402800280400ULL;
        data[3833] = 0x0080442800284400ULL;
        data[3852] = 0x0000402800284482ULL;
        data[3885] = 0x0080402800284402ULL;
        data[3922] = 0x0102042800280000ULL;
        data[3940] = 0x0002442800280000ULL;
        data[3966] = 0x0102042800280000ULL;
        data[3974] = 0x0000002800280000ULL;
        data[4008] = 0x0080402800284482ULL;
        data[4063] = 0x0102442800280000ULL;
        data[4067] = 0x0000002800280000ULL;
        data[4073] = 0x0000042800284080ULL;
        data[4096] = 0x0080442800280000ULL;
        data[4107] = 0x0002042800284480ULL;
        data[4115] = 0x0000402800280000ULL;
        data[4122] = 0x0000042800280000ULL;
        data[4127] = 0x0082442800284000ULL;
        data[4156] = 0x0102042800280400ULL;
        data[4174] = 0x0000002800284080ULL;
        data[4204] = 0x0082442800280402ULL;
        data[4208] = 0x0000002800280402ULL;
        data[4219] = 0x0080442800280000ULL;
        data[4223] = 0x0000002800280000ULL;
        data[4228] = 0x0080402800284000ULL;
        data[4251] = 0x0182442800284080ULL;
        data[4255] = 0x0000002800284000ULL;
        data[4263] = 0x0000042800284480ULL;
        data[4264] = 0x0000442800280000ULL;
        data[4271] = 0x0080402800280000ULL;
        data[4297] = 0x0102442800280400ULL;
        data[4305] = 0x0080402800280400ULL;
        data[4307] = 0x0000042800284402ULL;
        data[4331] = 0x0000002800280402ULL;
        data[4349] = 0x0000402800280402ULL;
        data[4352] = 0x0080402800284080ULL;
        data[4365] = 0x0000402800280000ULL;
        data[4396] = 0x0000402800284000ULL;
        data[4404] = 0x0000442800284480ULL;
        data[4408] = 0x0000002800284400ULL;
        data[4430] = 0x0000042800284482ULL;
        data[4453] = 0x0080442800280400ULL;
        data[4472] = 0x0000402800280402ULL;
        data[4484] = 0x0182442800284402ULL;
        data[4505] = 0x0080402800280402ULL;
        data[4531] = 0x0000002800284480ULL;
        data[4552] = 0x0080402800284000ULL;
        data[4585] = 0x0080402800284400ULL;
        data[4628] = 0x0080402800280402ULL;
        data[4651] = 0x0002042800284000ULL;
        data[4694] = 0x0000042800280000ULL;
        data[4727] = 0x0002042800280400ULL;
        data[4748] = 0x0082442800280000ULL;
        data[4774] = 0x0102042800284080ULL;
        data[4795] = 0x0000002800280000ULL;
        data[4807] = 0x0000042800284000ULL;
        data[4826] = 0x0000002800284080ULL;
        data[4849] = 0x0080402800280000ULL;
        data[4871] = 0x0182442800280000ULL;
        data[4875] = 0x0000002800280000ULL;
        data[4883] = 0x0000042800280400ULL;
        data[4914] = 0x0002042800284482ULL;
        data[4927] = 0x0000042800280402ULL;
        data[4930] = 0x0000042800284080ULL;
        data[4948] = 0x0000442800284000ULL;
        data[4972] = 0x0080402800280000ULL;
        data[4974] = 0x0000042800284000ULL;
        data[4982] = 0x0000002800284080ULL;
        data[5008] = 0x0102042800284400ULL;
        data[5015] = 0x0000002800284480ULL;
        data[5016] = 0x0000402800280000ULL;
        data[5024] = 0x0000442800280400ULL;
        data[5028] = 0x0000002800280400ULL;
        data[5051] = 0x0000042800280402ULL;
        data[5056] = 0x0002442800284482ULL;
        data[5060] = 0x0000002800284402ULL;
        data[5071] = 0x0000442800284080ULL;
        data[5075] = 0x0000002800284000ULL;
        data[5104] = 0x0182442800280402ULL;
        data[5123] = 0x0000402800284080ULL;
        data[5152] = 0x0000002800280400ULL;
        data[5157] = 0x0000402800284480ULL;
        data[5164] = 0x0000042800284400ULL;
        data[5172] = 0x0080402800280000ULL;
        data[5183] = 0x0000002800284482ULL;
        data[5206] = 0x0080402800280400ULL;
        data[5212] = 0x0080442800284482ULL;
        data[5216] = 0x0000002800284402ULL;
        data[5271] = 0x0002042800280000ULL;
        data[5305] = 0x0000442800284400ULL;
        data[5313] = 0x0080402800284480ULL;
        data[5339] = 0x0000002800284482ULL;
        data[5357] = 0x0000402800284402ULL;
        data[5394] = 0x0102042800280000ULL;
        data[5427] = 0x0000042800280000ULL;
        data[5446] = 0x0000002800280000ULL;
        data[5458] = 0x0002042800284000ULL;
        data[5480] = 0x0000402800284482ULL;
        data[5535] = 0x0002042800280402ULL;
        data[5550] = 0x0000042800280000ULL;
        data[5555] = 0x0082442800284080ULL;
        data[5559] = 0x0000002800284000ULL;
        data[5568] = 0x0000442800280000ULL;
        data[5581] = 0x0102042800284080ULL;
        data[5594] = 0x0000042800280000ULL;
        data[5599] = 0x0002442800284000ULL;
        data[5602] = 0x0000002800280000ULL;
        data[5628] = 0x0102042800280400ULL;
        data[5636] = 0x0000002800280400ULL;
        data[5676] = 0x0002442800280402ULL;
        data[5680] = 0x0000002800280402ULL;
        data[5682] = 0x0000002800284080ULL;
        data[5691] = 0x0000442800280000ULL;
        data[5695] = 0x0000002800280000ULL;
        data[5700] = 0x0000402800284000ULL;
        data[5723] = 0x0102442800284080ULL;
        data[5727] = 0x0000002800284000ULL;
        data[5735] = 0x0000042800284480ULL;
        data[5743] = 0x0000402800280000ULL;
        data[5755] = 0x0080442800284000ULL;
        data[5777] = 0x0000402800280400ULL;
        data[5784] = 0x0000042800280400ULL;
        data[5789] = 0x0082442800284400ULL;
        data[5803] = 0x0000002800280402ULL;
        data[5815] = 0x0102042800284402ULL;
        data[5824] = 0x0000402800284080ULL;
        data[5832] = 0x0080442800280402ULL;
        data[5836] = 0x0000002800280402ULL;
        data[5856] = 0x0080402800284000ULL;
        data[5879] = 0x0080442800284080ULL;
        data[5883] = 0x0000002800284000ULL;
        data[5912] = 0x0182442800284480ULL;
        data[5916] = 0x0000002800284400ULL;
        data[5925] = 0x0000442800280400ULL;
        data[5933] = 0x0080402800280400ULL;
        data[5956] = 0x0102442800284402ULL;
        data[5959] = 0x0000002800280402ULL;
        data[5964] = 0x0080402800284482ULL;
        data[5977] = 0x0000402800280402ULL;
        data[5980] = 0x0080402800284080ULL;
        data[6024] = 0x0000402800284000ULL;
        data[6057] = 0x0000402800284400ULL;
        data[6078] = 0x0002042800280000ULL;
        data[6100] = 0x0000402800280402ULL;
        data[6112] = 0x0080442800284402ULL;
        data[6175] = 0x0082442800280000ULL;
        data[6179] = 0x0000002800280000ULL;
        data[6202] = 0x0102042800280000ULL;
        data[6213] = 0x0080402800284400ULL;
        data[6220] = 0x0002442800280000ULL;
        data[6279] = 0x0000042800284000ULL;
        data[6303] = 0x0000002800280000ULL;
        data[6321] = 0x0000402800280000ULL;
        data[6343] = 0x0102442800280000ULL;
        data[6347] = 0x0000002800280000ULL;
        data[6355] = 0x0000042800280400ULL;
        data[6376] = 0x0080442800280000ULL;
        data[6386] = 0x0002042800284482ULL;
        data[6402] = 0x0000042800284080ULL;
        data[6409] = 0x0082442800280400ULL;
        data[6435] = 0x0102042800280402ULL;
        data[6444] = 0x0000402800280000ULL;
        data[6454] = 0x0000002800284080ULL;
        data[6456] = 0x0182442800284000ULL;
        data[6477] = 0x0080402800280000ULL;
        data[6487] = 0x0000002800284480ULL;
        data[6499] = 0x0080442800280000ULL;
        data[6503] = 0x0000002800280000ULL;
        data[6508] = 0x0080402800284000ULL;
        data[6532] = 0x0182442800280400ULL;
        data[6536] = 0x0000002800280400ULL;
        data[6542] = 0x0000042800284482ULL;
        data[6576] = 0x0102442800280402ULL;
        data[6584] = 0x0080402800280402ULL;
        data[6600] = 0x0080402800280000ULL;
        data[6631] = 0x0080402800284080ULL;
        data[6636] = 0x0000042800284400ULL;
        data[6643] = 0x0000002800284480ULL;
        data[6644] = 0x0000402800280000ULL;
        data[6678] = 0x0000402800280400ULL;
        data[6684] = 0x0000442800284482ULL;
        data[6688] = 0x0000002800284402ULL;
        data[6732] = 0x0080442800280402ULL;
        data[6785] = 0x0000402800284480ULL;
        data[6811] = 0x0000002800284482ULL;
        data[6834] = 0x0080402800280400ULL;
        data[6865] = 0x0080402800284402ULL;
        data[6886] = 0x0002042800284080ULL;
        data[6899] = 0x0000042800280000ULL;
        data[6930] = 0x0002042800284000ULL;
        data[7007] = 0x0002042800280402ULL;
        data[7022] = 0x0000042800280000ULL;
        data[7027] = 0x0002442800284080ULL;
        data[7031] = 0x0000002800284000ULL;
        data[7053] = 0x0102042800284080ULL;
        data[7074] = 0x0000002800280000ULL;
        data[7076] = 0x0182442800280000ULL;
        data[7086] = 0x0000042800284000ULL;
        data[7108] = 0x0000002800280400ULL;
        data[7120] = 0x0002042800284400ULL;
        data[7128] = 0x0080402800280000ULL;
        data[7154] = 0x0000002800284080ULL;
        data[7163] = 0x0000042800280402ULL;
        data[7183] = 0x0080442800284080ULL;
        data[7187] = 0x0000002800284000ULL;
        data[7209] = 0x0000042800284080ULL;
        data[7227] = 0x0000442800284000ULL;
        data[7243] = 0x0102042800284480ULL;
        data[7251] = 0x0080402800280000ULL;
        data[7256] = 0x0000042800280400ULL;
        data[7261] = 0x0002442800284400ULL;
        data[7264] = 0x0000002800280400ULL;
        data[7287] = 0x0102042800284402ULL;
        data[7295] = 0x0000002800284482ULL;
        data[7304] = 0x0000442800280402ULL;
        data[7308] = 0x0000002800280402ULL;
        data[7310] = 0x0000002800284080ULL;
        data[7328] = 0x0000402800284000ULL;
        data[7351] = 0x0000442800284080ULL;
        data[7355] = 0x0000002800284000ULL;
        data[7384] = 0x0102442800284480ULL;
        data[7388] = 0x0000002800284400ULL;
        data[7405] = 0x0000402800280400ULL;
        data[7417] = 0x0080442800284400ULL;
        data[7431] = 0x0000002800280402ULL;
        data[7436] = 0x0000402800284482ULL;
        data[7443] = 0x0000042800284402ULL;
        data[7452] = 0x0000402800284080ULL;
        data[7485] = 0x0080402800280402ULL;
        data[7506] = 0x0002042800280000ULL;
        data[7540] = 0x0080442800284480ULL;
        data[7544] = 0x0000002800284400ULL;
        data[7550] = 0x0002042800280000ULL;
        data[7584] = 0x0000442800284402ULL;
        data[7592] = 0x0080402800284482ULL;
        data[7647] = 0x0002442800280000ULL;
        data[7651] = 0x0000002800280000ULL;
        data[7674] = 0x0102042800280000ULL;
        data[7685] = 0x0000402800284400ULL;
        data[7706] = 0x0000042800280000ULL;
        data[7740] = 0x0002042800280400ULL;
        data[7775] = 0x0000002800280000ULL;
        data[7787] = 0x0102042800284000ULL;
        data[7803] = 0x0080442800280000ULL;
        data[7807] = 0x0000002800280000ULL;
        data[7830] = 0x0000042800280000ULL;
        data[7835] = 0x0082442800284080ULL;
        data[7839] = 0x0000002800284000ULL;
        data[7848] = 0x0000442800280000ULL;
        data[7863] = 0x0102042800280400ULL;
        data[7881] = 0x0002442800280400ULL;
        data[7907] = 0x0102042800280402ULL;
        data[7915] = 0x0000002800280402ULL;
        data[7928] = 0x0102442800284000ULL;
        data[7931] = 0x0000002800280000ULL;
        data[7936] = 0x0080402800284080ULL;
        data[7949] = 0x0000402800280000ULL;
        data[7962] = 0x0000002800284080ULL;
        data[7971] = 0x0000442800280000ULL;
        data[7975] = 0x0000002800280000ULL;
        data[7980] = 0x0000402800284000ULL;
        data[8004] = 0x0102442800280400ULL;
        data[8008] = 0x0000002800280400ULL;
        data[8014] = 0x0000042800284482ULL;
        data[8037] = 0x0080442800280400ULL;
        data[8056] = 0x0000402800280402ULL;
        data[8063] = 0x0000042800280402ULL;
        data[8068] = 0x0082442800284402ULL;
        data[8072] = 0x0000402800280000ULL;
        data[8084] = 0x0080442800284000ULL;
        data[8103] = 0x0000402800284080ULL;
        data[8115] = 0x0000002800284480ULL;
        data[8136] = 0x0080402800284000ULL;
        data[8160] = 0x0080442800280400ULL;
        data[8164] = 0x0000002800280400ULL;
        data[8169] = 0x0080402800284400ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x0204885000508804ULL;
        data[4] = 0x0000805000500000ULL;
        data[7] = 0x0004085000500804ULL;
        data[10] = 0x0000005000508000ULL;
        data[20] = 0x0000805000500804ULL;
        data[25] = 0x0000005000508800ULL;
        data[30] = 0x0204085000508000ULL;
        data[32] = 0x0000005000508000ULL;
        data[43] = 0x0000805000508000ULL;
        data[46] = 0x0004085000508800ULL;
        data[48] = 0x0000005000508804ULL;
        data[51] = 0x0000005000500000ULL;
        data[53] = 0x0204085000508000ULL;
        data[55] = 0x0000885000500000ULL;
        data[58] = 0x0000805000508800ULL;
        data[65] = 0x0000805000508000ULL;
        data[66] = 0x0000005000500800ULL;
        data[68] = 0x0004085000508804ULL;
        data[70] = 0x0000885000500800ULL;
        data[73] = 0x0000005000500000ULL;
        data[77] = 0x0000885000500000ULL;
        data[81] = 0x0000805000508804ULL;
        data[88] = 0x0000005000500804ULL;
        data[92] = 0x0000885000500804ULL;
        data[112] = 0x0000005000508000ULL;
        data[116] = 0x0000885000508000ULL;
        data[123] = 0x0000085000500000ULL;
        data[127] = 0x0000005000508800ULL;
        data[131] = 0x0000885000508800ULL;
        data[134] = 0x0000005000508000ULL;
        data[136] = 0x0000805000500000ULL;
        data[138] = 0x0000885000508000ULL;
        data[139] = 0x0000085000500800ULL;
        data[146] = 0x0000085000500000ULL;
        data[150] = 0x0000005000508804ULL;
        data[151] = 0x0000805000500800ULL;
        data[154] = 0x0000885000508804ULL;
        data[157] = 0x0204885000500000ULL;
        data[158] = 0x0000805000500000ULL;
        data[161] = 0x0000085000500804ULL;
        data[172] = 0x0004885000500800ULL;
        data[174] = 0x0000805000500804ULL;
        data[179] = 0x0204885000500000ULL;
        data[184] = 0x0000085000508000ULL;
        data[194] = 0x0004885000500804ULL;
        data[197] = 0x0000805000508000ULL;
        data[200] = 0x0000085000508800ULL;
        data[205] = 0x0000005000500000ULL;
        data[207] = 0x0000085000508000ULL;
        data[212] = 0x0000805000508800ULL;
        data[218] = 0x0204885000508000ULL;
        data[219] = 0x0000805000508000ULL;
        data[220] = 0x0000005000500800ULL;
        data[222] = 0x0000085000508804ULL;
        data[225] = 0x0004085000500000ULL;
        data[227] = 0x0000005000500000ULL;
        data[233] = 0x0004885000508800ULL;
        data[235] = 0x0000805000508804ULL;
        data[238] = 0x0000805000500000ULL;
        data[240] = 0x0204885000508000ULL;
        data[241] = 0x0204085000500800ULL;
        data[242] = 0x0000005000500804ULL;
        data[248] = 0x0004085000500000ULL;
        data[253] = 0x0000805000500800ULL;
        data[256] = 0x0004885000508804ULL;
        data[260] = 0x0000805000500000ULL;
        data[263] = 0x0204085000500804ULL;
        data[266] = 0x0000005000508000ULL;
        data[276] = 0x0000805000500804ULL;
        data[281] = 0x0000005000508800ULL;
        data[286] = 0x0004085000508000ULL;
        data[288] = 0x0000005000508000ULL;
        data[299] = 0x0000805000508000ULL;
        data[302] = 0x0204085000508800ULL;
        data[304] = 0x0000005000508804ULL;
        data[307] = 0x0000005000500000ULL;
        data[309] = 0x0004085000508000ULL;
        data[311] = 0x0000885000500000ULL;
        data[314] = 0x0000805000508800ULL;
        data[321] = 0x0000805000508000ULL;
        data[322] = 0x0000005000500800ULL;
        data[324] = 0x0204085000508804ULL;
        data[326] = 0x0000885000500800ULL;
        data[329] = 0x0000005000500000ULL;
        data[333] = 0x0000885000500000ULL;
        data[337] = 0x0000805000508804ULL;
        data[344] = 0x0000005000500804ULL;
        data[348] = 0x0000885000500804ULL;
        data[368] = 0x0000005000508000ULL;
        data[372] = 0x0000885000508000ULL;
        data[379] = 0x0000085000500000ULL;
        data[383] = 0x0000005000508800ULL;
        data[387] = 0x0000885000508800ULL;
        data[390] = 0x0000005000508000ULL;
        data[392] = 0x0000805000500000ULL;
        data[394] = 0x0000885000508000ULL;
        data[395] = 0x0000085000500800ULL;
        data[402] = 0x0000085000500000ULL;
        data[406] = 0x0000005000508804ULL;
        data[407] = 0x0000805000500800ULL;
        data[410] = 0x0000885000508804ULL;
        data[413] = 0x0004885000500000ULL;
        data[414] = 0x0000805000500000ULL;
        data[417] = 0x0000085000500804ULL;
        data[428] = 0x0204885000500800ULL;
        data[430] = 0x0000805000500804ULL;
        data[435] = 0x0004885000500000ULL;
        data[440] = 0x0000085000508000ULL;
        data[450] = 0x0204885000500804ULL;
        data[453] = 0x0000805000508000ULL;
        data[456] = 0x0000085000508800ULL;
        data[461] = 0x0000005000500000ULL;
        data[463] = 0x0000085000508000ULL;
        data[468] = 0x0000805000508800ULL;
        data[474] = 0x0004885000508000ULL;
        data[475] = 0x0000805000508000ULL;
        data[476] = 0x0000005000500800ULL;
        data[478] = 0x0000085000508804ULL;
        data[481] = 0x0204085000500000ULL;
        data[483] = 0x0000005000500000ULL;
        data[489] = 0x0204885000508800ULL;
        data[491] = 0x0000805000508804ULL;
        data[494] = 0x0000805000500000ULL;
        data[496] = 0x0004885000508000ULL;
        data[497] = 0x0004085000500800ULL;
        data[498] = 0x0000005000500804ULL;
        data[504] = 0x0204085000500000ULL;
        data[509] = 0x0000805000500800ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x040810a000a01008ULL;
        data[24] = 0x000000a000a00000ULL;
        data[27] = 0x040810a000a00000ULL;
        data[71] = 0x000000a000a01000ULL;
        data[91] = 0x000000a000a00000ULL;
        data[94] = 0x040810a000a00000ULL;
        data[112] = 0x000010a000a01000ULL;
        data[138] = 0x000000a000a01008ULL;
        data[165] = 0x000000a000a00000ULL;
        data[167] = 0x000000a000a01000ULL;
        data[179] = 0x000010a000a01008ULL;
        data[206] = 0x000010a000a00000ULL;
        data[208] = 0x000010a000a01000ULL;
        data[232] = 0x000000a000a00000ULL;
        data[234] = 0x000000a000a01008ULL;
        data[261] = 0x000000a000a00000ULL;
        data[273] = 0x000010a000a00000ULL;
        data[275] = 0x000010a000a01008ULL;
        data[302] = 0x000010a000a00000ULL;
        data[328] = 0x000000a000a00000ULL;
        data[346] = 0x000000a000a01000ULL;
        data[349] = 0x000810a000a01000ULL;
        data[369] = 0x000010a000a00000ULL;
        data[413] = 0x000000a000a01008ULL;
        data[416] = 0x000810a000a01008ULL;
        data[440] = 0x000000a000a00000ULL;
        data[442] = 0x000000a000a01000ULL;
        data[443] = 0x000810a000a00000ULL;
        data[445] = 0x040810a000a01000ULL;
        data[507] = 0x000000a000a00000ULL;
        data[509] = 0x000000a000a01008ULL;
        data[510] = 0x000810a000a00000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(509);
        data[0] = 0x0810204000402010ULL;
        data[10] = 0x0000004000400000ULL;
        data[34] = 0x0000204000400000ULL;
        data[38] = 0x0000204000402010ULL;
        data[49] = 0x0000004000400000ULL;
        data[54] = 0x0810204000400000ULL;
        data[93] = 0x0000204000400000ULL;
        data[142] = 0x0000004000402000ULL;
        data[144] = 0x0000004000400000ULL;
        data[181] = 0x0000004000402000ULL;
        data[182] = 0x0000004000400000ULL;
        data[186] = 0x0010204000402000ULL;
        data[188] = 0x0810204000400000ULL;
        data[224] = 0x0000204000402000ULL;
        data[226] = 0x0000204000400000ULL;
        data[276] = 0x0000004000402010ULL;
        data[314] = 0x0000004000402010ULL;
        data[320] = 0x0010204000402010ULL;
        data[330] = 0x0000004000400000ULL;
        data[334] = 0x0000004000402000ULL;
        data[358] = 0x0000204000402010ULL;
        data[369] = 0x0000004000400000ULL;
        data[373] = 0x0000004000402000ULL;
        data[374] = 0x0010204000400000ULL;
        data[378] = 0x0810204000402000ULL;
        data[413] = 0x0000204000400000ULL;
        data[416] = 0x0000204000402000ULL;
        data[464] = 0x0000004000400000ULL;
        data[468] = 0x0000004000402010ULL;
        data[502] = 0x0000004000400000ULL;
        data[506] = 0x0000004000402010ULL;
        data[508] = 0x0010204000400000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x0804020002040810ULL;
        data[27] = 0x0004020002040000ULL;
        data[98] = 0x0000020002000000ULL;
        data[126] = 0x0000020002000000ULL;
        data[128] = 0x0000020002040800ULL;
        data[131] = 0x0000020002000000ULL;
        data[144] = 0x0004020002000000ULL;
        data[156] = 0x0000020002040000ULL;
        data[159] = 0x0000020002000000ULL;
        data[162] = 0x0000020002040810ULL;
        data[174] = 0x0004020002040800ULL;
        data[177] = 0x0004020002000000ULL;
        data[190] = 0x0000020002040000ULL;
        data[208] = 0x0004020002040810ULL;
        data[267] = 0x0804020002000000ULL;
        data[298] = 0x0804020002040000ULL;
        data[301] = 0x0804020002000000ULL;
        data[306] = 0x0000020002000000ULL;
        data[331] = 0x0804020002040000ULL;
        data[336] = 0x0000020002040800ULL;
        data[339] = 0x0000020002000000ULL;
        data[370] = 0x0000020002040810ULL;
        data[430] = 0x0000020002000000ULL;
        data[448] = 0x0804020002000000ULL;
        data[460] = 0x0000020002040000ULL;
        data[463] = 0x0000020002000000ULL;
        data[475] = 0x0004020002000000ULL;
        data[478] = 0x0804020002040800ULL;
        data[481] = 0x0804020002000000ULL;
        data[494] = 0x0000020002040000ULL;
        data[506] = 0x0004020002040000ULL;
        data[509] = 0x0004020002000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x1008050005081020ULL;
        data[23] = 0x1008050005000000ULL;
        data[55] = 0x0008050005080000ULL;
        data[84] = 0x1008050005080000ULL;
        data[90] = 0x1008050005000000ULL;
        data[100] = 0x0000050005000000ULL;
        data[151] = 0x1008050005080000ULL;
        data[161] = 0x0000050005081000ULL;
        data[167] = 0x0000050005000000ULL;
        data[196] = 0x0000050005000000ULL;
        data[228] = 0x0000050005081020ULL;
        data[252] = 0x0000050005000000ULL;
        data[257] = 0x0000050005081000ULL;
        data[263] = 0x0000050005000000ULL;
        data[288] = 0x0008050005000000ULL;
        data[313] = 0x0000050005080000ULL;
        data[319] = 0x0000050005000000ULL;
        data[324] = 0x0000050005081020ULL;
        data[348] = 0x0000050005000000ULL;
        data[349] = 0x0008050005081000ULL;
        data[354] = 0x0008050005000000ULL;
        data[380] = 0x0000050005080000ULL;
        data[384] = 0x1008050005000000ULL;
        data[409] = 0x0000050005080000ULL;
        data[415] = 0x0000050005000000ULL;
        data[416] = 0x0008050005081020ULL;
        data[439] = 0x0008050005000000ULL;
        data[445] = 0x1008050005081000ULL;
        data[450] = 0x1008050005000000ULL;
        data[476] = 0x0000050005080000ULL;
        data[500] = 0x0008050005080000ULL;
        data[506] = 0x0008050005000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_19_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x20110a000a112040ULL;
        data[2] = 0x00110a000a000000ULL;
        data[5] = 0x00010a000a100000ULL;
        data[6] = 0x00010a000a102040ULL;
        data[9] = 0x00000a000a010000ULL;
        data[11] = 0x00000a000a010000ULL;
        data[18] = 0x20100a000a100000ULL;
        data[24] = 0x00010a000a010000ULL;
        data[30] = 0x00100a000a112040ULL;
        data[36] = 0x00000a000a102040ULL;
        data[39] = 0x00010a000a010000ULL;
        data[43] = 0x00110a000a112000ULL;
        data[49] = 0x20110a000a100000ULL;
        data[50] = 0x00010a000a102000ULL;
        data[53] = 0x20100a000a010000ULL;
        data[54] = 0x00000a000a010000ULL;
        data[60] = 0x00000a000a000000ULL;
        data[63] = 0x20100a000a102000ULL;
        data[66] = 0x20110a000a010000ULL;
        data[73] = 0x00010a000a000000ULL;
        data[79] = 0x00100a000a100000ULL;
        data[84] = 0x00010a000a010000ULL;
        data[92] = 0x00110a000a100000ULL;
        data[94] = 0x20110a000a102040ULL;
        data[97] = 0x00100a000a010000ULL;
        data[98] = 0x20100a000a010000ULL;
        data[101] = 0x00000a000a110000ULL;
        data[103] = 0x00000a000a000000ULL;
        data[105] = 0x00000a000a000000ULL;
        data[112] = 0x20110a000a010000ULL;
        data[115] = 0x00010a000a110000ULL;
        data[118] = 0x00010a000a000000ULL;
        data[124] = 0x00100a000a102040ULL;
        data[127] = 0x00110a000a010000ULL;
        data[133] = 0x00010a000a000000ULL;
        data[137] = 0x00110a000a102000ULL;
        data[142] = 0x00100a000a010000ULL;
        data[145] = 0x00000a000a110000ULL;
        data[146] = 0x00000a000a112040ULL;
        data[147] = 0x20100a000a000000ULL;
        data[148] = 0x00000a000a000000ULL;
        data[160] = 0x00010a000a112000ULL;
        data[161] = 0x20110a000a000000ULL;
        data[172] = 0x00110a000a010000ULL;
        data[175] = 0x00010a000a110000ULL;
        data[179] = 0x00010a000a000000ULL;
        data[189] = 0x20100a000a110000ULL;
        data[190] = 0x00000a000a112000ULL;
        data[191] = 0x00100a000a000000ULL;
        data[192] = 0x20100a000a000000ULL;
        data[195] = 0x00000a000a100000ULL;
        data[202] = 0x20110a000a110000ULL;
        data[206] = 0x20110a000a000000ULL;
        data[209] = 0x00010a000a100000ULL;
        data[213] = 0x00000a000a010000ULL;
        data[220] = 0x00010a000a112040ULL;
        data[221] = 0x00110a000a000000ULL;
        data[232] = 0x00100a000a110000ULL;
        data[234] = 0x20100a000a112040ULL;
        data[236] = 0x00100a000a000000ULL;
        data[239] = 0x00000a000a100000ULL;
        data[240] = 0x00000a000a102040ULL;
        data[243] = 0x00010a000a010000ULL;
        data[247] = 0x20110a000a112000ULL;
        data[254] = 0x00010a000a102000ULL;
        data[258] = 0x00000a000a010000ULL;
        data[262] = 0x00110a000a110000ULL;
        data[266] = 0x00110a000a000000ULL;
        data[269] = 0x00010a000a100000ULL;
        data[274] = 0x00000a000a010000ULL;
        data[277] = 0x00100a000a112000ULL;
        data[283] = 0x20100a000a100000ULL;
        data[284] = 0x00000a000a102000ULL;
        data[287] = 0x00010a000a010000ULL;
        data[288] = 0x00010a000a010000ULL;
        data[296] = 0x20110a000a100000ULL;
        data[301] = 0x20100a000a010000ULL;
        data[307] = 0x00000a000a000000ULL;
        data[308] = 0x00110a000a112040ULL;
        data[314] = 0x00010a000a102040ULL;
        data[319] = 0x00000a000a010000ULL;
        data[326] = 0x00100a000a100000ULL;
        data[328] = 0x20100a000a102040ULL;
        data[331] = 0x20110a000a010000ULL;
        data[332] = 0x00010a000a010000ULL;
        data[337] = 0x00010a000a000000ULL;
        data[341] = 0x20110a000a102000ULL;
        data[346] = 0x20100a000a010000ULL;
        data[349] = 0x00000a000a110000ULL;
        data[352] = 0x00000a000a000000ULL;
        data[357] = 0x00110a000a100000ULL;
        data[361] = 0x00100a000a010000ULL;
        data[368] = 0x00000a000a000000ULL;
        data[371] = 0x00100a000a102000ULL;
        data[374] = 0x00110a000a010000ULL;
        data[376] = 0x20110a000a010000ULL;
        data[379] = 0x00010a000a110000ULL;
        data[381] = 0x00010a000a000000ULL;
        data[383] = 0x00010a000a000000ULL;
        data[394] = 0x00000a000a112000ULL;
        data[395] = 0x20100a000a000000ULL;
        data[402] = 0x00110a000a102040ULL;
        data[406] = 0x00100a000a010000ULL;
        data[409] = 0x00000a000a110000ULL;
        data[413] = 0x00000a000a000000ULL;
        data[420] = 0x00110a000a010000ULL;
        data[423] = 0x00010a000a110000ULL;
        data[424] = 0x00010a000a112040ULL;
        data[425] = 0x20110a000a000000ULL;
        data[426] = 0x00010a000a000000ULL;
        data[436] = 0x20100a000a110000ULL;
        data[440] = 0x20100a000a000000ULL;
        data[443] = 0x00000a000a100000ULL;
        data[454] = 0x00000a000a112040ULL;
        data[455] = 0x00100a000a000000ULL;
        data[466] = 0x20110a000a110000ULL;
        data[468] = 0x00010a000a112000ULL;
        data[469] = 0x00110a000a000000ULL;
        data[470] = 0x20110a000a000000ULL;
        data[473] = 0x00010a000a100000ULL;
        data[478] = 0x00000a000a010000ULL;
        data[481] = 0x20100a000a112000ULL;
        data[488] = 0x00000a000a102000ULL;
        data[491] = 0x00010a000a010000ULL;
        data[497] = 0x00100a000a110000ULL;
        data[500] = 0x00100a000a000000ULL;
        data[503] = 0x00000a000a100000ULL;
        data[510] = 0x00110a000a110000ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_9_mixin<0x1fff>, [](std::vector<uint64_t>& data) {
        data.resize(8185);
        data[0] = 0x4122140014224180ULL;
        data[1] = 0x4020140014204080ULL;
        data[10] = 0x4022140014000000ULL;
        data[70] = 0x0002140014204080ULL;
        data[80] = 0x4122140014000000ULL;
        data[93] = 0x4122140014200000ULL;
        data[98] = 0x0000140014020000ULL;
        data[111] = 0x0000140014220100ULL;
        data[120] = 0x0020140014204080ULL;
        data[129] = 0x0000140014020000ULL;
        data[142] = 0x0000140014220100ULL;
        data[187] = 0x0020140014220000ULL;
        data[199] = 0x0022140014000000ULL;
        data[220] = 0x0102140014020100ULL;
        data[222] = 0x0000140014000000ULL;
        data[229] = 0x4122140014000000ULL;
        data[247] = 0x0000140014020100ULL;
        data[257] = 0x0020140014224000ULL;
        data[266] = 0x0022140014020000ULL;
        data[297] = 0x4122140014020000ULL;
        data[341] = 0x0000140014000000ULL;
        data[357] = 0x0102140014224080ULL;
        data[371] = 0x0000140014000000ULL;
        data[407] = 0x0020140014224180ULL;
        data[414] = 0x0002140014204000ULL;
        data[415] = 0x0022140014020100ULL;
        data[417] = 0x0020140014000000ULL;
        data[451] = 0x0102140014200000ULL;
        data[481] = 0x0002140014220000ULL;
        data[485] = 0x0122140014020100ULL;
        data[487] = 0x0020140014000000ULL;
        data[490] = 0x4022140014204080ULL;
        data[500] = 0x0020140014200000ULL;
        data[518] = 0x4020140014020000ULL;
        data[531] = 0x4020140014220100ULL;
        data[587] = 0x0102140014000000ULL;
        data[600] = 0x0102140014200000ULL;
        data[618] = 0x0002140014020000ULL;
        data[627] = 0x0000140014020100ULL;
        data[631] = 0x0002140014220100ULL;
        data[632] = 0x0000140014200000ULL;
        data[636] = 0x0020140014000000ULL;
        data[667] = 0x4020140014020100ULL;
        data[701] = 0x0102140014224100ULL;
        data[703] = 0x0000140014204000ULL;
        data[704] = 0x0020140014020000ULL;
        data[711] = 0x0002140014000000ULL;
        data[746] = 0x0022140014224000ULL;
        data[761] = 0x4020140014000000ULL;
        data[777] = 0x4122140014224080ULL;
        data[821] = 0x0000140014204000ULL;
        data[852] = 0x0000140014204080ULL;
        data[860] = 0x0002140014000000ULL;
        data[871] = 0x4122140014200000ULL;
        data[888] = 0x0000140014220000ULL;
        data[896] = 0x0022140014224180ULL;
        data[897] = 0x0020140014204080ULL;
        data[919] = 0x0000140014220000ULL;
        data[931] = 0x0102140014000000ULL;
        data[976] = 0x0022140014000000ULL;
        data[989] = 0x0022140014200000ULL;
        data[998] = 0x0102140014020000ULL;
        data[1007] = 0x4122140014000000ULL;
        data[1020] = 0x4122140014200000ULL;
        data[1025] = 0x0000140014020000ULL;
        data[1038] = 0x0000140014220100ULL;
        data[1047] = 0x4020140014020100ULL;
        data[1108] = 0x0000140014224100ULL;
        data[1116] = 0x0002140014020100ULL;
        data[1118] = 0x0000140014000000ULL;
        data[1125] = 0x0022140014000000ULL;
        data[1147] = 0x0102140014020100ULL;
        data[1149] = 0x0000140014000000ULL;
        data[1184] = 0x0020140014224080ULL;
        data[1192] = 0x0002140014204000ULL;
        data[1193] = 0x0022140014020000ULL;
        data[1241] = 0x4020140014204000ULL;
        data[1263] = 0x0122140014020000ULL;
        data[1267] = 0x0000140014000000ULL;
        data[1276] = 0x0122140014220100ULL;
        data[1278] = 0x0020140014200000ULL;
        data[1308] = 0x4020140014220000ULL;
        data[1338] = 0x0000140014000000ULL;
        data[1341] = 0x0002140014204080ULL;
        data[1368] = 0x0000140014020100ULL;
        data[1377] = 0x0102140014200000ULL;
        data[1405] = 0x0000140014020000ULL;
        data[1408] = 0x0002140014220000ULL;
        data[1412] = 0x0122140014020100ULL;
        data[1414] = 0x0020140014000000ULL;
        data[1427] = 0x0020140014200000ULL;
        data[1445] = 0x4020140014020000ULL;
        data[1458] = 0x4020140014220100ULL;
        data[1478] = 0x0102140014224000ULL;
        data[1506] = 0x0122140014000000ULL;
        data[1528] = 0x4020140014224100ULL;
        data[1536] = 0x4022140014020100ULL;
        data[1538] = 0x4020140014000000ULL;
        data[1554] = 0x0000140014020100ULL;
        data[1597] = 0x0002140014224100ULL;
        data[1599] = 0x0000140014204000ULL;
        data[1628] = 0x0102140014224180ULL;
        data[1629] = 0x0000140014204080ULL;
        data[1638] = 0x0002140014000000ULL;
        data[1673] = 0x0022140014224080ULL;
        data[1687] = 0x4020140014000000ULL;
        data[1708] = 0x0102140014000000ULL;
        data[1721] = 0x0102140014200000ULL;
        data[1748] = 0x0000140014204080ULL;
        data[1758] = 0x4020140014000000ULL;
        data[1767] = 0x0022140014200000ULL;
        data[1797] = 0x4122140014200000ULL;
        data[1815] = 0x0000140014220000ULL;
        data[1825] = 0x4020140014020000ULL;
        data[1827] = 0x0002140014000000ULL;
        data[1857] = 0x0102140014000000ULL;
        data[1885] = 0x0000140014224000ULL;
        data[1894] = 0x0002140014020000ULL;
        data[1903] = 0x0022140014000000ULL;
        data[1916] = 0x0022140014200000ULL;
        data[1925] = 0x0102140014020000ULL;
        data[1943] = 0x0020140014020100ULL;
        data[1974] = 0x4020140014020100ULL;
        data[1986] = 0x0122140014204000ULL;
        data[2017] = 0x4022140014224100ULL;
        data[2019] = 0x4020140014204000ULL;
        data[2035] = 0x0000140014224180ULL;
        data[2043] = 0x0002140014020100ULL;
        data[2045] = 0x0000140014000000ULL;
        data[2053] = 0x0122140014220000ULL;
        data[2113] = 0x0102140014020100ULL;
        data[2115] = 0x0000140014000000ULL;
        data[2118] = 0x0002140014204080ULL;
        data[2128] = 0x0000140014200000ULL;
        data[2146] = 0x0000140014020000ULL;
        data[2159] = 0x0000140014220100ULL;
        data[2168] = 0x4020140014204080ULL;
        data[2190] = 0x0122140014020000ULL;
        data[2203] = 0x0122140014220100ULL;
        data[2204] = 0x0020140014200000ULL;
        data[2235] = 0x4020140014220000ULL;
        data[2247] = 0x4022140014000000ULL;
        data[2264] = 0x0000140014000000ULL;
        data[2283] = 0x0122140014000000ULL;
        data[2295] = 0x0000140014020100ULL;
        data[2305] = 0x4020140014224000ULL;
        data[2314] = 0x4022140014020000ULL;
        data[2332] = 0x0000140014020000ULL;
        data[2374] = 0x0002140014224000ULL;
        data[2389] = 0x0000140014000000ULL;
        data[2405] = 0x0102140014224080ULL;
        data[2424] = 0x0020140014224100ULL;
        data[2432] = 0x0122140014000000ULL;
        data[2455] = 0x4020140014224180ULL;
        data[2463] = 0x4022140014020100ULL;
        data[2465] = 0x4020140014000000ULL;
        data[2499] = 0x0102140014200000ULL;
        data[2524] = 0x0002140014224180ULL;
        data[2525] = 0x0000140014204080ULL;
        data[2533] = 0x4122140014020100ULL;
        data[2535] = 0x4020140014000000ULL;
        data[2548] = 0x4020140014200000ULL;
        data[2604] = 0x0002140014000000ULL;
        data[2617] = 0x0002140014200000ULL;
        data[2635] = 0x0102140014000000ULL;
        data[2648] = 0x0102140014200000ULL;
        data[2654] = 0x0020140014000000ULL;
        data[2675] = 0x0000140014020100ULL;
        data[2684] = 0x4020140014000000ULL;
        data[2693] = 0x0022140014200000ULL;
        data[2721] = 0x0020140014020000ULL;
        data[2752] = 0x4020140014020000ULL;
        data[2753] = 0x0002140014000000ULL;
        data[2764] = 0x0122140014204000ULL;
        data[2794] = 0x4022140014224000ULL;
        data[2812] = 0x0000140014224080ULL;
        data[2821] = 0x0002140014020000ULL;
        data[2869] = 0x0000140014204000ULL;
        data[2870] = 0x0020140014020100ULL;
        data[2891] = 0x0102140014020000ULL;
        data[2904] = 0x0102140014220100ULL;
        data[2906] = 0x0000140014200000ULL;
        data[2913] = 0x0122140014204080ULL;
        data[2936] = 0x0000140014220000ULL;
        data[2940] = 0x0020140014020100ULL;
        data[2944] = 0x4022140014224180ULL;
        data[2945] = 0x4020140014204080ULL;
        data[2980] = 0x0122140014220000ULL;
        data[3024] = 0x4022140014000000ULL;
        data[3037] = 0x4022140014200000ULL;
        data[3040] = 0x0102140014020100ULL;
        data[3042] = 0x0000140014000000ULL;
        data[3055] = 0x0000140014200000ULL;
        data[3073] = 0x0000140014020000ULL;
        data[3086] = 0x0000140014220100ULL;
        data[3134] = 0x0102140014000000ULL;
        data[3156] = 0x0000140014224100ULL;
        data[3164] = 0x0002140014020100ULL;
        data[3166] = 0x0000140014000000ULL;
        data[3173] = 0x4022140014000000ULL;
        data[3201] = 0x0020140014224000ULL;
        data[3210] = 0x0122140014000000ULL;
        data[3232] = 0x4020140014224080ULL;
        data[3241] = 0x4022140014020000ULL;
        data[3301] = 0x0002140014224080ULL;
        data[3311] = 0x4122140014020000ULL;
        data[3315] = 0x0000140014000000ULL;
        data[3324] = 0x4122140014220100ULL;
        data[3326] = 0x4020140014200000ULL;
        data[3351] = 0x0020140014224180ULL;
        data[3386] = 0x0000140014000000ULL;
        data[3395] = 0x0002140014200000ULL;
        data[3425] = 0x0102140014200000ULL;
        data[3429] = 0x0022140014020100ULL;
        data[3431] = 0x0020140014000000ULL;
        data[3444] = 0x0020140014200000ULL;
        data[3453] = 0x0000140014020000ULL;
        data[3460] = 0x4122140014020100ULL;
        data[3462] = 0x4020140014000000ULL;
        data[3475] = 0x4020140014200000ULL;
        data[3531] = 0x0002140014000000ULL;
        data[3544] = 0x0002140014200000ULL;
        data[3554] = 0x4122140014000000ULL;
        data[3571] = 0x0000140014020100ULL;
        data[3580] = 0x0020140014000000ULL;
        data[3602] = 0x0000140014020100ULL;
        data[3614] = 0x0102140014204000ULL;
        data[3645] = 0x0002140014224100ULL;
        data[3647] = 0x0000140014204000ULL;
        data[3648] = 0x0020140014020000ULL;
        data[3681] = 0x0102140014220000ULL;
        data[3690] = 0x0122140014204080ULL;
        data[3718] = 0x0020140014020000ULL;
        data[3721] = 0x4022140014224080ULL;
        data[3731] = 0x0020140014220100ULL;
        data[3796] = 0x0000140014204080ULL;
        data[3815] = 0x4022140014200000ULL;
        data[3818] = 0x0102140014020000ULL;
        data[3831] = 0x0102140014220100ULL;
        data[3832] = 0x0000140014200000ULL;
        data[3863] = 0x0000140014220000ULL;
        data[3867] = 0x0020140014020100ULL;
        data[3875] = 0x0002140014000000ULL;
        data[3911] = 0x0102140014000000ULL;
        data[3933] = 0x0000140014224000ULL;
        data[3942] = 0x0002140014020000ULL;
        data[3951] = 0x4022140014000000ULL;
        data[3961] = 0x0020140014000000ULL;
        data[3964] = 0x4022140014200000ULL;
        data[3991] = 0x4020140014020100ULL;
        data[4034] = 0x4122140014204000ULL;
        data[4052] = 0x0000140014224100ULL;
        data[4060] = 0x0102140014000000ULL;
        data[4083] = 0x0000140014224180ULL;
        data[4091] = 0x0002140014020100ULL;
        data[4093] = 0x0000140014000000ULL;
        data[4101] = 0x4122140014220000ULL;
        data[4128] = 0x0020140014224080ULL;
        data[4161] = 0x0102140014020100ULL;
        data[4163] = 0x0000140014000000ULL;
        data[4176] = 0x0000140014200000ULL;
        data[4207] = 0x0022140014020000ULL;
        data[4220] = 0x0022140014220100ULL;
        data[4222] = 0x0020140014200000ULL;
        data[4238] = 0x4122140014020000ULL;
        data[4251] = 0x4122140014220100ULL;
        data[4252] = 0x4020140014200000ULL;
        data[4282] = 0x0000140014000000ULL;
        data[4312] = 0x0000140014000000ULL;
        data[4321] = 0x0002140014200000ULL;
        data[4331] = 0x4122140014000000ULL;
        data[4349] = 0x0000140014020000ULL;
        data[4356] = 0x0022140014020100ULL;
        data[4358] = 0x0020140014000000ULL;
        data[4371] = 0x0020140014200000ULL;
        data[4380] = 0x0000140014020000ULL;
        data[4392] = 0x0102140014204000ULL;
        data[4422] = 0x0002140014224000ULL;
        data[4441] = 0x0020140014204000ULL;
        data[4450] = 0x0022140014000000ULL;
        data[4472] = 0x4020140014224100ULL;
        data[4480] = 0x4122140014000000ULL;
        data[4498] = 0x0000140014020100ULL;
        data[4508] = 0x0020140014220000ULL;
        data[4541] = 0x0102140014204080ULL;
        data[4568] = 0x0000140014020100ULL;
        data[4572] = 0x0002140014224180ULL;
        data[4573] = 0x0000140014204080ULL;
        data[4608] = 0x0102140014220000ULL;
        data[4645] = 0x0020140014020000ULL;
        data[4652] = 0x0002140014000000ULL;
        data[4658] = 0x0020140014220100ULL;
        data[4665] = 0x0002140014200000ULL;
        data[4702] = 0x4020140014000000ULL;
        data[4736] = 0x0122140014020100ULL;
        data[4738] = 0x0020140014000000ULL;
        data[4741] = 0x4022140014200000ULL;
        data[4769] = 0x4020140014020000ULL;
        data[4801] = 0x0002140014000000ULL;
        data[4812] = 0x4122140014204000ULL;
        data[4829] = 0x0000140014224000ULL;
        data[4838] = 0x0102140014000000ULL;
        data[4860] = 0x0000140014224080ULL;
        data[4869] = 0x0002140014020000ULL;
        data[4887] = 0x0020140014000000ULL;
        data[4918] = 0x4020140014020100ULL;
        data[4930] = 0x0022140014204000ULL;
        data[4939] = 0x0102140014020000ULL;
        data[4952] = 0x0102140014220100ULL;
        data[4954] = 0x0000140014200000ULL;
        data[4961] = 0x4122140014204080ULL;
        data[4979] = 0x0000140014224180ULL;
        data[4988] = 0x4020140014020100ULL;
        data[4997] = 0x0022140014220000ULL;
        data[5028] = 0x4122140014220000ULL;
        data[5057] = 0x0002140014020100ULL;
        data[5059] = 0x0000140014000000ULL;
        data[5072] = 0x0000140014200000ULL;
        data[5088] = 0x0102140014020100ULL;
        data[5090] = 0x0000140014000000ULL;
        data[5103] = 0x0000140014200000ULL;
        data[5134] = 0x0022140014020000ULL;
        data[5147] = 0x0022140014220100ULL;
        data[5148] = 0x0020140014200000ULL;
        data[5182] = 0x0102140014000000ULL;
        data[5208] = 0x0000140014000000ULL;
        data[5217] = 0x0122140014224100ULL;
        data[5219] = 0x0020140014204000ULL;
        data[5227] = 0x0022140014000000ULL;
        data[5249] = 0x4020140014224000ULL;
        data[5258] = 0x4122140014000000ULL;
        data[5276] = 0x0000140014020000ULL;
        data[5318] = 0x0102140014204080ULL;
        data[5346] = 0x0000140014020000ULL;
        data[5349] = 0x0002140014224080ULL;
        data[5359] = 0x0000140014220100ULL;
        data[5368] = 0x0020140014204080ULL;
        data[5376] = 0x0022140014000000ULL;
        data[5399] = 0x4020140014224180ULL;
        data[5435] = 0x0020140014220000ULL;
        data[5443] = 0x0002140014200000ULL;
        data[5447] = 0x0122140014000000ULL;
        data[5477] = 0x4022140014020100ULL;
        data[5479] = 0x4020140014000000ULL;
        data[5492] = 0x4020140014200000ULL;
        data[5495] = 0x0000140014020100ULL;
        data[5514] = 0x0122140014020000ULL;
        data[5579] = 0x0002140014000000ULL;
        data[5589] = 0x0000140014000000ULL;
        data[5592] = 0x0002140014200000ULL;
        data[5619] = 0x0000140014020100ULL;
        data[5628] = 0x4020140014000000ULL;
        data[5662] = 0x0102140014204000ULL;
        data[5663] = 0x0122140014020100ULL;
        data[5665] = 0x0020140014000000ULL;
        data[5696] = 0x4020140014020000ULL;
        data[5708] = 0x0022140014204000ULL;
        data[5729] = 0x0102140014220000ULL;
        data[5738] = 0x4122140014204080ULL;
        data[5756] = 0x0000140014224080ULL;
        data[5766] = 0x4020140014020000ULL;
        data[5779] = 0x4020140014220100ULL;
        data[5835] = 0x0002140014020000ULL;
        data[5848] = 0x0002140014220100ULL;
        data[5850] = 0x0000140014200000ULL;
        data[5857] = 0x0022140014204080ULL;
        data[5866] = 0x0102140014020000ULL;
        data[5879] = 0x0102140014220100ULL;
        data[5880] = 0x0000140014200000ULL;
        data[5884] = 0x0020140014020100ULL;
        data[5915] = 0x4020140014020100ULL;
        data[5924] = 0x0022140014220000ULL;
        data[5959] = 0x0102140014000000ULL;
        data[5984] = 0x0002140014020100ULL;
        data[5986] = 0x0000140014000000ULL;
        data[5994] = 0x0122140014224000ULL;
        data[5999] = 0x0000140014200000ULL;
        data[6009] = 0x4020140014000000ULL;
        data[6069] = 0x0000140014204000ULL;
        data[6078] = 0x0002140014000000ULL;
        data[6100] = 0x0000140014224100ULL;
        data[6108] = 0x0102140014000000ULL;
        data[6136] = 0x0000140014220000ULL;
        data[6144] = 0x0122140014224180ULL;
        data[6145] = 0x0020140014204080ULL;
        data[6154] = 0x0022140014000000ULL;
        data[6176] = 0x4020140014224080ULL;
        data[6224] = 0x0122140014000000ULL;
        data[6237] = 0x0122140014200000ULL;
        data[6255] = 0x4022140014020000ULL;
        data[6268] = 0x4022140014220100ULL;
        data[6270] = 0x4020140014200000ULL;
        data[6273] = 0x0000140014020000ULL;
        data[6286] = 0x0000140014220100ULL;
        data[6330] = 0x0000140014000000ULL;
        data[6364] = 0x0102140014020100ULL;
        data[6366] = 0x0000140014000000ULL;
        data[6369] = 0x0002140014200000ULL;
        data[6373] = 0x0122140014000000ULL;
        data[6397] = 0x0000140014020000ULL;
        data[6404] = 0x4022140014020100ULL;
        data[6406] = 0x4020140014000000ULL;
        data[6419] = 0x4020140014200000ULL;
        data[6440] = 0x0102140014204000ULL;
        data[6441] = 0x0122140014020000ULL;
        data[6489] = 0x4020140014204000ULL;
        data[6498] = 0x4022140014000000ULL;
        data[6515] = 0x0000140014000000ULL;
        data[6546] = 0x0000140014020100ULL;
        data[6556] = 0x4020140014220000ULL;
        data[6558] = 0x0002140014204000ULL;
        data[6589] = 0x0102140014204080ULL;
        data[6616] = 0x0000140014020100ULL;
        data[6625] = 0x0002140014220000ULL;
        data[6634] = 0x0022140014204080ULL;
        data[6656] = 0x0102140014220000ULL;
        data[6662] = 0x0020140014020000ULL;
        data[6675] = 0x0020140014220100ULL;
        data[6693] = 0x4020140014020000ULL;
        data[6706] = 0x4020140014220100ULL;
        data[6762] = 0x0002140014020000ULL;
        data[6775] = 0x0002140014220100ULL;
        data[6776] = 0x0000140014200000ULL;
        data[6784] = 0x4122140014020100ULL;
        data[6786] = 0x4020140014000000ULL;
        data[6811] = 0x0020140014020100ULL;
        data[6845] = 0x0102140014224100ULL;
        data[6847] = 0x0000140014204000ULL;
        data[6855] = 0x0002140014000000ULL;
        data[6877] = 0x0000140014224000ULL;
        data[6886] = 0x0102140014000000ULL;
        data[6905] = 0x0020140014000000ULL;
        data[6921] = 0x0122140014224080ULL;
        data[6935] = 0x4020140014000000ULL;
        data[6978] = 0x4022140014204000ULL;
        data[6996] = 0x0000140014204080ULL;
        data[7004] = 0x0002140014000000ULL;
        data[7015] = 0x0122140014200000ULL;
        data[7027] = 0x0000140014224180ULL;
        data[7045] = 0x4022140014220000ULL;
        data[7063] = 0x0000140014220000ULL;
        data[7075] = 0x0102140014000000ULL;
        data[7105] = 0x0002140014020100ULL;
        data[7107] = 0x0000140014000000ULL;
        data[7120] = 0x0000140014200000ULL;
        data[7142] = 0x0102140014020000ULL;
        data[7151] = 0x0122140014000000ULL;
        data[7164] = 0x0122140014200000ULL;
        data[7182] = 0x4022140014020000ULL;
        data[7191] = 0x0020140014020100ULL;
        data[7195] = 0x4022140014220100ULL;
        data[7196] = 0x4020140014200000ULL;
        data[7256] = 0x0000140014000000ULL;
        data[7265] = 0x4122140014224100ULL;
        data[7267] = 0x4020140014204000ULL;
        data[7275] = 0x4022140014000000ULL;
        data[7291] = 0x0102140014020100ULL;
        data[7293] = 0x0000140014000000ULL;
        data[7324] = 0x0000140014020000ULL;
        data[7336] = 0x0002140014204000ULL;
        data[7366] = 0x0102140014204080ULL;
        data[7385] = 0x0020140014204000ULL;
        data[7394] = 0x0000140014020000ULL;
        data[7407] = 0x0000140014220100ULL;
        data[7416] = 0x4020140014204080ULL;
        data[7424] = 0x4022140014000000ULL;
        data[7452] = 0x0020140014220000ULL;
        data[7483] = 0x4020140014220000ULL;
        data[7485] = 0x0002140014204080ULL;
        data[7495] = 0x4122140014000000ULL;
        data[7512] = 0x0000140014020100ULL;
        data[7543] = 0x0000140014020100ULL;
        data[7552] = 0x0002140014220000ULL;
        data[7562] = 0x4122140014020000ULL;
        data[7589] = 0x0020140014020000ULL;
        data[7602] = 0x0020140014220100ULL;
        data[7622] = 0x0102140014224000ULL;
        data[7637] = 0x0000140014000000ULL;
        data[7672] = 0x0020140014224100ULL;
        data[7680] = 0x0022140014020100ULL;
        data[7682] = 0x0020140014000000ULL;
        data[7711] = 0x4122140014020100ULL;
        data[7713] = 0x4020140014000000ULL;
        data[7756] = 0x4022140014204000ULL;
        data[7772] = 0x0102140014224180ULL;
        data[7773] = 0x0000140014204080ULL;
        data[7782] = 0x0002140014000000ULL;
        data[7804] = 0x0000140014224080ULL;
        data[7831] = 0x0020140014000000ULL;
        data[7852] = 0x0102140014000000ULL;
        data[7865] = 0x0102140014200000ULL;
        data[7883] = 0x0002140014020000ULL;
        data[7896] = 0x0002140014220100ULL;
        data[7898] = 0x0000140014200000ULL;
        data[7902] = 0x0020140014000000ULL;
        data[7905] = 0x4022140014204080ULL;
        data[7932] = 0x4020140014020100ULL;
        data[7941] = 0x0122140014200000ULL;
        data[7969] = 0x0020140014020000ULL;
        data[7972] = 0x4022140014220000ULL;
        data[8001] = 0x0102140014000000ULL;
        data[8032] = 0x0002140014020100ULL;
        data[8034] = 0x0000140014000000ULL;
        data[8042] = 0x4122140014224000ULL;
        data[8047] = 0x0000140014200000ULL;
        data[8069] = 0x0102140014020000ULL;
        data[8117] = 0x0000140014204000ULL;
        data[8118] = 0x0020140014020100ULL;
        data[8126] = 0x0002140014000000ULL;
        data[8161] = 0x0022140014224100ULL;
        data[8163] = 0x0020140014204000ULL;
        data[8184] = 0x0000140014220000ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_15_mixin<0x1fff>, [](std::vector<uint64_t>& data) {
        data.resize(8189);
        data[0] = 0x8244280028448201ULL;
        data[4] = 0x0000280028440201ULL;
        data[12] = 0x0044280028040201ULL;
        data[30] = 0x0004280028040000ULL;
        data[51] = 0x8044280028000000ULL;
        data[62] = 0x0204280028448200ULL;
        data[67] = 0x8040280028408000ULL;
        data[84] = 0x8244280028040000ULL;
        data[101] = 0x8040280028448000ULL;
        data[114] = 0x0040280028040000ULL;
        data[130] = 0x0000280028408000ULL;
        data[145] = 0x0040280028440201ULL;
        data[152] = 0x8040280028000000ULL;
        data[163] = 0x0000280028448000ULL;
        data[184] = 0x8040280028400000ULL;
        data[215] = 0x0204280028000000ULL;
        data[218] = 0x0004280028448200ULL;
        data[260] = 0x8040280028040200ULL;
        data[301] = 0x8040280028440201ULL;
        data[319] = 0x0000280028448000ULL;
        data[356] = 0x0244280028000000ULL;
        data[359] = 0x0044280028448200ULL;
        data[363] = 0x0000280028440200ULL;
        data[390] = 0x0000280028000000ULL;
        data[460] = 0x0040280028448000ULL;
        data[489] = 0x0004280028408000ULL;
        data[512] = 0x8044280028000000ULL;
        data[523] = 0x0204280028448000ULL;
        data[531] = 0x0040280028000000ULL;
        data[543] = 0x8244280028400000ULL;
        data[561] = 0x0204280028408000ULL;
        data[574] = 0x0004280028000000ULL;
        data[590] = 0x0000280028408000ULL;
        data[606] = 0x0204280028400000ULL;
        data[620] = 0x8244280028040201ULL;
        data[624] = 0x0000280028040201ULL;
        data[644] = 0x8040280028400000ULL;
        data[679] = 0x0004280028448000ULL;
        data[682] = 0x0204280028040200ULL;
        data[687] = 0x8040280028000000ULL;
        data[702] = 0x0244280028408000ULL;
        data[707] = 0x0000280028400000ULL;
        data[721] = 0x8040280028040000ULL;
        data[723] = 0x0004280028440201ULL;
        data[750] = 0x0000280028000000ULL;
        data[762] = 0x0004280028400000ULL;
        data[765] = 0x0040280028040201ULL;
        data[783] = 0x0000280028040000ULL;
        data[795] = 0x0204280028440000ULL;
        data[804] = 0x8040280028000000ULL;
        data[820] = 0x0044280028448000ULL;
        data[824] = 0x0000280028440000ULL;
        data[838] = 0x0004280028040200ULL;
        data[858] = 0x8044280028408000ULL;
        data[863] = 0x0000280028400000ULL;
        data[903] = 0x0044280028400000ULL;
        data[921] = 0x8040280028040201ULL;
        data[936] = 0x0244280028440000ULL;
        data[939] = 0x0000280028040000ULL;
        data[971] = 0x0000280028448200ULL;
        data[979] = 0x0044280028040200ULL;
        data[984] = 0x0000280028040200ULL;
        data[1004] = 0x0040280028400000ULL;
        data[1067] = 0x0204280028400000ULL;
        data[1080] = 0x0040280028040000ULL;
        data[1092] = 0x8044280028440000ULL;
        data[1110] = 0x0004280028000000ULL;
        data[1112] = 0x0040280028448200ULL;
        data[1143] = 0x0204280028040000ULL;
        data[1164] = 0x8244280028000000ULL;
        data[1181] = 0x0204280028000000ULL;
        data[1211] = 0x0000280028000000ULL;
        data[1223] = 0x0004280028400000ULL;
        data[1226] = 0x0204280028000000ULL;
        data[1242] = 0x0000280028408000ULL;
        data[1265] = 0x8040280028000000ULL;
        data[1268] = 0x8040280028448200ULL;
        data[1299] = 0x0004280028040000ULL;
        data[1323] = 0x0244280028000000ULL;
        data[1327] = 0x0000280028000000ULL;
        data[1330] = 0x0204280028448201ULL;
        data[1343] = 0x0004280028040201ULL;
        data[1364] = 0x0044280028400000ULL;
        data[1382] = 0x0004280028000000ULL;
        data[1398] = 0x0000280028408000ULL;
        data[1415] = 0x0204280028040000ULL;
        data[1431] = 0x0000280028448000ULL;
        data[1440] = 0x0044280028040000ULL;
        data[1444] = 0x0000280028040000ULL;
        data[1472] = 0x0244280028448201ULL;
        data[1476] = 0x0000280028440201ULL;
        data[1479] = 0x8044280028000000ULL;
        data[1483] = 0x0000280028000000ULL;
        data[1510] = 0x8244280028408000ULL;
        data[1515] = 0x0000280028400000ULL;
        data[1523] = 0x0044280028000000ULL;
        data[1539] = 0x0040280028408000ULL;
        data[1556] = 0x0244280028040000ULL;
        data[1573] = 0x0040280028448000ULL;
        data[1591] = 0x0000280028040200ULL;
        data[1611] = 0x8040280028408000ULL;
        data[1624] = 0x0040280028000000ULL;
        data[1628] = 0x8044280028448201ULL;
        data[1632] = 0x0000280028440201ULL;
        data[1656] = 0x0040280028400000ULL;
        data[1687] = 0x0204280028000000ULL;
        data[1690] = 0x0004280028448200ULL;
        data[1712] = 0x8044280028040000ULL;
        data[1729] = 0x8040280028448000ULL;
        data[1732] = 0x0040280028040200ULL;
        data[1744] = 0x8244280028440200ULL;
        data[1773] = 0x0040280028440201ULL;
        data[1791] = 0x0000280028448000ULL;
        data[1812] = 0x8040280028400000ULL;
        data[1843] = 0x0004280028000000ULL;
        data[1845] = 0x8040280028440000ULL;
        data[1862] = 0x0000280028000000ULL;
        data[1874] = 0x0204280028400000ULL;
        data[1888] = 0x8040280028040200ULL;
        data[1951] = 0x0204280028040201ULL;
        data[1971] = 0x8244280028408000ULL;
        data[1975] = 0x0000280028400000ULL;
        data[1984] = 0x0044280028000000ULL;
        data[2015] = 0x0244280028400000ULL;
        data[2018] = 0x0000280028000000ULL;
        data[2033] = 0x0204280028408000ULL;
        data[2052] = 0x0000280028040000ULL;
        data[2092] = 0x0244280028040201ULL;
        data[2096] = 0x0000280028040201ULL;
        data[2116] = 0x0040280028400000ULL;
        data[2130] = 0x8244280028000000ULL;
        data[2135] = 0x0000280028000000ULL;
        data[2151] = 0x0004280028448000ULL;
        data[2159] = 0x0040280028000000ULL;
        data[2171] = 0x8044280028400000ULL;
        data[2189] = 0x0004280028408000ULL;
        data[2193] = 0x0040280028040000ULL;
        data[2205] = 0x8244280028440000ULL;
        data[2231] = 0x8040280028000000ULL;
        data[2234] = 0x0004280028400000ULL;
        data[2248] = 0x8044280028040201ULL;
        data[2252] = 0x0000280028040201ULL;
        data[2267] = 0x0204280028440000ULL;
        data[2272] = 0x8040280028400000ULL;
        data[2276] = 0x0040280028000000ULL;
        data[2310] = 0x0004280028040200ULL;
        data[2330] = 0x0044280028408000ULL;
        data[2335] = 0x0000280028400000ULL;
        data[2349] = 0x8040280028040000ULL;
        data[2364] = 0x8244280028040200ULL;
        data[2380] = 0x8040280028448201ULL;
        data[2393] = 0x0040280028040201ULL;
        data[2411] = 0x0000280028040000ULL;
        data[2423] = 0x0004280028440000ULL;
        data[2432] = 0x8040280028000000ULL;
        data[2443] = 0x0000280028448200ULL;
        data[2465] = 0x8040280028040000ULL;
        data[2494] = 0x0204280028000000ULL;
        data[2564] = 0x0044280028440000ULL;
        data[2591] = 0x8244280028000000ULL;
        data[2595] = 0x0000280028000000ULL;
        data[2599] = 0x0000280028448200ULL;
        data[2636] = 0x0244280028000000ULL;
        data[2653] = 0x0204280028000000ULL;
        data[2695] = 0x0004280028400000ULL;
        data[2737] = 0x0040280028000000ULL;
        data[2740] = 0x0040280028448200ULL;
        data[2771] = 0x0004280028040000ULL;
        data[2792] = 0x8044280028000000ULL;
        data[2802] = 0x0204280028448201ULL;
        data[2809] = 0x0004280028000000ULL;
        data[2825] = 0x8244280028040000ULL;
        data[2841] = 0x0204280028408000ULL;
        data[2854] = 0x0004280028000000ULL;
        data[2870] = 0x0000280028408000ULL;
        data[2887] = 0x0204280028040000ULL;
        data[2893] = 0x8040280028000000ULL;
        data[2903] = 0x0000280028448000ULL;
        data[2924] = 0x8040280028400000ULL;
        data[2942] = 0x0000280028408000ULL;
        data[2951] = 0x0044280028000000ULL;
        data[2955] = 0x0000280028000000ULL;
        data[2958] = 0x0004280028448201ULL;
        data[2982] = 0x0244280028408000ULL;
        data[2987] = 0x0000280028400000ULL;
        data[3000] = 0x8040280028040201ULL;
        data[3043] = 0x0004280028040000ULL;
        data[3059] = 0x0000280028448000ULL;
        data[3063] = 0x0000280028040200ULL;
        data[3075] = 0x0204280028440200ULL;
        data[3083] = 0x0040280028408000ULL;
        data[3100] = 0x0044280028448201ULL;
        data[3104] = 0x0000280028440201ULL;
        data[3138] = 0x8044280028408000ULL;
        data[3143] = 0x0000280028400000ULL;
        data[3171] = 0x8244280028448000ULL;
        data[3176] = 0x0000280028440000ULL;
        data[3184] = 0x0044280028040000ULL;
        data[3201] = 0x0040280028448000ULL;
        data[3216] = 0x0244280028440200ULL;
        data[3219] = 0x0000280028040200ULL;
        data[3239] = 0x8040280028408000ULL;
        data[3284] = 0x0040280028400000ULL;
        data[3302] = 0x0204280028408000ULL;
        data[3315] = 0x0004280028000000ULL;
        data[3317] = 0x0040280028440000ULL;
        data[3346] = 0x0204280028400000ULL;
        data[3360] = 0x0040280028040200ULL;
        data[3372] = 0x8044280028440200ULL;
        data[3423] = 0x0204280028040201ULL;
        data[3443] = 0x0244280028408000ULL;
        data[3447] = 0x0000280028400000ULL;
        data[3461] = 0x0204280028000000ULL;
        data[3473] = 0x8040280028440000ULL;
        data[3490] = 0x0000280028000000ULL;
        data[3502] = 0x0004280028400000ULL;
        data[3524] = 0x0000280028040000ULL;
        data[3536] = 0x0204280028440000ULL;
        data[3544] = 0x8040280028000000ULL;
        data[3562] = 0x0000280028000000ULL;
        data[3579] = 0x0004280028040201ULL;
        data[3599] = 0x8044280028408000ULL;
        data[3602] = 0x0244280028000000ULL;
        data[3603] = 0x0000280028400000ULL;
        data[3607] = 0x0000280028000000ULL;
        data[3643] = 0x0044280028400000ULL;
        data[3661] = 0x0004280028408000ULL;
        data[3677] = 0x0244280028440000ULL;
        data[3680] = 0x0000280028040000ULL;
        data[3695] = 0x0204280028040200ULL;
        data[3703] = 0x0040280028000000ULL;
        data[3711] = 0x0000280028448201ULL;
        data[3715] = 0x8244280028400000ULL;
        data[3720] = 0x0044280028040201ULL;
        data[3724] = 0x0000280028040201ULL;
        data[3744] = 0x0040280028400000ULL;
        data[3758] = 0x8044280028000000ULL;
        data[3763] = 0x0000280028000000ULL;
        data[3791] = 0x8244280028040000ULL;
        data[3796] = 0x0000280028040000ULL;
        data[3821] = 0x0040280028040000ULL;
        data[3833] = 0x8044280028440000ULL;
        data[3836] = 0x0244280028040200ULL;
        data[3852] = 0x0040280028448201ULL;
        data[3859] = 0x8040280028000000ULL;
        data[3891] = 0x8040280028408000ULL;
        data[3895] = 0x0004280028440000ULL;
        data[3904] = 0x0040280028000000ULL;
        data[3922] = 0x0204280028000000ULL;
        data[3937] = 0x0040280028040000ULL;
        data[3966] = 0x0204280028000000ULL;
        data[3992] = 0x8044280028040200ULL;
        data[4008] = 0x8040280028448201ULL;
        data[4063] = 0x0244280028000000ULL;
        data[4067] = 0x0000280028000000ULL;
        data[4071] = 0x0000280028448200ULL;
        data[4093] = 0x8040280028040000ULL;
        data[4122] = 0x0004280028000000ULL;
        data[4125] = 0x8040280028440200ULL;
        data[4156] = 0x0204280028040000ULL;
        data[4219] = 0x8044280028000000ULL;
        data[4223] = 0x0000280028000000ULL;
        data[4251] = 0x8244280028408000ULL;
        data[4255] = 0x0000280028400000ULL;
        data[4264] = 0x0044280028000000ULL;
        data[4281] = 0x0004280028000000ULL;
        data[4297] = 0x0244280028040000ULL;
        data[4313] = 0x0204280028408000ULL;
        data[4331] = 0x0000280028040201ULL;
        data[4335] = 0x8244280028000000ULL;
        data[4352] = 0x8040280028408000ULL;
        data[4365] = 0x0040280028000000ULL;
        data[4396] = 0x0040280028400000ULL;
        data[4414] = 0x0000280028408000ULL;
        data[4430] = 0x0004280028448201ULL;
        data[4453] = 0x8044280028040000ULL;
        data[4469] = 0x0004280028408000ULL;
        data[4472] = 0x0040280028040201ULL;
        data[4484] = 0x8244280028440201ULL;
        data[4502] = 0x0204280028448000ULL;
        data[4511] = 0x8040280028000000ULL;
        data[4515] = 0x0004280028040000ULL;
        data[4531] = 0x0000280028448000ULL;
        data[4547] = 0x0204280028440200ULL;
        data[4552] = 0x8040280028400000ULL;
        data[4570] = 0x0000280028408000ULL;
        data[4585] = 0x8040280028440000ULL;
        data[4610] = 0x0044280028408000ULL;
        data[4615] = 0x0000280028400000ULL;
        data[4628] = 0x8040280028040201ULL;
        data[4643] = 0x0244280028448000ULL;
        data[4648] = 0x0000280028440000ULL;
        data[4691] = 0x0000280028040200ULL;
        data[4703] = 0x0004280028440200ULL;
        data[4711] = 0x0040280028408000ULL;
        data[4745] = 0x8040280028040200ULL;
        data[4774] = 0x0204280028408000ULL;
        data[4799] = 0x8044280028448000ULL;
        data[4804] = 0x0000280028440000ULL;
        data[4844] = 0x0044280028440200ULL;
        data[4871] = 0x8244280028000000ULL;
        data[4875] = 0x0000280028000000ULL;
        data[4930] = 0x0004280028408000ULL;
        data[4933] = 0x0204280028000000ULL;
        data[4945] = 0x0040280028440000ULL;
        data[4972] = 0x8040280028000000ULL;
        data[4974] = 0x0004280028400000ULL;
        data[5008] = 0x0204280028440000ULL;
        data[5016] = 0x0040280028000000ULL;
        data[5034] = 0x0000280028000000ULL;
        data[5046] = 0x0204280028400000ULL;
        data[5051] = 0x0004280028040201ULL;
        data[5071] = 0x0044280028408000ULL;
        data[5075] = 0x0000280028400000ULL;
        data[5089] = 0x0004280028000000ULL;
        data[5104] = 0x8244280028040201ULL;
        data[5122] = 0x0204280028040000ULL;
        data[5152] = 0x0000280028040000ULL;
        data[5164] = 0x0004280028440000ULL;
        data[5167] = 0x0204280028040200ULL;
        data[5172] = 0x8040280028000000ULL;
        data[5183] = 0x0000280028448201ULL;
        data[5187] = 0x0244280028400000ULL;
        data[5190] = 0x0000280028000000ULL;
        data[5206] = 0x8040280028040000ULL;
        data[5222] = 0x0000280028408000ULL;
        data[5230] = 0x0044280028000000ULL;
        data[5235] = 0x0000280028000000ULL;
        data[5263] = 0x0244280028040000ULL;
        data[5268] = 0x0000280028040000ULL;
        data[5305] = 0x0044280028440000ULL;
        data[5323] = 0x0004280028040200ULL;
        data[5331] = 0x0040280028000000ULL;
        data[5339] = 0x0000280028448201ULL;
        data[5343] = 0x8044280028400000ULL;
        data[5363] = 0x0040280028408000ULL;
        data[5394] = 0x0204280028000000ULL;
        data[5419] = 0x8044280028040000ULL;
        data[5424] = 0x0000280028040000ULL;
        data[5451] = 0x8244280028448200ULL;
        data[5455] = 0x0000280028440200ULL;
        data[5464] = 0x0044280028040200ULL;
        data[5480] = 0x0040280028448201ULL;
        data[5519] = 0x8040280028408000ULL;
        data[5550] = 0x0004280028000000ULL;
        data[5552] = 0x8040280028448000ULL;
        data[5565] = 0x0040280028040000ULL;
        data[5581] = 0x0204280028408000ULL;
        data[5594] = 0x0004280028000000ULL;
        data[5597] = 0x0040280028440200ULL;
        data[5628] = 0x0204280028040000ULL;
        data[5666] = 0x0204280028000000ULL;
        data[5682] = 0x0000280028408000ULL;
        data[5691] = 0x0044280028000000ULL;
        data[5695] = 0x0000280028000000ULL;
        data[5723] = 0x0244280028408000ULL;
        data[5727] = 0x0000280028400000ULL;
        data[5753] = 0x8040280028440200ULL;
        data[5784] = 0x0004280028040000ULL;
        data[5803] = 0x0000280028040201ULL;
        data[5807] = 0x0244280028000000ULL;
        data[5815] = 0x0204280028440201ULL;
        data[5824] = 0x0040280028408000ULL;
        data[5842] = 0x0000280028000000ULL;
        data[5879] = 0x8044280028408000ULL;
        data[5883] = 0x0000280028400000ULL;
        data[5912] = 0x8244280028448000ULL;
        data[5916] = 0x0000280028440000ULL;
        data[5925] = 0x0044280028040000ULL;
        data[5941] = 0x0004280028408000ULL;
        data[5956] = 0x0244280028440201ULL;
        data[5959] = 0x0000280028040201ULL;
        data[5963] = 0x8044280028000000ULL;
        data[5974] = 0x0204280028448000ULL;
        data[5980] = 0x8040280028408000ULL;
        data[5983] = 0x0040280028000000ULL;
        data[5995] = 0x8244280028400000ULL;
        data[6024] = 0x0040280028400000ULL;
        data[6042] = 0x0000280028408000ULL;
        data[6057] = 0x0040280028440000ULL;
        data[6071] = 0x8244280028040200ULL;
        data[6076] = 0x0000280028040200ULL;
        data[6096] = 0x8040280028400000ULL;
        data[6100] = 0x0040280028040201ULL;
        data[6112] = 0x8044280028440201ULL;
        data[6130] = 0x0004280028448000ULL;
        data[6139] = 0x8040280028000000ULL;
        data[6172] = 0x8040280028040000ULL;
        data[6175] = 0x0004280028440200ULL;
        data[6202] = 0x0204280028000000ULL;
        data[6213] = 0x8040280028440000ULL;
        data[6217] = 0x0040280028040200ULL;
        data[6271] = 0x0044280028448000ULL;
        data[6276] = 0x0000280028440000ULL;
        data[6303] = 0x0000280028000000ULL;
        data[6343] = 0x0244280028000000ULL;
        data[6347] = 0x0000280028000000ULL;
        data[6373] = 0x8040280028040200ULL;
        data[6402] = 0x0004280028408000ULL;
        data[6435] = 0x0204280028040201ULL;
        data[6444] = 0x0040280028000000ULL;
        data[6456] = 0x8244280028400000ULL;
        data[6499] = 0x8044280028000000ULL;
        data[6503] = 0x0000280028000000ULL;
        data[6518] = 0x0204280028400000ULL;
        data[6532] = 0x8244280028040000ULL;
        data[6536] = 0x0000280028040000ULL;
        data[6561] = 0x0004280028000000ULL;
        data[6576] = 0x0244280028040201ULL;
        data[6594] = 0x0204280028040000ULL;
        data[6600] = 0x8040280028000000ULL;
        data[6615] = 0x8244280028000000ULL;
        data[6631] = 0x8040280028408000ULL;
        data[6636] = 0x0004280028440000ULL;
        data[6644] = 0x0040280028000000ULL;
        data[6662] = 0x0000280028000000ULL;
        data[6674] = 0x0004280028400000ULL;
        data[6678] = 0x0040280028040000ULL;
        data[6694] = 0x0000280028408000ULL;
        data[6716] = 0x8040280028000000ULL;
        data[6732] = 0x8044280028040201ULL;
        data[6750] = 0x0004280028040000ULL;
        data[6782] = 0x0204280028448200ULL;
        data[6795] = 0x0004280028040200ULL;
        data[6811] = 0x0000280028448201ULL;
        data[6815] = 0x0044280028400000ULL;
        data[6834] = 0x8040280028040000ULL;
        data[6850] = 0x0000280028408000ULL;
        data[6865] = 0x8040280028440201ULL;
        data[6883] = 0x0000280028448000ULL;
        data[6891] = 0x0044280028040000ULL;
        data[6896] = 0x0000280028040000ULL;
        data[6923] = 0x0244280028448200ULL;
        data[6927] = 0x0000280028440200ULL;
        data[6991] = 0x0040280028408000ULL;
        data[7022] = 0x0004280028000000ULL;
        data[7024] = 0x0040280028448000ULL;
        data[7053] = 0x0204280028408000ULL;
        data[7076] = 0x8244280028000000ULL;
        data[7079] = 0x8044280028448200ULL;
        data[7083] = 0x0000280028440200ULL;
        data[7138] = 0x0204280028000000ULL;
        data[7154] = 0x0000280028408000ULL;
        data[7180] = 0x8040280028448000ULL;
        data[7209] = 0x0004280028408000ULL;
        data[7225] = 0x0040280028440200ULL;
        data[7243] = 0x0204280028448000ULL;
        data[7251] = 0x8040280028000000ULL;
        data[7256] = 0x0004280028040000ULL;
        data[7287] = 0x0204280028440201ULL;
        data[7294] = 0x0004280028000000ULL;
        data[7310] = 0x0000280028408000ULL;
        data[7314] = 0x0000280028000000ULL;
        data[7326] = 0x0204280028400000ULL;
        data[7351] = 0x0044280028408000ULL;
        data[7355] = 0x0000280028400000ULL;
        data[7384] = 0x0244280028448000ULL;
        data[7388] = 0x0000280028440000ULL;
        data[7402] = 0x0204280028040200ULL;
        data[7422] = 0x8244280028408000ULL;
        data[7427] = 0x0000280028400000ULL;
        data[7431] = 0x0000280028040201ULL;
        data[7435] = 0x0044280028000000ULL;
        data[7443] = 0x0004280028440201ULL;
        data[7452] = 0x0040280028408000ULL;
        data[7467] = 0x0244280028400000ULL;
        data[7470] = 0x0000280028000000ULL;
        data[7485] = 0x8040280028040201ULL;
        data[7503] = 0x0000280028040000ULL;
        data[7540] = 0x8044280028448000ULL;
        data[7543] = 0x0244280028040200ULL;
        data[7544] = 0x0000280028440000ULL;
        data[7548] = 0x0000280028040200ULL;
        data[7568] = 0x0040280028400000ULL;
        data[7584] = 0x0044280028440201ULL;
        data[7602] = 0x0004280028448000ULL;
        data[7611] = 0x0040280028000000ULL;
        data[7623] = 0x8044280028400000ULL;
        data[7644] = 0x0040280028040000ULL;
        data[7656] = 0x8244280028440000ULL;
        data[7674] = 0x0204280028000000ULL;
        data[7685] = 0x0040280028440000ULL;
        data[7699] = 0x8044280028040200ULL;
        data[7704] = 0x0000280028040200ULL;
        data[7724] = 0x8040280028400000ULL;
        data[7775] = 0x0000280028000000ULL;
        data[7787] = 0x0204280028400000ULL;
        data[7800] = 0x8040280028040000ULL;
        data[7830] = 0x0004280028000000ULL;
        data[7832] = 0x8040280028448200ULL;
        data[7845] = 0x0040280028040200ULL;
        data[7863] = 0x0204280028040000ULL;
        data[7907] = 0x0204280028040201ULL;
        data[7928] = 0x0244280028400000ULL;
        data[7931] = 0x0000280028000000ULL;
        data[7946] = 0x0204280028000000ULL;
        data[7962] = 0x0000280028408000ULL;
        data[7971] = 0x0044280028000000ULL;
        data[7975] = 0x0000280028000000ULL;
        data[8004] = 0x0244280028040000ULL;
        data[8008] = 0x0000280028040000ULL;
        data[8043] = 0x8244280028000000ULL;
        data[8047] = 0x0000280028000000ULL;
        data[8063] = 0x0004280028040201ULL;
        data[8072] = 0x0040280028000000ULL;
        data[8084] = 0x8044280028400000ULL;
        data[8087] = 0x0244280028000000ULL;
        data[8103] = 0x0040280028408000ULL;
        data[8146] = 0x0004280028400000ULL;
        data[8160] = 0x8044280028040000ULL;
        data[8164] = 0x0000280028040000ULL;
        data[8188] = 0x0040280028000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x3ff>, [](std::vector<uint64_t>& data) {
        data.resize(1013);
        data[0] = 0x0488500050880402ULL;
        data[1] = 0x0488500050000000ULL;
        data[4] = 0x0000500050880402ULL;
        data[5] = 0x0000500050000000ULL;
        data[17] = 0x0080500050080402ULL;
        data[26] = 0x0408500050080000ULL;
        data[40] = 0x0080500050880400ULL;
        data[47] = 0x0088500050800000ULL;
        data[51] = 0x0000500050800000ULL;
        data[64] = 0x0080500050000000ULL;
        data[72] = 0x0008500050880000ULL;
        data[85] = 0x0488500050080000ULL;
        data[88] = 0x0080500050800000ULL;
        data[89] = 0x0000500050080000ULL;
        data[100] = 0x0408500050000000ULL;
        data[109] = 0x0488500050880000ULL;
        data[113] = 0x0000500050880000ULL;
        data[124] = 0x0408500050800000ULL;
        data[126] = 0x0080500050080000ULL;
        data[137] = 0x0088500050000000ULL;
        data[141] = 0x0000500050000000ULL;
        data[162] = 0x0008500050080400ULL;
        data[172] = 0x0080500050880000ULL;
        data[183] = 0x0488500050800000ULL;
        data[187] = 0x0000500050800000ULL;
        data[200] = 0x0080500050000000ULL;
        data[208] = 0x0408500050880402ULL;
        data[209] = 0x0408500050000000ULL;
        data[221] = 0x0088500050080402ULL;
        data[224] = 0x0080500050800000ULL;
        data[225] = 0x0000500050080402ULL;
        data[244] = 0x0088500050880400ULL;
        data[248] = 0x0000500050880400ULL;
        data[255] = 0x0008500050800000ULL;
        data[262] = 0x0080500050080400ULL;
        data[268] = 0x0488500050000000ULL;
        data[272] = 0x0000500050000000ULL;
        data[292] = 0x0488500050800000ULL;
        data[293] = 0x0408500050080000ULL;
        data[296] = 0x0000500050800000ULL;
        data[308] = 0x0080500050880402ULL;
        data[309] = 0x0080500050000000ULL;
        data[317] = 0x0408500050880000ULL;
        data[330] = 0x0088500050080000ULL;
        data[334] = 0x0000500050080000ULL;
        data[345] = 0x0008500050000000ULL;
        data[355] = 0x0080500050800000ULL;
        data[376] = 0x0488500050880000ULL;
        data[380] = 0x0000500050880000ULL;
        data[391] = 0x0408500050800000ULL;
        data[393] = 0x0080500050080000ULL;
        data[404] = 0x0088500050000000ULL;
        data[408] = 0x0000500050000000ULL;
        data[417] = 0x0080500050880000ULL;
        data[428] = 0x0088500050800000ULL;
        data[429] = 0x0008500050080402ULL;
        data[432] = 0x0000500050800000ULL;
        data[445] = 0x0080500050000000ULL;
        data[452] = 0x0008500050880400ULL;
        data[466] = 0x0488500050080400ULL;
        data[470] = 0x0000500050080400ULL;
        data[476] = 0x0408500050000000ULL;
        data[491] = 0x0080500050800000ULL;
        data[500] = 0x0408500050800000ULL;
        data[512] = 0x0088500050880402ULL;
        data[513] = 0x0088500050000000ULL;
        data[516] = 0x0000500050880402ULL;
        data[517] = 0x0000500050000000ULL;
        data[529] = 0x0080500050080402ULL;
        data[538] = 0x0008500050080000ULL;
        data[552] = 0x0080500050880400ULL;
        data[559] = 0x0488500050800000ULL;
        data[563] = 0x0000500050800000ULL;
        data[576] = 0x0080500050000000ULL;
        data[584] = 0x0408500050880000ULL;
        data[597] = 0x0088500050080000ULL;
        data[600] = 0x0080500050800000ULL;
        data[601] = 0x0000500050080000ULL;
        data[612] = 0x0008500050000000ULL;
        data[621] = 0x0088500050880000ULL;
        data[625] = 0x0000500050880000ULL;
        data[636] = 0x0008500050800000ULL;
        data[638] = 0x0080500050080000ULL;
        data[649] = 0x0488500050000000ULL;
        data[653] = 0x0000500050000000ULL;
        data[674] = 0x0408500050080400ULL;
        data[684] = 0x0080500050880000ULL;
        data[695] = 0x0088500050800000ULL;
        data[699] = 0x0000500050800000ULL;
        data[712] = 0x0080500050000000ULL;
        data[720] = 0x0008500050880402ULL;
        data[721] = 0x0008500050000000ULL;
        data[733] = 0x0488500050080402ULL;
        data[736] = 0x0080500050800000ULL;
        data[737] = 0x0000500050080402ULL;
        data[756] = 0x0488500050880400ULL;
        data[760] = 0x0000500050880400ULL;
        data[767] = 0x0408500050800000ULL;
        data[774] = 0x0080500050080400ULL;
        data[780] = 0x0088500050000000ULL;
        data[784] = 0x0000500050000000ULL;
        data[804] = 0x0088500050800000ULL;
        data[805] = 0x0008500050080000ULL;
        data[808] = 0x0000500050800000ULL;
        data[820] = 0x0080500050880402ULL;
        data[821] = 0x0080500050000000ULL;
        data[829] = 0x0008500050880000ULL;
        data[842] = 0x0488500050080000ULL;
        data[846] = 0x0000500050080000ULL;
        data[857] = 0x0408500050000000ULL;
        data[867] = 0x0080500050800000ULL;
        data[888] = 0x0088500050880000ULL;
        data[892] = 0x0000500050880000ULL;
        data[903] = 0x0008500050800000ULL;
        data[905] = 0x0080500050080000ULL;
        data[916] = 0x0488500050000000ULL;
        data[920] = 0x0000500050000000ULL;
        data[929] = 0x0080500050880000ULL;
        data[940] = 0x0488500050800000ULL;
        data[941] = 0x0408500050080402ULL;
        data[944] = 0x0000500050800000ULL;
        data[957] = 0x0080500050000000ULL;
        data[964] = 0x0408500050880400ULL;
        data[978] = 0x0088500050080400ULL;
        data[982] = 0x0000500050080400ULL;
        data[988] = 0x0008500050000000ULL;
        data[1003] = 0x0080500050800000ULL;
        data[1012] = 0x0008500050800000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(472);
        data[0] = 0x0810a000a0100804ULL;
        data[15] = 0x0000a000a0000000ULL;
        data[27] = 0x0010a000a0100000ULL;
        data[43] = 0x0000a000a0000000ULL;
        data[67] = 0x0810a000a0100000ULL;
        data[81] = 0x0000a000a0100800ULL;
        data[82] = 0x0000a000a0000000ULL;
        data[85] = 0x0010a000a0000000ULL;
        data[125] = 0x0810a000a0000000ULL;
        data[137] = 0x0000a000a0100804ULL;
        data[153] = 0x0010a000a0000000ULL;
        data[165] = 0x0000a000a0100000ULL;
        data[205] = 0x0000a000a0100000ULL;
        data[208] = 0x0010a000a0100804ULL;
        data[209] = 0x0810a000a0000000ULL;
        data[223] = 0x0000a000a0000000ULL;
        data[247] = 0x0810a000a0100800ULL;
        data[263] = 0x0000a000a0000000ULL;
        data[275] = 0x0010a000a0100000ULL;
        data[290] = 0x0000a000a0000000ULL;
        data[331] = 0x0810a000a0100000ULL;
        data[333] = 0x0010a000a0000000ULL;
        data[345] = 0x0000a000a0100804ULL;
        data[347] = 0x0000a000a0000000ULL;
        data[385] = 0x0000a000a0100800ULL;
        data[389] = 0x0810a000a0000000ULL;
        data[413] = 0x0000a000a0100000ULL;
        data[417] = 0x0010a000a0000000ULL;
        data[455] = 0x0010a000a0100800ULL;
        data[457] = 0x0810a000a0000000ULL;
        data[469] = 0x0000a000a0100000ULL;
        data[471] = 0x0000a000a0000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(492);
        data[0] = 0x1020400040201008ULL;
        data[10] = 0x0000400040201000ULL;
        data[27] = 0x1020400040200000ULL;
        data[45] = 0x1020400040000000ULL;
        data[56] = 0x0000400040000000ULL;
        data[61] = 0x0020400040201000ULL;
        data[73] = 0x1020400040000000ULL;
        data[77] = 0x0000400040201008ULL;
        data[94] = 0x1020400040200000ULL;
        data[104] = 0x0000400040200000ULL;
        data[107] = 0x0020400040000000ULL;
        data[122] = 0x0000400040000000ULL;
        data[128] = 0x0020400040201008ULL;
        data[138] = 0x0000400040201000ULL;
        data[139] = 0x1020400040000000ULL;
        data[150] = 0x0000400040000000ULL;
        data[155] = 0x0020400040200000ULL;
        data[171] = 0x0000400040200000ULL;
        data[173] = 0x0020400040000000ULL;
        data[184] = 0x0000400040000000ULL;
        data[201] = 0x0020400040000000ULL;
        data[205] = 0x0000400040201008ULL;
        data[216] = 0x0000400040000000ULL;
        data[222] = 0x0020400040200000ULL;
        data[232] = 0x0000400040200000ULL;
        data[250] = 0x0000400040000000ULL;
        data[267] = 0x0020400040000000ULL;
        data[278] = 0x0000400040000000ULL;
        data[299] = 0x0000400040200000ULL;
        data[344] = 0x0000400040000000ULL;
        data[445] = 0x1020400040201000ULL;
        data[491] = 0x1020400040000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x0402000204081020ULL;
        data[6] = 0x0402000200000000ULL;
        data[23] = 0x0402000204000000ULL;
        data[37] = 0x0002000204081000ULL;
        data[42] = 0x0002000204000000ULL;
        data[43] = 0x0002000200000000ULL;
        data[49] = 0x0002000200000000ULL;
        data[84] = 0x0402000204080000ULL;
        data[90] = 0x0402000204000000ULL;
        data[104] = 0x0002000204081020ULL;
        data[110] = 0x0002000200000000ULL;
        data[127] = 0x0002000204000000ULL;
        data[151] = 0x0402000204080000ULL;
        data[188] = 0x0002000204080000ULL;
        data[194] = 0x0002000204000000ULL;
        data[238] = 0x0402000200000000ULL;
        data[255] = 0x0002000204080000ULL;
        data[299] = 0x0402000200000000ULL;
        data[305] = 0x0402000200000000ULL;
        data[342] = 0x0002000200000000ULL;
        data[366] = 0x0402000200000000ULL;
        data[384] = 0x0402000204000000ULL;
        data[390] = 0x0402000200000000ULL;
        data[403] = 0x0002000200000000ULL;
        data[409] = 0x0002000200000000ULL;
        data[445] = 0x0402000204081000ULL;
        data[450] = 0x0402000204000000ULL;
        data[451] = 0x0402000200000000ULL;
        data[457] = 0x0402000200000000ULL;
        data[470] = 0x0002000200000000ULL;
        data[488] = 0x0002000204000000ULL;
        data[494] = 0x0002000200000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(499);
        data[0] = 0x0805000508102040ULL;
        data[1] = 0x0805000508000000ULL;
        data[32] = 0x0005000500000000ULL;
        data[47] = 0x0805000500000000ULL;
        data[76] = 0x0005000508000000ULL;
        data[91] = 0x0805000508000000ULL;
        data[106] = 0x0805000500000000ULL;
        data[122] = 0x0005000500000000ULL;
        data[150] = 0x0805000508100000ULL;
        data[165] = 0x0005000508102000ULL;
        data[197] = 0x0805000500000000ULL;
        data[198] = 0x0805000500000000ULL;
        data[212] = 0x0005000500000000ULL;
        data[213] = 0x0005000500000000ULL;
        data[240] = 0x0805000508100000ULL;
        data[242] = 0x0805000508000000ULL;
        data[256] = 0x0005000508102040ULL;
        data[257] = 0x0005000508000000ULL;
        data[288] = 0x0805000500000000ULL;
        data[303] = 0x0005000500000000ULL;
        data[332] = 0x0805000508000000ULL;
        data[347] = 0x0005000508000000ULL;
        data[362] = 0x0005000500000000ULL;
        data[378] = 0x0805000500000000ULL;
        data[406] = 0x0005000508100000ULL;
        data[421] = 0x0805000508102000ULL;
        data[453] = 0x0005000500000000ULL;
        data[454] = 0x0005000500000000ULL;
        data[468] = 0x0805000500000000ULL;
        data[469] = 0x0805000500000000ULL;
        data[496] = 0x0005000508100000ULL;
        data[498] = 0x0005000508000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_19_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x110a000a11204080ULL;
        data[1] = 0x110a000a01000000ULL;
        data[6] = 0x110a000a10204000ULL;
        data[7] = 0x110a000a00000000ULL;
        data[12] = 0x000a000a01000000ULL;
        data[19] = 0x000a000a00000000ULL;
        data[21] = 0x100a000a11204000ULL;
        data[22] = 0x110a000a10204080ULL;
        data[23] = 0x100a000a01000000ULL;
        data[24] = 0x110a000a00000000ULL;
        data[35] = 0x000a000a00000000ULL;
        data[38] = 0x100a000a11204080ULL;
        data[40] = 0x100a000a01000000ULL;
        data[44] = 0x100a000a10204000ULL;
        data[46] = 0x100a000a00000000ULL;
        data[47] = 0x010a000a11200000ULL;
        data[61] = 0x100a000a10204080ULL;
        data[62] = 0x100a000a00000000ULL;
        data[63] = 0x010a000a11200000ULL;
        data[70] = 0x010a000a10200000ULL;
        data[74] = 0x110a000a01000000ULL;
        data[85] = 0x000a000a11200000ULL;
        data[86] = 0x010a000a10200000ULL;
        data[91] = 0x110a000a01000000ULL;
        data[97] = 0x110a000a00000000ULL;
        data[102] = 0x000a000a11200000ULL;
        data[108] = 0x000a000a10200000ULL;
        data[113] = 0x100a000a01000000ULL;
        data[114] = 0x110a000a00000000ULL;
        data[125] = 0x000a000a10200000ULL;
        data[130] = 0x100a000a01000000ULL;
        data[133] = 0x110a000a11000000ULL;
        data[136] = 0x100a000a00000000ULL;
        data[137] = 0x010a000a11204000ULL;
        data[138] = 0x010a000a01000000ULL;
        data[150] = 0x110a000a11000000ULL;
        data[153] = 0x100a000a00000000ULL;
        data[154] = 0x010a000a11204080ULL;
        data[155] = 0x010a000a01000000ULL;
        data[156] = 0x110a000a10000000ULL;
        data[160] = 0x010a000a10204000ULL;
        data[161] = 0x010a000a00000000ULL;
        data[172] = 0x100a000a11000000ULL;
        data[173] = 0x110a000a10000000ULL;
        data[175] = 0x000a000a11204000ULL;
        data[176] = 0x010a000a10204080ULL;
        data[177] = 0x000a000a01000000ULL;
        data[178] = 0x010a000a00000000ULL;
        data[189] = 0x100a000a11000000ULL;
        data[192] = 0x000a000a11204080ULL;
        data[194] = 0x000a000a01000000ULL;
        data[195] = 0x100a000a10000000ULL;
        data[198] = 0x000a000a10204000ULL;
        data[200] = 0x000a000a00000000ULL;
        data[212] = 0x100a000a10000000ULL;
        data[215] = 0x000a000a10204080ULL;
        data[216] = 0x000a000a00000000ULL;
        data[224] = 0x110a000a11000000ULL;
        data[225] = 0x110a000a01000000ULL;
        data[228] = 0x010a000a01000000ULL;
        data[240] = 0x110a000a11000000ULL;
        data[242] = 0x110a000a01000000ULL;
        data[245] = 0x010a000a01000000ULL;
        data[246] = 0x110a000a10000000ULL;
        data[248] = 0x110a000a00000000ULL;
        data[251] = 0x010a000a00000000ULL;
        data[262] = 0x100a000a11000000ULL;
        data[263] = 0x110a000a10000000ULL;
        data[264] = 0x100a000a01000000ULL;
        data[265] = 0x110a000a00000000ULL;
        data[267] = 0x000a000a01000000ULL;
        data[268] = 0x010a000a00000000ULL;
        data[279] = 0x100a000a11000000ULL;
        data[280] = 0x100a000a01000000ULL;
        data[284] = 0x000a000a01000000ULL;
        data[285] = 0x100a000a10000000ULL;
        data[286] = 0x100a000a00000000ULL;
        data[287] = 0x010a000a11000000ULL;
        data[290] = 0x000a000a00000000ULL;
        data[302] = 0x100a000a10000000ULL;
        data[303] = 0x100a000a00000000ULL;
        data[304] = 0x010a000a11000000ULL;
        data[307] = 0x000a000a00000000ULL;
        data[310] = 0x010a000a10000000ULL;
        data[315] = 0x110a000a01000000ULL;
        data[326] = 0x000a000a11000000ULL;
        data[327] = 0x010a000a10000000ULL;
        data[332] = 0x110a000a01000000ULL;
        data[338] = 0x110a000a00000000ULL;
        data[343] = 0x000a000a11000000ULL;
        data[349] = 0x000a000a10000000ULL;
        data[354] = 0x100a000a01000000ULL;
        data[355] = 0x110a000a00000000ULL;
        data[366] = 0x000a000a10000000ULL;
        data[370] = 0x100a000a01000000ULL;
        data[377] = 0x100a000a00000000ULL;
        data[378] = 0x010a000a11000000ULL;
        data[379] = 0x010a000a01000000ULL;
        data[393] = 0x100a000a00000000ULL;
        data[394] = 0x010a000a11000000ULL;
        data[396] = 0x010a000a01000000ULL;
        data[400] = 0x010a000a10000000ULL;
        data[402] = 0x010a000a00000000ULL;
        data[405] = 0x110a000a11200000ULL;
        data[416] = 0x000a000a11000000ULL;
        data[417] = 0x010a000a10000000ULL;
        data[418] = 0x000a000a01000000ULL;
        data[419] = 0x010a000a00000000ULL;
        data[421] = 0x110a000a11200000ULL;
        data[428] = 0x110a000a10200000ULL;
        data[433] = 0x000a000a11000000ULL;
        data[434] = 0x000a000a01000000ULL;
        data[439] = 0x000a000a10000000ULL;
        data[440] = 0x000a000a00000000ULL;
        data[443] = 0x100a000a11200000ULL;
        data[444] = 0x110a000a10200000ULL;
        data[456] = 0x000a000a10000000ULL;
        data[457] = 0x000a000a00000000ULL;
        data[460] = 0x100a000a11200000ULL;
        data[466] = 0x100a000a10200000ULL;
        data[469] = 0x010a000a01000000ULL;
        data[483] = 0x100a000a10200000ULL;
        data[486] = 0x010a000a01000000ULL;
        data[492] = 0x010a000a00000000ULL;
        data[495] = 0x110a000a11204000ULL;
        data[496] = 0x110a000a01000000ULL;
        data[508] = 0x000a000a01000000ULL;
        data[509] = 0x010a000a00000000ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(506);
        data[0] = 0x2214001422418000ULL;
        data[4] = 0x0214001420400000ULL;
        data[10] = 0x2014001420408000ULL;
        data[12] = 0x0214001420000000ULL;
        data[13] = 0x2014001422410000ULL;
        data[15] = 0x0214001422010000ULL;
        data[24] = 0x2014001402000000ULL;
        data[26] = 0x0014001420000000ULL;
        data[41] = 0x0214001402010000ULL;
        data[44] = 0x2014001422408000ULL;
        data[45] = 0x2214001400000000ULL;
        data[46] = 0x0214001422000000ULL;
        data[51] = 0x0014001400000000ULL;
        data[54] = 0x2214001400000000ULL;
        data[55] = 0x0014001402010000ULL;
        data[56] = 0x0014001420000000ULL;
        data[57] = 0x2214001402010000ULL;
        data[59] = 0x0014001422000000ULL;
        data[67] = 0x2014001400000000ULL;
        data[74] = 0x2214001420408000ULL;
        data[77] = 0x2214001422410000ULL;
        data[85] = 0x0014001402000000ULL;
        data[87] = 0x2014001420400000ULL;
        data[88] = 0x2214001402000000ULL;
        data[90] = 0x0214001420000000ULL;
        data[98] = 0x2014001400000000ULL;
        data[101] = 0x2014001402000000ULL;
        data[108] = 0x2214001422408000ULL;
        data[115] = 0x0214001400000000ULL;
        data[118] = 0x2014001420408000ULL;
        data[119] = 0x0214001402010000ULL;
        data[120] = 0x0214001420000000ULL;
        data[121] = 0x2014001422400000ULL;
        data[123] = 0x0214001422000000ULL;
        data[129] = 0x0014001400000000ULL;
        data[130] = 0x2014001422010000ULL;
        data[131] = 0x2214001400000000ULL;
        data[134] = 0x0014001420000000ULL;
        data[149] = 0x0214001402000000ULL;
        data[151] = 0x2214001420400000ULL;
        data[160] = 0x0014001400000000ULL;
        data[162] = 0x2214001400000000ULL;
        data[163] = 0x0014001402000000ULL;
        data[165] = 0x2214001402000000ULL;
        data[171] = 0x0014001402010000ULL;
        data[175] = 0x2014001400000000ULL;
        data[182] = 0x2214001420408000ULL;
        data[185] = 0x2214001422400000ULL;
        data[192] = 0x0014001422418000ULL;
        data[193] = 0x0214001400000000ULL;
        data[194] = 0x2214001422010000ULL;
        data[196] = 0x2014001420400000ULL;
        data[198] = 0x0214001420000000ULL;
        data[204] = 0x2014001420000000ULL;
        data[207] = 0x2014001422010000ULL;
        data[224] = 0x0214001400000000ULL;
        data[227] = 0x0214001402000000ULL;
        data[233] = 0x2014001402010000ULL;
        data[235] = 0x0214001402010000ULL;
        data[237] = 0x0014001400000000ULL;
        data[238] = 0x2014001422000000ULL;
        data[239] = 0x2214001400000000ULL;
        data[246] = 0x0014001400000000ULL;
        data[249] = 0x0014001402010000ULL;
        data[256] = 0x0214001422418000ULL;
        data[260] = 0x2214001420400000ULL;
        data[266] = 0x0014001420408000ULL;
        data[268] = 0x2214001420000000ULL;
        data[269] = 0x0014001422410000ULL;
        data[271] = 0x2214001422010000ULL;
        data[280] = 0x0014001402000000ULL;
        data[282] = 0x2014001420000000ULL;
        data[297] = 0x2214001402010000ULL;
        data[300] = 0x0014001422408000ULL;
        data[301] = 0x0214001400000000ULL;
        data[302] = 0x2214001422000000ULL;
        data[307] = 0x2014001400000000ULL;
        data[310] = 0x0214001400000000ULL;
        data[311] = 0x2014001402010000ULL;
        data[312] = 0x2014001420000000ULL;
        data[313] = 0x0214001402010000ULL;
        data[315] = 0x2014001422000000ULL;
        data[323] = 0x0014001400000000ULL;
        data[330] = 0x0214001420408000ULL;
        data[333] = 0x0214001422410000ULL;
        data[341] = 0x2014001402000000ULL;
        data[343] = 0x0014001420400000ULL;
        data[344] = 0x0214001402000000ULL;
        data[346] = 0x2214001420000000ULL;
        data[354] = 0x0014001400000000ULL;
        data[357] = 0x0014001402000000ULL;
        data[364] = 0x0214001422408000ULL;
        data[371] = 0x2214001400000000ULL;
        data[374] = 0x0014001420408000ULL;
        data[375] = 0x2214001402010000ULL;
        data[376] = 0x2214001420000000ULL;
        data[377] = 0x0014001422400000ULL;
        data[379] = 0x2214001422000000ULL;
        data[385] = 0x2014001400000000ULL;
        data[386] = 0x0014001422010000ULL;
        data[387] = 0x0214001400000000ULL;
        data[390] = 0x2014001420000000ULL;
        data[405] = 0x2214001402000000ULL;
        data[407] = 0x0214001420400000ULL;
        data[416] = 0x2014001400000000ULL;
        data[418] = 0x0214001400000000ULL;
        data[419] = 0x2014001402000000ULL;
        data[421] = 0x0214001402000000ULL;
        data[427] = 0x2014001402010000ULL;
        data[431] = 0x0014001400000000ULL;
        data[438] = 0x0214001420408000ULL;
        data[441] = 0x0214001422400000ULL;
        data[448] = 0x2014001422418000ULL;
        data[449] = 0x2214001400000000ULL;
        data[450] = 0x0214001422010000ULL;
        data[452] = 0x0014001420400000ULL;
        data[454] = 0x2214001420000000ULL;
        data[460] = 0x0014001420000000ULL;
        data[463] = 0x0014001422010000ULL;
        data[480] = 0x2214001400000000ULL;
        data[483] = 0x2214001402000000ULL;
        data[489] = 0x0014001402010000ULL;
        data[491] = 0x2214001402010000ULL;
        data[493] = 0x2014001400000000ULL;
        data[494] = 0x0014001422000000ULL;
        data[495] = 0x0214001400000000ULL;
        data[502] = 0x2014001400000000ULL;
        data[505] = 0x2014001402010000ULL;
    }),
    AttackTable(mul_shift_33_e36aa5c613612997_rshift_15_mixin<0x7ff>, [](std::vector<uint64_t>& data) {
        data.resize(2047);
        data[0] = 0x4428002844820100ULL;
        data[5] = 0x0428002844000000ULL;
        data[14] = 0x4028002840800000ULL;
        data[37] = 0x4028002840000000ULL;
        data[47] = 0x4428002840000000ULL;
        data[68] = 0x4028002844820000ULL;
        data[73] = 0x0028002844000000ULL;
        data[77] = 0x4428002844800000ULL;
        data[100] = 0x4428002844020000ULL;
        data[115] = 0x4028002840000000ULL;
        data[145] = 0x4028002844800000ULL;
        data[149] = 0x0028002804020100ULL;
        data[177] = 0x4428002844000000ULL;
        data[190] = 0x4028002800000000ULL;
        data[221] = 0x4028002804020100ULL;
        data[227] = 0x0028002804000000ULL;
        data[253] = 0x4428002804020100ULL;
        data[268] = 0x4028002800000000ULL;
        data[298] = 0x4028002804000000ULL;
        data[321] = 0x4028002804020000ULL;
        data[331] = 0x4428002804000000ULL;
        data[373] = 0x0428002840800000ULL;
        data[399] = 0x4028002804000000ULL;
        data[400] = 0x4028002844020100ULL;
        data[450] = 0x0428002840800000ULL;
        data[477] = 0x4028002844000000ULL;
        data[526] = 0x0428002800000000ULL;
        data[594] = 0x0028002800000000ULL;
        data[604] = 0x0428002800000000ULL;
        data[626] = 0x0428002800000000ULL;
        data[657] = 0x0428002804020000ULL;
        data[672] = 0x0028002800000000ULL;
        data[673] = 0x0028002840800000ULL;
        data[698] = 0x4428002800000000ULL;
        data[704] = 0x0428002800000000ULL;
        data[705] = 0x0428002840000000ULL;
        data[734] = 0x0428002804000000ULL;
        data[736] = 0x0428002844820100ULL;
        data[750] = 0x0028002840800000ULL;
        data[773] = 0x0028002840000000ULL;
        data[776] = 0x4428002800000000ULL;
        data[777] = 0x4428002840800000ULL;
        data[783] = 0x0428002840000000ULL;
        data[804] = 0x0028002844820000ULL;
        data[813] = 0x0428002844800000ULL;
        data[836] = 0x0428002844020000ULL;
        data[845] = 0x4028002840800000ULL;
        data[851] = 0x0028002840000000ULL;
        data[854] = 0x4428002840800000ULL;
        data[877] = 0x4428002840000000ULL;
        data[881] = 0x0028002844800000ULL;
        data[908] = 0x4428002844820000ULL;
        data[913] = 0x0428002844000000ULL;
        data[922] = 0x4028002840800000ULL;
        data[926] = 0x0028002800000000ULL;
        data[955] = 0x4428002840000000ULL;
        data[957] = 0x0028002804020100ULL;
        data[985] = 0x4428002844800000ULL;
        data[989] = 0x0428002804020100ULL;
        data[998] = 0x4028002800000000ULL;
        data[1004] = 0x0028002800000000ULL;
        data[1030] = 0x4428002800000000ULL;
        data[1034] = 0x0028002804000000ULL;
        data[1057] = 0x0028002804020000ULL;
        data[1061] = 0x4428002804020100ULL;
        data[1067] = 0x0428002804000000ULL;
        data[1076] = 0x4028002800000000ULL;
        data[1098] = 0x4028002800000000ULL;
        data[1108] = 0x4428002800000000ULL;
        data[1129] = 0x4028002804020000ULL;
        data[1135] = 0x0028002804000000ULL;
        data[1136] = 0x0028002844020100ULL;
        data[1138] = 0x4428002804000000ULL;
        data[1161] = 0x4428002804020000ULL;
        data[1176] = 0x4028002800000000ULL;
        data[1177] = 0x4028002840000000ULL;
        data[1206] = 0x4028002804000000ULL;
        data[1208] = 0x4028002844820100ULL;
        data[1213] = 0x0028002844000000ULL;
        data[1239] = 0x4428002804000000ULL;
        data[1240] = 0x4428002844020100ULL;
        data[1255] = 0x4028002840000000ULL;
        data[1285] = 0x4028002844800000ULL;
        data[1308] = 0x4028002844020000ULL;
        data[1317] = 0x4428002844000000ULL;
        data[1385] = 0x4028002844000000ULL;
        data[1434] = 0x0428002800000000ULL;
        data[1461] = 0x4028002804020100ULL;
        data[1512] = 0x0428002800000000ULL;
        data[1513] = 0x0428002840800000ULL;
        data[1539] = 0x4028002804000000ULL;
        data[1581] = 0x0028002840800000ULL;
        data[1590] = 0x0428002840800000ULL;
        data[1613] = 0x0428002840000000ULL;
        data[1644] = 0x0428002844820000ULL;
        data[1658] = 0x0028002840800000ULL;
        data[1685] = 0x4428002840800000ULL;
        data[1691] = 0x0428002840000000ULL;
        data[1721] = 0x0428002844800000ULL;
        data[1734] = 0x0028002800000000ULL;
        data[1762] = 0x4428002840800000ULL;
        data[1766] = 0x0428002800000000ULL;
        data[1797] = 0x0428002804020100ULL;
        data[1812] = 0x0028002800000000ULL;
        data[1834] = 0x0028002800000000ULL;
        data[1838] = 0x4428002800000000ULL;
        data[1844] = 0x0428002800000000ULL;
        data[1865] = 0x0028002804020000ULL;
        data[1874] = 0x0428002804000000ULL;
        data[1897] = 0x0428002804020000ULL;
        data[1906] = 0x4028002800000000ULL;
        data[1912] = 0x0028002800000000ULL;
        data[1913] = 0x0028002840000000ULL;
        data[1916] = 0x4428002800000000ULL;
        data[1938] = 0x4428002800000000ULL;
        data[1942] = 0x0028002804000000ULL;
        data[1944] = 0x0028002844820100ULL;
        data[1969] = 0x4428002804020000ULL;
        data[1975] = 0x0428002804000000ULL;
        data[1976] = 0x0428002844020100ULL;
        data[1984] = 0x4028002800000000ULL;
        data[1985] = 0x4028002840800000ULL;
        data[1991] = 0x0028002840000000ULL;
        data[2016] = 0x4428002800000000ULL;
        data[2017] = 0x4428002840000000ULL;
        data[2021] = 0x0028002844800000ULL;
        data[2044] = 0x0028002844020000ULL;
        data[2046] = 0x4428002804000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x3ff>, [](std::vector<uint64_t>& data) {
        data.resize(1019);
        data[0] = 0x8850005088040201ULL;
        data[6] = 0x0050005000000000ULL;
        data[11] = 0x8050005008040200ULL;
        data[15] = 0x8050005000000000ULL;
        data[18] = 0x0850005000000000ULL;
        data[23] = 0x8850005008040000ULL;
        data[26] = 0x8850005000000000ULL;
        data[64] = 0x0050005088040201ULL;
        data[65] = 0x8850005000000000ULL;
        data[75] = 0x0850005088040000ULL;
        data[81] = 0x8850005008000000ULL;
        data[87] = 0x0050005008040000ULL;
        data[90] = 0x0050005000000000ULL;
        data[96] = 0x8050005008040000ULL;
        data[117] = 0x0850005080000000ULL;
        data[126] = 0x8050005080000000ULL;
        data[129] = 0x0050005000000000ULL;
        data[133] = 0x0850005088000000ULL;
        data[137] = 0x8050005000000000ULL;
        data[140] = 0x0850005000000000ULL;
        data[145] = 0x0050005008000000ULL;
        data[149] = 0x8850005000000000ULL;
        data[154] = 0x8050005008000000ULL;
        data[157] = 0x0850005008000000ULL;
        data[165] = 0x8850005008000000ULL;
        data[198] = 0x0850005000000000ULL;
        data[203] = 0x8850005008040200ULL;
        data[207] = 0x8850005000000000ULL;
        data[213] = 0x0050005000000000ULL;
        data[229] = 0x0050005008000000ULL;
        data[248] = 0x8050005080000000ULL;
        data[256] = 0x0850005088040201ULL;
        data[265] = 0x8050005088000000ULL;
        data[267] = 0x0050005008040200ULL;
        data[271] = 0x0050005000000000ULL;
        data[276] = 0x8050005008040201ULL;
        data[279] = 0x0850005008040000ULL;
        data[282] = 0x0850005000000000ULL;
        data[288] = 0x8850005008040000ULL;
        data[306] = 0x8050005080000000ULL;
        data[318] = 0x8850005080000000ULL;
        data[321] = 0x0850005000000000ULL;
        data[329] = 0x8850005000000000ULL;
        data[337] = 0x0850005008000000ULL;
        data[346] = 0x8850005008000000ULL;
        data[352] = 0x0050005008040000ULL;
        data[382] = 0x0050005080000000ULL;
        data[387] = 0x8050005088040000ULL;
        data[390] = 0x8050005080000000ULL;
        data[393] = 0x0050005000000000ULL;
        data[405] = 0x0850005000000000ULL;
        data[410] = 0x0050005008000000ULL;
        data[421] = 0x0850005008000000ULL;
        data[428] = 0x8050005080000000ULL;
        data[440] = 0x8850005080000000ULL;
        data[445] = 0x8050005088000000ULL;
        data[457] = 0x8850005088000000ULL;
        data[459] = 0x0850005008040200ULL;
        data[463] = 0x0850005000000000ULL;
        data[468] = 0x8850005008040201ULL;
        data[498] = 0x8850005080000000ULL;
        data[504] = 0x0050005080000000ULL;
        data[512] = 0x8050005080000000ULL;
        data[521] = 0x0050005088000000ULL;
        data[529] = 0x8050005088000000ULL;
        data[532] = 0x0050005008040201ULL;
        data[544] = 0x0850005008040000ULL;
        data[562] = 0x0050005080000000ULL;
        data[567] = 0x8050005088040200ULL;
        data[570] = 0x8050005080000000ULL;
        data[574] = 0x0850005080000000ULL;
        data[579] = 0x8850005088040000ULL;
        data[582] = 0x8850005080000000ULL;
        data[585] = 0x0850005000000000ULL;
        data[594] = 0x8050005000000000ULL;
        data[602] = 0x0850005008000000ULL;
        data[620] = 0x8850005080000000ULL;
        data[637] = 0x8850005088000000ULL;
        data[643] = 0x0050005088040000ULL;
        data[646] = 0x0050005080000000ULL;
        data[651] = 0x8050005088040000ULL;
        data[684] = 0x0050005080000000ULL;
        data[693] = 0x8050005080000000ULL;
        data[696] = 0x0850005080000000ULL;
        data[701] = 0x0050005088000000ULL;
        data[704] = 0x8850005080000000ULL;
        data[709] = 0x8050005088000000ULL;
        data[713] = 0x0850005088000000ULL;
        data[716] = 0x8050005000000000ULL;
        data[721] = 0x8850005088000000ULL;
        data[724] = 0x0850005008040201ULL;
        data[733] = 0x8050005008000000ULL;
        data[754] = 0x0850005080000000ULL;
        data[759] = 0x8850005088040200ULL;
        data[762] = 0x8850005080000000ULL;
        data[768] = 0x0050005080000000ULL;
        data[774] = 0x8050005000000000ULL;
        data[785] = 0x0050005088000000ULL;
        data[786] = 0x8850005000000000ULL;
        data[823] = 0x0050005088040200ULL;
        data[826] = 0x0050005080000000ULL;
        data[832] = 0x8050005088040201ULL;
        data[835] = 0x0850005088040000ULL;
        data[838] = 0x0850005080000000ULL;
        data[843] = 0x8850005088040000ULL;
        data[850] = 0x0050005000000000ULL;
        data[855] = 0x8050005008040000ULL;
        data[858] = 0x8050005000000000ULL;
        data[876] = 0x0850005080000000ULL;
        data[885] = 0x8850005080000000ULL;
        data[893] = 0x0850005088000000ULL;
        data[897] = 0x8050005000000000ULL;
        data[901] = 0x8850005088000000ULL;
        data[907] = 0x0050005088040000ULL;
        data[908] = 0x8850005000000000ULL;
        data[913] = 0x8050005008000000ULL;
        data[925] = 0x8850005008000000ULL;
        data[949] = 0x0050005080000000ULL;
        data[960] = 0x0850005080000000ULL;
        data[965] = 0x0050005088000000ULL;
        data[966] = 0x8850005000000000ULL;
        data[972] = 0x0050005000000000ULL;
        data[977] = 0x0850005088000000ULL;
        data[981] = 0x8050005000000000ULL;
        data[989] = 0x0050005008000000ULL;
        data[997] = 0x8050005008000000ULL;
        data[1015] = 0x0850005088040200ULL;
        data[1018] = 0x0850005080000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(502);
        data[0] = 0x10a000a010080402ULL;
        data[1] = 0x00a000a000000000ULL;
        data[18] = 0x00a000a010000000ULL;
        data[34] = 0x00a000a010000000ULL;
        data[100] = 0x00a000a000000000ULL;
        data[111] = 0x00a000a010080400ULL;
        data[117] = 0x00a000a000000000ULL;
        data[124] = 0x10a000a000000000ULL;
        data[128] = 0x00a000a010080402ULL;
        data[134] = 0x10a000a010080000ULL;
        data[141] = 0x10a000a000000000ULL;
        data[151] = 0x10a000a010080000ULL;
        data[217] = 0x10a000a000000000ULL;
        data[234] = 0x10a000a000000000ULL;
        data[250] = 0x10a000a010000000ULL;
        data[252] = 0x00a000a000000000ULL;
        data[262] = 0x00a000a010080000ULL;
        data[267] = 0x10a000a010000000ULL;
        data[269] = 0x00a000a000000000ULL;
        data[279] = 0x00a000a010080000ULL;
        data[345] = 0x00a000a000000000ULL;
        data[362] = 0x00a000a000000000ULL;
        data[368] = 0x10a000a000000000ULL;
        data[378] = 0x00a000a010000000ULL;
        data[385] = 0x10a000a000000000ULL;
        data[395] = 0x00a000a010000000ULL;
        data[402] = 0x10a000a010000000ULL;
        data[418] = 0x10a000a010000000ULL;
        data[484] = 0x10a000a000000000ULL;
        data[495] = 0x10a000a010080400ULL;
        data[496] = 0x00a000a000000000ULL;
        data[501] = 0x10a000a000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(505);
        data[0] = 0x2040004020100804ULL;
        data[3] = 0x0040004000000000ULL;
        data[13] = 0x0040004020100000ULL;
        data[22] = 0x2040004020000000ULL;
        data[26] = 0x0040004000000000ULL;
        data[36] = 0x0040004020000000ULL;
        data[47] = 0x0040004020100000ULL;
        data[69] = 0x0040004020000000ULL;
        data[178] = 0x0040004000000000ULL;
        data[201] = 0x0040004000000000ULL;
        data[212] = 0x0040004000000000ULL;
        data[222] = 0x0040004020100800ULL;
        data[225] = 0x2040004000000000ULL;
        data[235] = 0x0040004000000000ULL;
        data[245] = 0x0040004020000000ULL;
        data[248] = 0x2040004000000000ULL;
        data[256] = 0x0040004020100804ULL;
        data[259] = 0x2040004000000000ULL;
        data[269] = 0x2040004020100000ULL;
        data[278] = 0x0040004020000000ULL;
        data[282] = 0x2040004000000000ULL;
        data[292] = 0x2040004020000000ULL;
        data[303] = 0x2040004020100000ULL;
        data[325] = 0x2040004020000000ULL;
        data[434] = 0x2040004000000000ULL;
        data[457] = 0x2040004000000000ULL;
        data[468] = 0x2040004000000000ULL;
        data[478] = 0x2040004020100800ULL;
        data[481] = 0x0040004000000000ULL;
        data[491] = 0x2040004000000000ULL;
        data[501] = 0x2040004020000000ULL;
        data[504] = 0x0040004000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_3_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(502);
        data[0] = 0x0200020408102040ULL;
        data[10] = 0x0200020000000000ULL;
        data[40] = 0x0200020000000000ULL;
        data[46] = 0x0200020400000000ULL;
        data[65] = 0x0200020408000000ULL;
        data[77] = 0x0200020400000000ULL;
        data[87] = 0x0200020000000000ULL;
        data[95] = 0x0200020408000000ULL;
        data[97] = 0x0200020000000000ULL;
        data[117] = 0x0200020000000000ULL;
        data[128] = 0x0200020000000000ULL;
        data[142] = 0x0200020400000000ULL;
        data[152] = 0x0200020408100000ULL;
        data[172] = 0x0200020400000000ULL;
        data[174] = 0x0200020000000000ULL;
        data[183] = 0x0200020408100000ULL;
        data[193] = 0x0200020000000000ULL;
        data[205] = 0x0200020000000000ULL;
        data[223] = 0x0200020000000000ULL;
        data[229] = 0x0200020400000000ULL;
        data[260] = 0x0200020400000000ULL;
        data[270] = 0x0200020000000000ULL;
        data[280] = 0x0200020000000000ULL;
        data[300] = 0x0200020000000000ULL;
        data[311] = 0x0200020000000000ULL;
        data[357] = 0x0200020000000000ULL;
        data[388] = 0x0200020000000000ULL;
        data[394] = 0x0200020408000000ULL;
        data[424] = 0x0200020408000000ULL;
        data[471] = 0x0200020400000000ULL;
        data[481] = 0x0200020408102000ULL;
        data[501] = 0x0200020400000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_3_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(492);
        data[0] = 0x0500050810204080ULL;
        data[8] = 0x0500050800000000ULL;
        data[20] = 0x0500050000000000ULL;
        data[28] = 0x0500050000000000ULL;
        data[49] = 0x0500050000000000ULL;
        data[81] = 0x0500050000000000ULL;
        data[89] = 0x0500050000000000ULL;
        data[92] = 0x0500050800000000ULL;
        data[110] = 0x0500050000000000ULL;
        data[130] = 0x0500050810000000ULL;
        data[154] = 0x0500050800000000ULL;
        data[174] = 0x0500050000000000ULL;
        data[191] = 0x0500050810000000ULL;
        data[194] = 0x0500050000000000ULL;
        data[203] = 0x0500050000000000ULL;
        data[235] = 0x0500050000000000ULL;
        data[256] = 0x0500050000000000ULL;
        data[264] = 0x0500050000000000ULL;
        data[276] = 0x0500050810000000ULL;
        data[284] = 0x0500050800000000ULL;
        data[305] = 0x0500050810200000ULL;
        data[337] = 0x0500050810000000ULL;
        data[345] = 0x0500050800000000ULL;
        data[348] = 0x0500050000000000ULL;
        data[366] = 0x0500050810200000ULL;
        data[386] = 0x0500050000000000ULL;
        data[410] = 0x0500050000000000ULL;
        data[430] = 0x0500050800000000ULL;
        data[447] = 0x0500050000000000ULL;
        data[450] = 0x0500050810204000ULL;
        data[459] = 0x0500050800000000ULL;
        data[491] = 0x0500050800000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_5_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(512);
        data[0] = 0x0a000a1120408000ULL;
        data[21] = 0x0a000a0000000000ULL;
        data[32] = 0x0a000a0000000000ULL;
        data[40] = 0x0a000a0100000000ULL;
        data[76] = 0x0a000a1000000000ULL;
        data[77] = 0x0a000a1100000000ULL;
        data[87] = 0x0a000a1020400000ULL;
        data[95] = 0x0a000a1120000000ULL;
        data[109] = 0x0a000a0000000000ULL;
        data[117] = 0x0a000a0100000000ULL;
        data[127] = 0x0a000a0000000000ULL;
        data[128] = 0x0a000a0100000000ULL;
        data[164] = 0x0a000a1000000000ULL;
        data[172] = 0x0a000a1100000000ULL;
        data[183] = 0x0a000a1120400000ULL;
        data[204] = 0x0a000a0000000000ULL;
        data[205] = 0x0a000a0100000000ULL;
        data[215] = 0x0a000a0000000000ULL;
        data[223] = 0x0a000a0100000000ULL;
        data[260] = 0x0a000a1100000000ULL;
        data[292] = 0x0a000a0000000000ULL;
        data[300] = 0x0a000a0100000000ULL;
        data[311] = 0x0a000a0100000000ULL;
        data[328] = 0x0a000a1020000000ULL;
        data[388] = 0x0a000a0100000000ULL;
        data[405] = 0x0a000a1000000000ULL;
        data[416] = 0x0a000a1020408000ULL;
        data[424] = 0x0a000a1120000000ULL;
        data[456] = 0x0a000a0000000000ULL;
        data[493] = 0x0a000a1000000000ULL;
        data[501] = 0x0a000a1100000000ULL;
        data[511] = 0x0a000a1020000000ULL;
    }),
    AttackTable(RightShift<30>::hash, [](std::vector<uint64_t>& data) {
        data.resize(20618);
        data[0] = 0x1400142241800000ULL;
        data[1] = 0x1400142241000000ULL;
        data[8] = 0x1400142240800000ULL;
        data[9] = 0x1400142240000000ULL;
        data[128] = 0x1400142201000000ULL;
        data[129] = 0x1400142201000000ULL;
        data[136] = 0x1400142200000000ULL;
        data[137] = 0x1400142200000000ULL;
        data[4096] = 0x1400142040800000ULL;
        data[4097] = 0x1400142040000000ULL;
        data[4104] = 0x1400142040800000ULL;
        data[4105] = 0x1400142040000000ULL;
        data[4224] = 0x1400142000000000ULL;
        data[4225] = 0x1400142000000000ULL;
        data[4232] = 0x1400142000000000ULL;
        data[4233] = 0x1400142000000000ULL;
        data[16384] = 0x1400140201000000ULL;
        data[16385] = 0x1400140201000000ULL;
        data[16392] = 0x1400140200000000ULL;
        data[16393] = 0x1400140200000000ULL;
        data[16512] = 0x1400140201000000ULL;
        data[16513] = 0x1400140201000000ULL;
        data[16520] = 0x1400140200000000ULL;
        data[16521] = 0x1400140200000000ULL;
        data[20480] = 0x1400140000000000ULL;
        data[20481] = 0x1400140000000000ULL;
        data[20488] = 0x1400140000000000ULL;
        data[20489] = 0x1400140000000000ULL;
        data[20608] = 0x1400140000000000ULL;
        data[20609] = 0x1400140000000000ULL;
        data[20616] = 0x1400140000000000ULL;
        data[20617] = 0x1400140000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x2800284482010000ULL;
        data[17] = 0x2800280400000000ULL;
        data[32] = 0x2800280000000000ULL;
        data[59] = 0x2800280402000000ULL;
        data[77] = 0x2800284402010000ULL;
        data[83] = 0x2800284080000000ULL;
        data[109] = 0x2800280000000000ULL;
        data[128] = 0x2800280402010000ULL;
        data[160] = 0x2800284000000000ULL;
        data[179] = 0x2800284480000000ULL;
        data[205] = 0x2800280402010000ULL;
        data[211] = 0x2800280000000000ULL;
        data[228] = 0x2800284080000000ULL;
        data[256] = 0x2800284400000000ULL;
        data[270] = 0x2800284080000000ULL;
        data[288] = 0x2800280000000000ULL;
        data[305] = 0x2800284000000000ULL;
        data[307] = 0x2800280400000000ULL;
        data[324] = 0x2800284480000000ULL;
        data[347] = 0x2800284000000000ULL;
        data[356] = 0x2800280000000000ULL;
        data[366] = 0x2800284482000000ULL;
        data[384] = 0x2800280400000000ULL;
        data[398] = 0x2800280000000000ULL;
        data[401] = 0x2800284400000000ULL;
        data[416] = 0x2800284080000000ULL;
        data[433] = 0x2800280000000000ULL;
        data[443] = 0x2800284402000000ULL;
        data[452] = 0x2800280400000000ULL;
        data[475] = 0x2800280000000000ULL;
        data[493] = 0x2800284000000000ULL;
        data[494] = 0x2800280402000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x5000508804020100ULL;
        data[29] = 0x5000508000000000ULL;
        data[33] = 0x5000500000000000ULL;
        data[64] = 0x5000500000000000ULL;
        data[72] = 0x5000500800000000ULL;
        data[102] = 0x5000500800000000ULL;
        data[107] = 0x5000508800000000ULL;
        data[136] = 0x5000508000000000ULL;
        data[137] = 0x5000508800000000ULL;
        data[166] = 0x5000508000000000ULL;
        data[171] = 0x5000500000000000ULL;
        data[190] = 0x5000508804000000ULL;
        data[201] = 0x5000500000000000ULL;
        data[221] = 0x5000508804000000ULL;
        data[225] = 0x5000500804020000ULL;
        data[254] = 0x5000500000000000ULL;
        data[256] = 0x5000500804020100ULL;
        data[285] = 0x5000500000000000ULL;
        data[289] = 0x5000508000000000ULL;
        data[320] = 0x5000508000000000ULL;
        data[328] = 0x5000508800000000ULL;
        data[358] = 0x5000508800000000ULL;
        data[363] = 0x5000500800000000ULL;
        data[392] = 0x5000500000000000ULL;
        data[393] = 0x5000500800000000ULL;
        data[422] = 0x5000500000000000ULL;
        data[427] = 0x5000508000000000ULL;
        data[446] = 0x5000500804000000ULL;
        data[457] = 0x5000508000000000ULL;
        data[477] = 0x5000500804000000ULL;
        data[481] = 0x5000508804020000ULL;
        data[510] = 0x5000508000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0xa000a01008040201ULL;
        data[37] = 0xa000a00000000000ULL;
        data[54] = 0xa000a01000000000ULL;
        data[58] = 0xa000a00000000000ULL;
        data[66] = 0xa000a00000000000ULL;
        data[115] = 0xa000a01000000000ULL;
        data[123] = 0xa000a01000000000ULL;
        data[128] = 0xa000a00000000000ULL;
        data[144] = 0xa000a01000000000ULL;
        data[182] = 0xa000a00000000000ULL;
        data[185] = 0xa000a01000000000ULL;
        data[205] = 0xa000a01000000000ULL;
        data[214] = 0xa000a01000000000ULL;
        data[243] = 0xa000a00000000000ULL;
        data[251] = 0xa000a00000000000ULL;
        data[272] = 0xa000a00000000000ULL;
        data[275] = 0xa000a01000000000ULL;
        data[291] = 0xa000a01008000000ULL;
        data[313] = 0xa000a00000000000ULL;
        data[333] = 0xa000a00000000000ULL;
        data[342] = 0xa000a00000000000ULL;
        data[352] = 0xa000a01008000000ULL;
        data[360] = 0xa000a01008040000ULL;
        data[381] = 0xa000a01008000000ULL;
        data[403] = 0xa000a00000000000ULL;
        data[419] = 0xa000a00000000000ULL;
        data[421] = 0xa000a01008040200ULL;
        data[442] = 0xa000a01008000000ULL;
        data[450] = 0xa000a01008040000ULL;
        data[480] = 0xa000a00000000000ULL;
        data[488] = 0xa000a00000000000ULL;
        data[509] = 0xa000a00000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_7_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x4000402010080402ULL;
        data[33] = 0x4000400000000000ULL;
        data[38] = 0x4000402000000000ULL;
        data[70] = 0x4000402010000000ULL;
        data[75] = 0x4000400000000000ULL;
        data[109] = 0x4000402000000000ULL;
        data[114] = 0x4000400000000000ULL;
        data[117] = 0x4000400000000000ULL;
        data[133] = 0x4000400000000000ULL;
        data[155] = 0x4000400000000000ULL;
        data[172] = 0x4000400000000000ULL;
        data[192] = 0x4000402010000000ULL;
        data[209] = 0x4000402010080000ULL;
        data[231] = 0x4000402000000000ULL;
        data[247] = 0x4000402000000000ULL;
        data[250] = 0x4000402010000000ULL;
        data[256] = 0x4000400000000000ULL;
        data[289] = 0x4000402000000000ULL;
        data[294] = 0x4000400000000000ULL;
        data[326] = 0x4000400000000000ULL;
        data[331] = 0x4000402010080400ULL;
        data[365] = 0x4000400000000000ULL;
        data[370] = 0x4000402000000000ULL;
        data[373] = 0x4000402010000000ULL;
        data[389] = 0x4000402010080000ULL;
        data[411] = 0x4000402000000000ULL;
        data[428] = 0x4000402000000000ULL;
        data[448] = 0x4000400000000000ULL;
        data[465] = 0x4000400000000000ULL;
        data[487] = 0x4000400000000000ULL;
        data[503] = 0x4000400000000000ULL;
        data[506] = 0x4000400000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(507);
        data[0] = 0x0002040810204080ULL;
        data[3] = 0x0002040810000000ULL;
        data[10] = 0x0002000000000000ULL;
        data[13] = 0x0002000000000000ULL;
        data[24] = 0x0002000000000000ULL;
        data[40] = 0x0002000000000000ULL;
        data[43] = 0x0002000000000000ULL;
        data[46] = 0x0002040000000000ULL;
        data[49] = 0x0002040000000000ULL;
        data[65] = 0x0002040800000000ULL;
        data[77] = 0x0002040000000000ULL;
        data[80] = 0x0002040000000000ULL;
        data[87] = 0x0002000000000000ULL;
        data[90] = 0x0002000000000000ULL;
        data[95] = 0x0002040800000000ULL;
        data[97] = 0x0002000000000000ULL;
        data[100] = 0x0002000000000000ULL;
        data[117] = 0x0002000000000000ULL;
        data[120] = 0x0002000000000000ULL;
        data[128] = 0x0002000000000000ULL;
        data[131] = 0x0002000000000000ULL;
        data[142] = 0x0002040000000000ULL;
        data[152] = 0x0002040810000000ULL;
        data[172] = 0x0002040000000000ULL;
        data[174] = 0x0002000000000000ULL;
        data[177] = 0x0002000000000000ULL;
        data[183] = 0x0002040810000000ULL;
        data[193] = 0x0002000000000000ULL;
        data[205] = 0x0002000000000000ULL;
        data[208] = 0x0002000000000000ULL;
        data[213] = 0x0002040800000000ULL;
        data[223] = 0x0002000000000000ULL;
        data[229] = 0x0002040000000000ULL;
        data[244] = 0x0002040800000000ULL;
        data[260] = 0x0002040000000000ULL;
        data[270] = 0x0002000000000000ULL;
        data[280] = 0x0002000000000000ULL;
        data[290] = 0x0002040000000000ULL;
        data[300] = 0x0002000000000000ULL;
        data[301] = 0x0002040810200000ULL;
        data[311] = 0x0002000000000000ULL;
        data[321] = 0x0002040000000000ULL;
        data[331] = 0x0002040810204000ULL;
        data[341] = 0x0002000000000000ULL;
        data[357] = 0x0002000000000000ULL;
        data[372] = 0x0002000000000000ULL;
        data[378] = 0x0002040000000000ULL;
        data[388] = 0x0002000000000000ULL;
        data[394] = 0x0002040800000000ULL;
        data[397] = 0x0002040800000000ULL;
        data[408] = 0x0002040000000000ULL;
        data[418] = 0x0002000000000000ULL;
        data[424] = 0x0002040800000000ULL;
        data[427] = 0x0002040800000000ULL;
        data[429] = 0x0002000000000000ULL;
        data[449] = 0x0002000000000000ULL;
        data[459] = 0x0002000000000000ULL;
        data[471] = 0x0002040000000000ULL;
        data[474] = 0x0002040000000000ULL;
        data[481] = 0x0002040810200000ULL;
        data[484] = 0x0002040810000000ULL;
        data[501] = 0x0002040000000000ULL;
        data[504] = 0x0002040000000000ULL;
        data[506] = 0x0002000000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_11_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(492);
        data[0] = 0x0005081020408000ULL;
        data[8] = 0x0005080000000000ULL;
        data[20] = 0x0005000000000000ULL;
        data[28] = 0x0005000000000000ULL;
        data[49] = 0x0005000000000000ULL;
        data[81] = 0x0005000000000000ULL;
        data[89] = 0x0005000000000000ULL;
        data[92] = 0x0005080000000000ULL;
        data[110] = 0x0005000000000000ULL;
        data[130] = 0x0005081000000000ULL;
        data[154] = 0x0005080000000000ULL;
        data[174] = 0x0005000000000000ULL;
        data[191] = 0x0005081000000000ULL;
        data[194] = 0x0005000000000000ULL;
        data[203] = 0x0005000000000000ULL;
        data[235] = 0x0005000000000000ULL;
        data[256] = 0x0005000000000000ULL;
        data[264] = 0x0005000000000000ULL;
        data[276] = 0x0005081000000000ULL;
        data[284] = 0x0005080000000000ULL;
        data[305] = 0x0005081020000000ULL;
        data[337] = 0x0005081000000000ULL;
        data[345] = 0x0005080000000000ULL;
        data[348] = 0x0005000000000000ULL;
        data[366] = 0x0005081020000000ULL;
        data[386] = 0x0005000000000000ULL;
        data[410] = 0x0005000000000000ULL;
        data[430] = 0x0005080000000000ULL;
        data[447] = 0x0005000000000000ULL;
        data[450] = 0x0005081020400000ULL;
        data[459] = 0x0005080000000000ULL;
        data[491] = 0x0005080000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x000a112040800000ULL;
        data[5] = 0x000a000000000000ULL;
        data[8] = 0x000a000000000000ULL;
        data[43] = 0x000a110000000000ULL;
        data[45] = 0x000a112040000000ULL;
        data[51] = 0x000a000000000000ULL;
        data[53] = 0x000a000000000000ULL;
        data[101] = 0x000a100000000000ULL;
        data[104] = 0x000a102040800000ULL;
        data[138] = 0x000a010000000000ULL;
        data[147] = 0x000a100000000000ULL;
        data[149] = 0x000a102040000000ULL;
        data[179] = 0x000a010000000000ULL;
        data[183] = 0x000a010000000000ULL;
        data[225] = 0x000a010000000000ULL;
        data[234] = 0x000a112000000000ULL;
        data[242] = 0x000a000000000000ULL;
        data[275] = 0x000a110000000000ULL;
        data[279] = 0x000a112000000000ULL;
        data[283] = 0x000a000000000000ULL;
        data[287] = 0x000a000000000000ULL;
        data[321] = 0x000a110000000000ULL;
        data[329] = 0x000a000000000000ULL;
        data[338] = 0x000a102000000000ULL;
        data[379] = 0x000a100000000000ULL;
        data[383] = 0x000a102000000000ULL;
        data[413] = 0x000a010000000000ULL;
        data[416] = 0x000a010000000000ULL;
        data[425] = 0x000a100000000000ULL;
        data[459] = 0x000a010000000000ULL;
        data[461] = 0x000a010000000000ULL;
        data[509] = 0x000a110000000000ULL;
    }),
    AttackTable(RightShift<38>::hash, [](std::vector<uint64_t>& data) {
        data.resize(20618);
        data[0] = 0x0014224180000000ULL;
        data[1] = 0x0014224100000000ULL;
        data[8] = 0x0014224080000000ULL;
        data[9] = 0x0014224000000000ULL;
        data[128] = 0x0014220100000000ULL;
        data[129] = 0x0014220100000000ULL;
        data[136] = 0x0014220000000000ULL;
        data[137] = 0x0014220000000000ULL;
        data[4096] = 0x0014204080000000ULL;
        data[4097] = 0x0014204000000000ULL;
        data[4104] = 0x0014204080000000ULL;
        data[4105] = 0x0014204000000000ULL;
        data[4224] = 0x0014200000000000ULL;
        data[4225] = 0x0014200000000000ULL;
        data[4232] = 0x0014200000000000ULL;
        data[4233] = 0x0014200000000000ULL;
        data[16384] = 0x0014020100000000ULL;
        data[16385] = 0x0014020100000000ULL;
        data[16392] = 0x0014020000000000ULL;
        data[16393] = 0x0014020000000000ULL;
        data[16512] = 0x0014020100000000ULL;
        data[16513] = 0x0014020100000000ULL;
        data[16520] = 0x0014020000000000ULL;
        data[16521] = 0x0014020000000000ULL;
        data[20480] = 0x0014000000000000ULL;
        data[20481] = 0x0014000000000000ULL;
        data[20488] = 0x0014000000000000ULL;
        data[20489] = 0x0014000000000000ULL;
        data[20608] = 0x0014000000000000ULL;
        data[20609] = 0x0014000000000000ULL;
        data[20616] = 0x0014000000000000ULL;
        data[20617] = 0x0014000000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(495);
        data[0] = 0x0028448201000000ULL;
        data[17] = 0x0028040000000000ULL;
        data[32] = 0x0028000000000000ULL;
        data[59] = 0x0028040200000000ULL;
        data[77] = 0x0028440201000000ULL;
        data[83] = 0x0028408000000000ULL;
        data[109] = 0x0028000000000000ULL;
        data[128] = 0x0028040201000000ULL;
        data[160] = 0x0028400000000000ULL;
        data[179] = 0x0028448000000000ULL;
        data[205] = 0x0028040201000000ULL;
        data[211] = 0x0028000000000000ULL;
        data[228] = 0x0028408000000000ULL;
        data[256] = 0x0028440000000000ULL;
        data[270] = 0x0028408000000000ULL;
        data[288] = 0x0028000000000000ULL;
        data[305] = 0x0028400000000000ULL;
        data[307] = 0x0028040000000000ULL;
        data[324] = 0x0028448000000000ULL;
        data[347] = 0x0028400000000000ULL;
        data[356] = 0x0028000000000000ULL;
        data[366] = 0x0028448200000000ULL;
        data[384] = 0x0028040000000000ULL;
        data[398] = 0x0028000000000000ULL;
        data[401] = 0x0028440000000000ULL;
        data[416] = 0x0028408000000000ULL;
        data[433] = 0x0028000000000000ULL;
        data[443] = 0x0028440200000000ULL;
        data[452] = 0x0028040000000000ULL;
        data[475] = 0x0028000000000000ULL;
        data[493] = 0x0028400000000000ULL;
        data[494] = 0x0028040200000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x0050880402010000ULL;
        data[29] = 0x0050800000000000ULL;
        data[33] = 0x0050000000000000ULL;
        data[64] = 0x0050000000000000ULL;
        data[72] = 0x0050080000000000ULL;
        data[102] = 0x0050080000000000ULL;
        data[107] = 0x0050880000000000ULL;
        data[136] = 0x0050800000000000ULL;
        data[137] = 0x0050880000000000ULL;
        data[166] = 0x0050800000000000ULL;
        data[171] = 0x0050000000000000ULL;
        data[190] = 0x0050880400000000ULL;
        data[201] = 0x0050000000000000ULL;
        data[221] = 0x0050880400000000ULL;
        data[225] = 0x0050080402000000ULL;
        data[254] = 0x0050000000000000ULL;
        data[256] = 0x0050080402010000ULL;
        data[285] = 0x0050000000000000ULL;
        data[289] = 0x0050800000000000ULL;
        data[320] = 0x0050800000000000ULL;
        data[328] = 0x0050880000000000ULL;
        data[358] = 0x0050880000000000ULL;
        data[363] = 0x0050080000000000ULL;
        data[392] = 0x0050000000000000ULL;
        data[393] = 0x0050080000000000ULL;
        data[422] = 0x0050000000000000ULL;
        data[427] = 0x0050800000000000ULL;
        data[446] = 0x0050080400000000ULL;
        data[457] = 0x0050800000000000ULL;
        data[477] = 0x0050080400000000ULL;
        data[481] = 0x0050880402000000ULL;
        data[510] = 0x0050800000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_15_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(510);
        data[0] = 0x00a0100804020100ULL;
        data[37] = 0x00a0000000000000ULL;
        data[54] = 0x00a0100000000000ULL;
        data[58] = 0x00a0000000000000ULL;
        data[66] = 0x00a0000000000000ULL;
        data[115] = 0x00a0100000000000ULL;
        data[123] = 0x00a0100000000000ULL;
        data[128] = 0x00a0000000000000ULL;
        data[144] = 0x00a0100000000000ULL;
        data[182] = 0x00a0000000000000ULL;
        data[185] = 0x00a0100000000000ULL;
        data[205] = 0x00a0100000000000ULL;
        data[214] = 0x00a0100000000000ULL;
        data[243] = 0x00a0000000000000ULL;
        data[251] = 0x00a0000000000000ULL;
        data[272] = 0x00a0000000000000ULL;
        data[275] = 0x00a0100000000000ULL;
        data[291] = 0x00a0100800000000ULL;
        data[313] = 0x00a0000000000000ULL;
        data[333] = 0x00a0000000000000ULL;
        data[342] = 0x00a0000000000000ULL;
        data[352] = 0x00a0100800000000ULL;
        data[360] = 0x00a0100804000000ULL;
        data[381] = 0x00a0100800000000ULL;
        data[403] = 0x00a0000000000000ULL;
        data[419] = 0x00a0000000000000ULL;
        data[421] = 0x00a0100804020000ULL;
        data[442] = 0x00a0100800000000ULL;
        data[450] = 0x00a0100804000000ULL;
        data[480] = 0x00a0000000000000ULL;
        data[488] = 0x00a0000000000000ULL;
        data[509] = 0x00a0000000000000ULL;
    }),
    AttackTable(mul_shift_31_81dadef4bc2dd44d_rshift_17_mixin<0x1ff>, [](std::vector<uint64_t>& data) {
        data.resize(511);
        data[0] = 0x0040201008040201ULL;
        data[25] = 0x0040000000000000ULL;
        data[26] = 0x0040200000000000ULL;
        data[29] = 0x0040000000000000ULL;
        data[40] = 0x0040200000000000ULL;
        data[55] = 0x0040000000000000ULL;
        data[61] = 0x0040200000000000ULL;
        data[70] = 0x0040000000000000ULL;
        data[71] = 0x0040200000000000ULL;
        data[79] = 0x0040201000000000ULL;
        data[91] = 0x0040000000000000ULL;
        data[92] = 0x0040200000000000ULL;
        data[100] = 0x0040000000000000ULL;
        data[107] = 0x0040200000000000ULL;
        data[110] = 0x0040201000000000ULL;
        data[121] = 0x0040000000000000ULL;
        data[124] = 0x0040201000000000ULL;
        data[136] = 0x0040000000000000ULL;
        data[137] = 0x0040200000000000ULL;
        data[145] = 0x0040201000000000ULL;
        data[155] = 0x0040201000000000ULL;
        data[166] = 0x0040000000000000ULL;
        data[176] = 0x0040201000000000ULL;
        data[178] = 0x0040000000000000ULL;
        data[190] = 0x0040201000000000ULL;
        data[208] = 0x0040000000000000ULL;
        data[217] = 0x0040200000000000ULL;
        data[221] = 0x0040201000000000ULL;
        data[223] = 0x0040000000000000ULL;
        data[244] = 0x0040000000000000ULL;
        data[247] = 0x0040200000000000ULL;
        data[253] = 0x0040000000000000ULL;
        data[262] = 0x0040200000000000ULL;
        data[274] = 0x0040000000000000ULL;
        data[283] = 0x0040200000000000ULL;
        data[289] = 0x0040000000000000ULL;
        data[292] = 0x0040200000000000ULL;
        data[313] = 0x0040200000000000ULL;
        data[315] = 0x0040000000000000ULL;
        data[320] = 0x0040000000000000ULL;
        data[328] = 0x0040200000000000ULL;
        data[346] = 0x0040000000000000ULL;
        data[358] = 0x0040200000000000ULL;
        data[360] = 0x0040000000000000ULL;
        data[370] = 0x0040201008000000ULL;
        data[381] = 0x0040000000000000ULL;
        data[391] = 0x0040000000000000ULL;
        data[399] = 0x0040000000000000ULL;
        data[400] = 0x0040201008040000ULL;
        data[412] = 0x0040000000000000ULL;
        data[415] = 0x0040201008000000ULL;
        data[427] = 0x0040000000000000ULL;
        data[430] = 0x0040000000000000ULL;
        data[436] = 0x0040201008000000ULL;
        data[444] = 0x0040000000000000ULL;
        data[445] = 0x0040201008040200ULL;
        data[457] = 0x0040000000000000ULL;
        data[465] = 0x0040000000000000ULL;
        data[466] = 0x0040201008040000ULL;
        data[475] = 0x0040000000000000ULL;
        data[481] = 0x0040201008000000ULL;
        data[496] = 0x0040000000000000ULL;
        data[507] = 0x0040200000000000ULL;
        data[510] = 0x0040000000000000ULL;
    }),
};

} /* namespace chess */
